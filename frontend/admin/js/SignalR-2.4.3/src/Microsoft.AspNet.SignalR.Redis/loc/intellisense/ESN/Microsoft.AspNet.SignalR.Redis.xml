<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.AspNet.SignalR.Redis</name>
  </assembly>
  <members>
    <member name="T:Microsoft.AspNet.SignalR.DependencyResolverExtensions">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.UseRedis(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.RedisScaleoutConfiguration)">
      <summary>Usar Redis como backplane de mensajería para la ampliación de las aplicaciones ASP.NET SignalR en una granja de servidores web.</summary>
      <returns>Resolución de dependencia.</returns>
      <param name="resolver">Resolución de dependencia.</param>
      <param name="configuration">Las opciones de ampliación de Redis.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.UseRedis(Microsoft.AspNet.SignalR.IDependencyResolver,System.String,System.Int32,System.String,System.String)">
      <summary>Usar Redis como backplane de mensajería para la ampliación de las aplicaciones ASP.NET SignalR en una granja de servidores web.</summary>
      <returns>Resolución de dependencia.</returns>
      <param name="resolver">Resolución de dependencia.</param>
      <param name="server">La dirección del servidor Redis.</param>
      <param name="port">El puerto del servidor Redis.</param>
      <param name="password">La contraseña del servidor Redis.</param>
      <param name="eventKey">La clave de evento Redis que se va a usar.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration">
      <summary>Configuración para la implementación del bus de mensajes de ampliación Redis.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration.#ctor(System.Func{BookSleeve.RedisConnection},System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration" />.</summary>
      <param name="connectionFactory">El generador de conexiones.</param>
      <param name="eventKey">La clave del evento.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration.#ctor(System.String,System.Int32,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration" />.</summary>
      <param name="server">El servidor.</param>
      <param name="port">El puerto.</param>
      <param name="password">Contraseña.</param>
      <param name="eventKey">La clave del evento.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration.Database">
      <summary>Obtiene o establece la instancia de base de datos Redis que se va a usar.El valor predeterminado es 0.</summary>
      <returns>La instancia de base de datos Redis que se va a usar.El valor predeterminado es 0.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration.EventKey">
      <summary>Obtiene o establece la clave de evento Redis que se va a usar. </summary>
      <returns>La clave de evento Redis que se va a usar.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException">
      <summary>La excepción que se lanza cuando se ha perdido la conexión Redis.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException" /> con la información serializada.</summary>
      <param name="info">La información serializada acerca de la excepción.</param>
      <param name="context">La información contextual acerca del origen o el destino.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException" /> con el mensaje de error.</summary>
      <param name="message">El mensaje de error que describe la excepción.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException" /> con el mensaje de error y la excepción interior.</summary>
      <param name="message">El mensaje de error que describe la excepción.</param>
      <param name="inner">La excepción interna que es la causa de la excepción actual.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Redis.RedisMessage">
      <summary>Representa un mensaje de Redis.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessage.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisMessage" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessage.FromBytes(System.Byte[])">
      <summary>Crea un mensaje de Redis a partir de los datos especificados.</summary>
      <returns>Mensaje de Redis recién creado.</returns>
      <param name="data">Datos que representan el mensaje.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Redis.RedisMessage.Id">
      <summary>Obtiene o establece el identificador del mensaje de Redis.</summary>
      <returns>Identificador del mensaje de Redis.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Redis.RedisMessage.ScaleoutMessage">
      <summary>Obtiene o establece el mensaje de Redis ampliado.</summary>
      <returns>Mensaje de Redis ampliado.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessage.ToBytes(System.Int64,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Convierte los mensajes en una matriz de bytes.</summary>
      <param name="id">Identificador del mensaje.</param>
      <param name="messages">Mensajes que se van a convertir.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Redis.RedisMessageBus">
      <summary>Representa un Service Bus para el mensaje de Redis.Utiliza pub-sub de Redis para la ampliación de aplicaciones SignalR en granjas de servidores web.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.RedisScaleoutConfiguration)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisMessageBus" />.</summary>
      <param name="resolver">Resolución de dependencia.</param>
      <param name="configuration">Configuración de bus de mensajes de Redis.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessageBus.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa la clase <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisMessageBus" /> y, opcionalmente, libera los recursos administrados.</summary>
      <param name="disposing">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Redis.RedisMessageBus.ReconnectDelay">
      <summary>Obtiene o establece el tiempo de espera del intento de reconexión.</summary>
      <returns>Tiempo de espera del intento de reconexión.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessageBus.Send(System.Int32,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Publica el mensaje especificado en el Service Bus.</summary>
      <returns>Tarea que representa la operación de envío de mensaje.</returns>
      <param name="streamIndex">Índice de la secuencia.</param>
      <param name="messages">Mensajes que se van a enviar.</param>
    </member>
  </members>
</doc>