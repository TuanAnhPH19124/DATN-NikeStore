<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.AspNet.SignalR.Redis</name>
  </assembly>
  <members>
    <member name="T:Microsoft.AspNet.SignalR.DependencyResolverExtensions">
      <summary>Содержимое здесь не обновляется; не добавляйте сюда материал.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.UseRedis(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.RedisScaleoutConfiguration)">
      <summary>Использует Redis в качестве объединительной платы сообщений для горизонтального масштабирования приложений ASP.NET SignalR на веб-ферме.</summary>
      <returns>Сопоставитель зависимостей.</returns>
      <param name="resolver">Сопоставитель зависимостей.</param>
      <param name="configuration">Параметры конфигурации горизонтального масштабирования Redis.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.UseRedis(Microsoft.AspNet.SignalR.IDependencyResolver,System.String,System.Int32,System.String,System.String)">
      <summary>Использует Redis в качестве объединительной платы сообщений для горизонтального масштабирования приложений ASP.NET SignalR на веб-ферме.</summary>
      <returns>Сопоставитель зависимостей.</returns>
      <param name="resolver">Сопоставитель зависимостей.</param>
      <param name="server">Адрес сервера Redis.</param>
      <param name="port">Порт сервера Redis.</param>
      <param name="password">Пароль сервера Redis.</param>
      <param name="eventKey">Используемый ключ события Redis.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration">
      <summary>Настройки внедрения канала сообщений горизонтального масштабирования Redis.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration.#ctor(System.Func{BookSleeve.RedisConnection},System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration" />.</summary>
      <param name="connectionFactory">Фабрика подключений.</param>
      <param name="eventKey">Ключ события.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration.#ctor(System.String,System.Int32,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration" />.</summary>
      <param name="server">Сервер.</param>
      <param name="port">Порт.</param>
      <param name="password">Пароль.</param>
      <param name="eventKey">Ключ события.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration.Database">
      <summary>Получает или задает используемый экземпляр базы данных Redis.Значение по умолчанию равно 0.</summary>
      <returns>Используемый экземпляр базы данных Redis.Значение по умолчанию равно 0.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.RedisScaleoutConfiguration.EventKey">
      <summary>Получает или задает используемый ключ события Redis. </summary>
      <returns>Используемый ключ события Redis.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException">
      <summary>Исключение, порождаемое при потере подключения Redis.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException" /> с сериализованными сведениями.</summary>
      <param name="info">Сериализованная информация об исключении.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException" /> с сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с описанием исключения.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisConnectionClosedException" /> с сообщением об ошибке и внутренним исключением.</summary>
      <param name="message">Сообщение об ошибке с описанием исключения.</param>
      <param name="inner">Внутреннее исключение, являющееся причиной текущего исключения.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Redis.RedisMessage">
      <summary>Представляет сообщение Redis.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessage.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisMessage" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessage.FromBytes(System.Byte[])">
      <summary>Создает сообщение Redis с использованием указанных данных.</summary>
      <returns>Новое сообщение Redis.</returns>
      <param name="data">Данные, которые представляют сообщение.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Redis.RedisMessage.Id">
      <summary>Получает или задает идентификатор сообщения Redis.</summary>
      <returns>Идентификатор сообщения Redis.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Redis.RedisMessage.ScaleoutMessage">
      <summary>Получает или задает масштабированное сообщение Redis.</summary>
      <returns>Масштабированное сообщение Redis.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessage.ToBytes(System.Int64,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Преобразовывает сообщения в массив байтов.</summary>
      <param name="id">Идентификатор сообщения.</param>
      <param name="messages">Преобразовываемые сообщения.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Redis.RedisMessageBus">
      <summary>Представляет Service Bus для сообщения Redis.Использует Redis pub-sub для горизонтального масштабирования приложений SignalR на веб-фермах.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.RedisScaleoutConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisMessageBus" />.</summary>
      <param name="resolver">Сопоставитель зависимостей.</param>
      <param name="configuration">Конфигурация канала сообщений Redis.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessageBus.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:Microsoft.AspNet.SignalR.Redis.RedisMessageBus" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Redis.RedisMessageBus.ReconnectDelay">
      <summary>Получает или задает время ожидания перед попыткой повторного подключения.</summary>
      <returns>Время ожидания перед попыткой повторного подключения.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Redis.RedisMessageBus.Send(System.Int32,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Публикует указанное сообщение в Service Bus.</summary>
      <returns>Задача, представляющая операцию отправки сообщения.</returns>
      <param name="streamIndex">Индекс потока.</param>
      <param name="messages">Отправляемые сообщения.</param>
    </member>
  </members>
</doc>