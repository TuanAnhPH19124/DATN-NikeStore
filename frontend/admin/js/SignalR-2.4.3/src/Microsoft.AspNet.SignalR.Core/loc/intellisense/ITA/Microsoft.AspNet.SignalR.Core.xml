<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.AspNet.SignalR.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.AspNet.SignalR.AuthorizeAttribute">
      <summary>Applicare agli hub e ai metodi dell'hub per autorizzare le connessioni del client agli hub e le chiamate dei metodi hub da parte del client.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.AuthorizeAttribute" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.AuthorizeAttribute._requireOutgoing">
      <summary>Specifica se applicare l'autorizzazione solo alle eventuali chiamate dei metodi dell'hub sul lato server.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Determina se il client è autorizzato a connettersi a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>true se il chiamante è autorizzato a connettersi all'hub. In caso contrario, false.</returns>
      <param name="hubDescriptor">Descrizione dell'hub a cui il client sta tentando di connettersi.</param>
      <param name="request">Richiesta di (ri)connessione da parte del client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>Determina se il client è autorizzato a richiamare il metodo di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>true se il chiamante è autorizzato a richiamare il metodo <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />. In caso contrario, false.</returns>
      <param name="hubIncomingInvokerContext">Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" /> contenente informazioni dettagliate sulla chiamata del metodo di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</param>
      <param name="appliesToMethod">true per indicare che l'istanza dell'interfaccia è un attributo applicato direttamente a un metodo. In caso contrariofalse.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.RequireOutgoing">
      <summary>Impostare su false per applicare l'autorizzazione solo alle chiamate dei metodi dell'hub sul lato server.Questa proprietà ha effetto solo sugli attributi applicati alla classe dell'hub.Questa proprietà non può essere letta.</summary>
      <returns>false per applicare l'autorizzazione solo alle chiamate dei metodi dell'hub sul lato server.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Roles">
      <summary>Ottiene o imposta i ruoli utente.</summary>
      <returns>Ruoli utente.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.UserAuthorized(System.Security.Principal.IPrincipal)">
      <summary>Quando sottoposto a override, fornisce un punto di ingresso per i controlli di autorizzazione personalizzati.Chiamato dai metodi <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)" /> e <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)" />.</summary>
      <returns>true se l'utente è autorizzato. In caso contrario, false.</returns>
      <param name="user">Interfaccia <see cref="T:System.Security.Principal.IPrincipal" /> per il client autorizzato.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Users">
      <summary>Ottiene o imposta gli utenti autorizzati.</summary>
      <returns>Utenti autorizzati.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionConfiguration">
      <summary>Rappresenta la configurazione di una connessione.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionConfiguration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.EnableJSONP">
      <summary>Ottiene o imposta un valore booleano che determina se JSONP è abilitato.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.Resolver">
      <summary>Ottiene o imposta il resolver di dipendenza da utilizzare per la connessione dell'hub.</summary>
      <returns>Resolver di dipendenza da utilizzare per la connessione dell'hub.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionExtensions">
      <summary>Fornisce i metodi di estensione da utilizzare per inviare il messaggio a tutte le connessioni che sottoscrivono il segnale specifico.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Broadcast(Microsoft.AspNet.SignalR.IConnection,System.Object,System.String[])">
      <summary>Trasmette un valore a tutte le connessioni, esclusi gli ID connessione specificati.</summary>
      <returns>Attività che rappresenta quando la trasmissione viene completata.</returns>
      <param name="connection">Connessione.</param>
      <param name="value">Valore da trasmettere.</param>
      <param name="excludeConnectionIds">Elenco di ID connessione da escludere nella trasmissione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.Collections.Generic.IList{System.String},System.Object)">
      <summary>Invia un messaggio alle connessioni sottoscritte al segnale specificato.Un esempio di segnale può essere un ID connessione specifico.</summary>
      <returns>Attività che rappresenta quando la trasmissione viene completata.</returns>
      <param name="connection">Connessione.</param>
      <param name="connectionIds">ID  connessione ai quali inviare.</param>
      <param name="value">Valore da pubblicare.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.String,System.Object)">
      <summary>Invia un messaggio alle connessioni sottoscritte al segnale specificato.Un esempio di segnale può essere un ID connessione specifico.</summary>
      <returns>Attività che rappresenta quando la trasmissione viene completata.</returns>
      <param name="connection">Connessione.</param>
      <param name="connectionId">Connessione alla quale inviare.</param>
      <param name="value">Valore da pubblicare.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionMessage">
      <summary>Messaggio inviato a una o più connessioni.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />.</summary>
      <param name="signal">Segnale.</param>
      <param name="value">Payload del messaggio.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object,System.Collections.Generic.IList{System.String})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />.</summary>
      <param name="signal">Segnale.</param>
      <param name="value">Payload del messaggio.</param>
      <param name="excludedSignals">Segnali da escludere.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.ExcludedSignals">
      <summary>Rappresenta un elenco di segnali da utilizzare per filtrare le connessioni che ricevono il messaggio.</summary>
      <returns>Restituisce <see cref="T:System.Collections.Generic.IList`1" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signal">
      <summary>Segnale al quale deve essere inviato il messaggio.Connessioni sottoscritte al segnale che ricevono il payload del messaggio.</summary>
      <returns>Restituisce <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signals">
      <summary>Elenco di segnali ai quali deve essere consegnati questo messaggio.Se utilizzato, non consente di utilizzare il segnale.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Value">
      <summary>Payload del messaggio.</summary>
      <returns>Restituisce <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Cookie">
      <summary>Rappresenta i cookie di SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Cookie" />.</summary>
      <param name="name">Nome della proprietà del cookie.</param>
      <param name="value">Valore della proprietà del cookie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Cookie" />.</summary>
      <param name="name">Nome della proprietà del cookie.</param>
      <param name="value">Valore della proprietà del cookie.</param>
      <param name="domain">Proprietà del dominio del cookie.</param>
      <param name="path">Percorso della proprietà del cookie.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Domain">
      <summary>Ottiene o imposta il dominio del cookie.</summary>
      <returns>Dominio del cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Name">
      <summary>Ottiene o imposta il nome del cookie.</summary>
      <returns>Nome del cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Path">
      <summary>Ottiene o imposta il percorso del cookie.</summary>
      <returns>Percorso del cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Value">
      <summary>Ottiene o imposta il valore del cookie.</summary>
      <returns>Valore del cookie.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver">
      <summary>Rappresenta un resolver di dipendenza con comportamento predefinito.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose">
      <summary>Rilascia tutte le risorse utilizzate dall'istanza corrente della classe <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite utilizzate dall'istanza corrente della classe <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" /> e, facoltativamente, quelle gestite.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite. false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetService(System.Type)">
      <summary>Risolve i singoli servizi registrati che supportano la creazione di oggetti arbitrari.</summary>
      <returns>Servizio o oggetto richiesto.</returns>
      <param name="serviceType">Tipo di servizio o oggetto richiesto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetServices(System.Type)">
      <summary>Risolve più servizi registrati.</summary>
      <returns>Servizi richiesti.</returns>
      <param name="serviceType">Tipo di servizi richiesti.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Registra i servizi specificati nel resolver di dipendenza.</summary>
      <param name="serviceType">Tipo di servizi da registrare.</param>
      <param name="activators">Servizi da registrare nel resolver di dipendenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Registra il servizio specificato nel resolver di dipendenza.</summary>
      <param name="serviceType">Tipo di servizio da registrare.</param>
      <param name="activator">Servizio da registrare nel resolver di dipendenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Risolve il tipo di estensioni.</summary>
      <returns>Restituisce un oggetto per risolvere il tipo di estensioni.</returns>
      <param name="resolver">Resolver di dipendenza.</param>
      <typeparam name="T">Tipo da risolvere.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Risolve il tipo di estensioni.</summary>
      <returns>Restituisce un oggetto per risolvere il tipo di estensioni.</returns>
      <param name="resolver">Resolver di dipendenza.</param>
      <param name="type">Tipo da risolvere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Risolve tutti i tipi di estensioni.</summary>
      <returns>Restituisce una raccolta di estensioni del tipo di risoluzione.</returns>
      <param name="resolver">Resolver di dipendenza.</param>
      <typeparam name="T">Tipo da risolvere.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Risolve tutti i tipi di estensioni.</summary>
      <returns>Restituisce una raccolta di estensioni del tipo di risoluzione.</returns>
      <param name="resolver">Resolver di dipendenza.</param>
      <param name="type">Tipo da risolvere.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GlobalHost">
      <summary>Consente l'accesso alle informazioni sull'host predefinite.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.Configuration">
      <summary>Ottiene l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" /> predefinita.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" /> predefinita.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.ConnectionManager">
      <summary>Ottiene l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" /> predefinita.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" /> predefinita.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.DependencyResolver">
      <summary>Ottiene o imposta l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /> predefinita.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /> predefinita.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.HubPipeline">
      <summary>Ottiene l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> predefinita.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> predefinita.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.TraceManager">
      <summary>Ottiene l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager" /> predefinita.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GroupManager">
      <summary>Gestisce i gruppi per una connessione.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.#ctor(Microsoft.AspNet.SignalR.IConnection,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.GroupManager" />.</summary>
      <param name="connection">Interfaccia <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> su cui risiede il gruppo.</param>
      <param name="groupPrefix">Prefisso per il gruppo.Nome dell'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> o nome del tipo di classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Add(System.String,System.String)">
      <summary>Aggiunge una connessione al gruppo specificato.</summary>
      <returns>Attività che rappresenta l'ID connessione che viene aggiunto al gruppo.</returns>
      <param name="connectionId">ID connessione da aggiungere al gruppo.</param>
      <param name="groupName">Nome del gruppo.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Remove(System.String,System.String)">
      <summary>Rimuove una connessione dal gruppo specificato.</summary>
      <returns>Attività che rappresenta l'ID connessione che viene rimosso dal gruppo.</returns>
      <param name="connectionId">ID connessione da rimuovere dal gruppo.</param>
      <param name="groupName">Nome del gruppo.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Invia un valore al gruppo specificato.</summary>
      <returns>Attività che rappresenta quando l'invio viene completato.</returns>
      <param name="groupNames">Nomi dei gruppi.</param>
      <param name="value">Valore da inviare.</param>
      <param name="excludeConnectionIds">Elenco di ID connessione da escludere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Invia un valore al gruppo specificato.</summary>
      <returns>Attività che rappresenta quando l'invio viene completato.</returns>
      <param name="groupName">Nome del gruppo.</param>
      <param name="value">Valore da inviare.</param>
      <param name="excludeConnectionIds">Elenco di ID connessione da escludere.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hub">
      <summary>Fornisce metodi che comunicano con connessioni SignalR stabilite a un oggetto <see cref="T:Microsoft.AspNet.SignalR.Hub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Clients">
      <summary>Ottiene o imposta i client che comunicano con le connessioni SignalR.</summary>
      <returns>I client che comunicano con le connessioni SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Context">
      <summary>Ottiene o imposta le informazioni sul client chiamante.</summary>
      <returns>Informazioni sul client chiamante.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose">
      <summary>Rilascia tutte le risorse utilizzate da questa istanza.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose(System.Boolean)">
      <summary>Rilascia tutte le risorse utilizzate da questa istanza.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite. false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Groups">
      <summary>Ottiene o imposta il gestore di gruppi per questa istanza dell'hub.</summary>
      <returns>Gestore di gruppi per questa istanza dell'hub.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnConnected">
      <summary>Si verifica quando viene stabilita la connessione a questa istanza dell'hub.</summary>
      <returns>Risultato dell'operazione.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnDisconnected">
      <summary>Si verifica quando viene interrotta la connessione da questa istanza dell'hub.</summary>
      <returns>Risultato dell'operazione.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnReconnected">
      <summary>Si verifica quando viene rieseguita la connessione a questa istanza dell'hub.</summary>
      <returns>Risultato dell'operazione.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubConfiguration">
      <summary>Rappresenta la configurazione di un hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubConfiguration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors">
      <summary>Determina se le eccezioni dettagliate generate nei metodi dell'hub vengono restituite al client che esegue la chiamata.L'impostazione predefinita è false.</summary>
      <returns>true se le eccezioni dettagliate generate nei metodi dell'hub vengono restituite al client che esegue la chiamata; in caso contrario false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableJavaScriptProxies">
      <summary>Determina se i proxy di JavaScript per gli hub sul lato server devono essere generati automaticamente in {percorso}/hubs.ll valore predefinito è true.</summary>
      <returns>true se i proxy di JavaScript per gli hub sul lato server devono essere generati automaticamente in {percorso}/hubs. In caso contrario false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubException"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String,System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.HubException.ErrorData"></member>
    <member name="T:Microsoft.AspNet.SignalR.HubPipelineExtensions">
      <summary>Fornisce i metodi di estensione per aggiungere la funzionalità personalizzata ai tipi di dati.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubPipelineExtensions.RequireAuthentication(Microsoft.AspNet.SignalR.Hubs.IHubPipeline)">
      <summary>La richiesta di autenticazione determina l'aggiunta di un oggetto <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> all'istanza <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> con i provider di autorizzazione <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection" /> e <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation" /> che verranno applicati globalmente a tutti gli hub e ai metodi dell'hub.Questi provider di autorizzazione richiedono l'impostazione della proprietà IsAuthenticated dell'interfaccia <see cref="T:System.Security.Principal.IIdentity" /> di <see cref="T:System.Security.Principal.IPrincipal" /> per i client che richiamano i metodi dell'hub sul lato server o ricevono chiamate del metodo dell'hub sul lato client.</summary>
      <param name="pipeline">Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> a cui verrà aggiunto l'oggetto <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnection">
      <summary>Canale di comunicazione per una classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> e le relative connessioni.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IConnection.DefaultSignal">
      <summary>Segnale principale per la connessione.SignalR principale per una classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Invia un messaggio alle connessioni sottoscritte al segnale.</summary>
      <returns>Attività che restituisce quando il messaggio è stato inviato.</returns>
      <param name="message">Messaggio da inviare.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnectionGroupManager">
      <summary>Gestisce i gruppi per una connessione e consente l'invio di messaggi al gruppo.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Invia un valore ai gruppi specificati.</summary>
      <returns>Attività che rappresenta quando l'invio viene completato.</returns>
      <param name="groupNames">Nomi dei gruppi.</param>
      <param name="value">Valore da inviare.</param>
      <param name="excludeConnectionIds">Elenco di ID connessione da escludere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Invia un valore al gruppo specificato.</summary>
      <returns>Attività che rappresenta quando l'invio viene completato.</returns>
      <param name="groupName">Nome del gruppo.</param>
      <param name="value">Valore da inviare.</param>
      <param name="excludeConnectionIds">Elenco di ID connessione da escludere.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IDependencyResolver">
      <summary>Fornisce un'interfaccia che rappresenta il resolver di dipendenza per SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetService(System.Type)">
      <summary>Restituisce il servizio per il tipo specificato.</summary>
      <returns>Servizio restituito.</returns>
      <param name="serviceType">Tipo del servizio da restituire.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetServices(System.Type)">
      <summary>Restituisce i servizi per il tipo specificato.</summary>
      <returns>Servizi restituiti.</returns>
      <param name="serviceType">Tipo del servizio da restituire.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Registra un elenco di servizi per il tipo specificato.</summary>
      <param name="serviceType">Tipo di servizio da registrare.</param>
      <param name="activators">Elenco di delegati della funzione che accetta un parametro rappresentante il servizio da attivare.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Registra un servizio per il tipo specificato.</summary>
      <param name="serviceType">Tipo di servizio da registrare.</param>
      <param name="activator">Delegato della funzione che accetta un parametro rappresentante il servizio da attivare.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IGroupManager">
      <summary>Gestisce i gruppi per una connessione.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Add(System.String,System.String)">
      <summary>Aggiunge una connessione al gruppo specificato.</summary>
      <returns>Attività che rappresenta l'ID connessione che viene aggiunto al gruppo.</returns>
      <param name="connectionId">ID connessione da aggiungere al gruppo.</param>
      <param name="groupName">Nome del gruppo.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Remove(System.String,System.String)">
      <summary>Rimuove una connessione dal gruppo specificato.</summary>
      <returns>Attività che rappresenta l'ID connessione che viene rimosso dal gruppo.</returns>
      <param name="connectionId">ID connessione da rimuovere dal gruppo.</param>
      <param name="groupName">Nome del gruppo.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IHubContext">
      <summary>Consente di accedere a informazioni su un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Clients">
      <summary>Incapsula tutte le informazioni su una connessione SignalR a un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Groups">
      <summary>Ottiene l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" /> dell'hub.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext">
      <summary>Consente di accedere a informazioni su un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Connection">
      <summary>Ottiene l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> per la classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Groups">
      <summary>Ottiene l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.IConnectionGroupManager" /> per la classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IRequest">
      <summary>Rappresenta una richiesta SignalR.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Cookies">
      <summary>Ottiene i cookie per la connessione client.</summary>
      <returns>Cookie per la connessione client.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Environment">
      <summary>Ottiene l'ambiente owin.</summary>
      <returns>Ambiente owin.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Headers">
      <summary>Ottiene o imposta le intestazioni per le richieste.</summary>
      <returns>Intestazioni per le richieste.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.LocalPath">
      <summary>Ottiene la parte del percorso locale dell'URL.</summary>
      <returns>Parte del percorso locale dell'URL.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.QueryString">
      <summary>Ottiene l'insieme delle variabili delle stringhe della query IRequest.</summary>
      <returns>Insieme delle variabili delle stringhe della query IRequest.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IRequest.ReadForm">
      <summary>Legge il modulo dalla richiesta http.</summary>
      <returns>Modulo della richiesta http da leggere.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Url">
      <summary>Ottiene l'URI della IRequest.</summary>
      <returns>URI per la IRequest.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.User">
      <summary>Ottiene l'utente principale per la IRequest.</summary>
      <returns>Utente principale per la IRequest.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.IUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.PersistentConnection">
      <summary> Rappresenta una connessione tra il client e il server </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.AckHandler">
      <summary>Ottiene o imposta il gestore ACK di questa connessione.</summary>
      <returns>Gestore ACK di questa connessione.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Authorize(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Determina se questa connessione è autorizzata.</summary>
      <returns>true se la connessione è autorizzata. In caso contrario, false.</returns>
      <param name="request">Richiesta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Determina se la richiesta di connessione è autorizzata.</summary>
      <returns>true se la richiesta di connessione è autorizzata. In caso contrario, false.</returns>
      <param name="request">Richiesta.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Connection">
      <summary>Ottiene o imposta la connessione.</summary>
      <returns>Connessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Counters">
      <summary>Ottiene o imposta il gestore dei contatori delle prestazioni.</summary>
      <returns>Gestore dei contatori delle prestazioni.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.GetSignals(System.String,System.String)">
      <summary>Restituisce i segnali utilizzati nella classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Segnali utilizzati per la classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="userId">ID utente per la connessione corrente.</param>
      <param name="connectionId">ID della connessione in ingresso.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Groups">
      <summary>Ottiene o imposta i gruppi di connessione.</summary>
      <returns>Gruppi di connessione.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.JsonSerializer">
      <summary>Ottiene o imposta il serializzatore JSON.</summary>
      <returns>Serializzatore JSON.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.MessageBus">
      <summary>Ottiene o imposta il bus di messaggi per la connessione.</summary>
      <returns>Bus di messaggi per la connessione.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chiamato quando viene stabilita una nuova connessione.</summary>
      <returns>Oggetto <see cref="T:System.Threading.Tasks.Task" /> che viene completato al completamento dell'operazione di connessione.</returns>
      <param name="request">Richiesta per la connessione corrente.</param>
      <param name="connectionId">ID del client in riconnessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chiamato quando la connessione viene disconnessa.</summary>
      <returns>Oggetto <see cref="T:System.Threading.Tasks.Task" /> che viene completato al completamento dell'operazione di disconnessione.</returns>
      <param name="request">Richiesta per la connessione corrente.</param>
      <param name="connectionId">ID del client disconnesso.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Chiamato quando vengono ricevuti i dati da una connessione.</summary>
      <returns>Oggetto <see cref="T:System.Threading.Tasks.Task" /> che viene completato al completamento dell'operazione di ricezione.</returns>
      <param name="request">Richiesta per la connessione corrente.</param>
      <param name="connectionId">ID della connessione che invia i dati.</param>
      <param name="data">Payload inviato alla connessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chiamato quando viene ristabilita una connessione dopo un timeout.</summary>
      <returns>Oggetto <see cref="T:System.Threading.Tasks.Task" /> che viene completato al completamento dell'operazione di riconnessione.</returns>
      <param name="request">Richiesta per la connessione corrente.</param>
      <param name="connectionId">ID del client in riconnessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Chiamato quando viene ristabilita una connessione dopo un timeout per determinare quali gruppi è necessario aggiungere di nuovo.</summary>
      <returns>Raccolta di nomi di gruppi che è necessario aggiungere alla riconnessione.</returns>
      <param name="request">Richiesta per la connessione corrente.</param>
      <param name="groups">Gruppi di cui la chiamata di connessione afferma di fare parte.</param>
      <param name="connectionId">ID del client in riconnessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Gestisce tutte le richieste per la classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Oggetto <see cref="T:System.Threading.Tasks.Task" /> che viene completato al completamento della pipeline della classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="context">Oggetto <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> per la richiesta corrente.</param>
      <exception cref="InvalidOperationException">Generato se la connessione non è stata inizializzata.Generato se il trasporto non è stato specificato.Generato se l'ID connessione non è stato specificato.</exception>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Punto di ingresso OWIN.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.ProtectedData">
      <summary>Ottiene o imposta i dati protetti di questa connessione.</summary>
      <returns>Dati protetti di questa connessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Trace">
      <summary>Ottiene l'origine della connessione.</summary>
      <returns>Origine della connessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.TraceManager">
      <summary>Ottiene o imposta il gestore di tracce.</summary>
      <returns>Gestore di tracce.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Transport">
      <summary>Ottiene o imposta il trasporto associato a questa connessione.</summary>
      <returns>Trasporto associato a questa connessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.UserIdProvider"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager">
      <summary>Fornisce l'accesso al gestore della configurazione predefinita del server.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.ConnectionTimeout">
      <summary>Ottiene o imposta un oggetto TimeSpan che rappresenta l'intervallo di tempo in cui una connessione deve essere lasciata aperta prima del timeout.</summary>
      <returns>Oggetto TimeSpan che rappresenta l'intervallo di tempo in cui una connessione deve essere lasciata aperta prima del timeout.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DefaultMessageBufferSize">
      <summary>Ottiene o imposta il numero di messaggi da memorizzare nel buffer per un segnale specifico.</summary>
      <returns>Numero di messaggi da memorizzare nel buffer per un segnale specifico.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DisconnectTimeout">
      <summary>Ottiene o imposta un oggetto TimeSpan che rappresenta l'intervallo di tempo di attesa in seguito all'interruzione della connessione e prima che venga generato l'evento di disconnessione.</summary>
      <returns>Oggetto TimeSpan che rappresenta l'intervallo di tempo di attesa in seguito all'interruzione della connessione e prima che venga generato l'evento di disconnessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.KeepAlive">
      <summary>Ottiene o imposta un oggetto TimeSpan che rappresenta l'intervallo di tempo tra messaggi inviati e Keep Alive.Se abilitato, il valore deve essere impostato almeno su due secondi.Per disabilitarlo, impostare il valore su null.</summary>
      <returns>Oggetto TimeSpan che rappresenta l'intervallo di tempo tra messaggi inviati e Keep Alive.Se abilitato, il valore deve essere impostato almeno su due secondi.Per disabilitarlo, impostare il valore su null.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.LongPollDelay"></member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.TransportConnectTimeout"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager">
      <summary>Consente l'accesso alla configurazione del server.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.ConnectionTimeout">
      <summary>Ottiene o imposta un oggetto <see cref="T:System.TimeSpan" /> che rappresenta l'intervallo di tempo in cui una connessione deve essere lasciata aperta prima del timeout.</summary>
      <returns>Oggetto <see cref="T:System.TimeSpan" /> che rappresenta l'intervallo di tempo in cui una connessione deve essere lasciata aperta prima del timeout.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DefaultMessageBufferSize">
      <summary>Ottiene o imposta il numero di messaggi da memorizzare nel buffer per un segnale specifico.</summary>
      <returns>Numero di messaggi da memorizzare nel buffer per un segnale specifico.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DisconnectTimeout">
      <summary>Ottiene o imposta un oggetto <see cref="T:System.TimeSpan" /> che rappresenta l'intervallo di tempo di attesa in seguito all'interruzione della connessione e prima che venga generato l'evento di disconnessione.</summary>
      <returns>Oggetto <see cref="T:System.TimeSpan" /> che rappresenta l'intervallo di tempo di attesa in seguito all'interruzione della connessione e prima che venga generato l'evento di disconnessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.KeepAlive">
      <summary>Ottiene o imposta un oggetto <see cref="T:System.TimeSpan" /> che rappresenta l'intervallo di tempo tra messaggi inviati e Keep Alive.Se abilitato, il valore deve essere impostato almeno su due secondi.Per disabilitarlo, impostare il valore su null.</summary>
      <returns>Oggetto <see cref="T:System.TimeSpan" /> che rappresenta l'intervallo di tempo tra messaggi keep alive inviati.Se abilitato, il valore deve essere impostato almeno su due secondi.Per disabilitarlo, impostare il valore su null.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.LongPollDelay">
      <summary>Ottiene o imposta <see cref="T:System.TimeSpan" /> che indica al client il tempo di attesa prima che venga ristabilita una connessione di polling lungo dopo l'invio dei dati dal server.Il valore predefinito è 0.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.TransportConnectTimeout">
      <summary>Ottiene o imposta un <see cref="T:System.TimeSpan" /> che rappresenta l'intervallo di tempo in cui un client deve consentire la connessione prima di eseguire il fallback a un altro trasporto o generare un errore.Il valore predefinito è 5 secondi.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostContext">
      <summary>Rappresenta il contesto dell'host SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(Microsoft.AspNet.SignalR.IRequest,Microsoft.AspNet.SignalR.Hosting.IResponse)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</summary>
      <param name="environment">Ambiente dell'host SignalR.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Environment">
      <summary>Ottiene l'ambiente dell'host SignalR.</summary>
      <returns>Ambiente dell'host SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Request"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Response"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions">
      <summary>Rappresenta l'host per le estensioni del resolver di dipendenza.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions.InitializeHost(Microsoft.AspNet.SignalR.IDependencyResolver,System.String,System.Threading.CancellationToken)">
      <summary>Inizializza l'host per le estensioni del resolver di dipendenza.</summary>
      <param name="resolver">Resolver di dipendenza.</param>
      <param name="instanceName">Nome dell'istanza.</param>
      <param name="hostShutdownToken">Token di arresto dell'host.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.INameValueCollection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Get(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.GetValues(System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Item(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.IResponse">
      <summary>Rappresenta una connessione al client.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.CancellationToken">
      <summary>Ottiene un token di annullamento che rappresenta la durata del client.</summary>
      <returns>Token di annullamento che rappresenta la durata del client.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.ContentType">
      <summary>Ottiene o imposta il tipo di contenuto della risposta.</summary>
      <returns>Tipo di contenuto della risposta.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Flush">
      <summary>Scarica nel client la risposta memorizzata nel buffer.</summary>
      <returns>Attività che rappresenta quando i dati sono stati scaricati.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Scrive i dati memorizzati nel buffer.</summary>
      <param name="data">Dati da scrivere nel buffer.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory">
      <summary>Responsabile della creazione di istanze della classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Crea una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory" />.</summary>
      <param name="resolver">Resolver di dipendenza da utilizzare durante la creazione dell'istanza della classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.CreateInstance(System.Type)">
      <summary>Crea un'istanza del tipo specificato utilizzando il resolver di dipendenza o il costruttore predefinito del tipo di istanza.</summary>
      <returns>Istanza della classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="connectionType">Tipo di istanza della classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> da creare.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions">
      <summary>Metodi di estensione per <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions.End(Microsoft.AspNet.SignalR.Hosting.IResponse,System.String)">
      <summary>Chiude la connessione a un client con dati opzionali.</summary>
      <returns>Attività che rappresenta quando la connessione è chiusa.</returns>
      <param name="response">Classe <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />.</param>
      <param name="data">Dati da scrivere nella connessione.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule">
      <summary>Applica attributi di autorizzazione dalla classe <see cref="T:Microsoft.AspNet.SignalR.Hub" /> per determinare se consentire ai client di ricevere i messaggi inviati dall'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor(Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection,Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</summary>
      <param name="globalConnectionAuthorizer">Provider di autorizzazioni della connessione globale.</param>
      <param name="globalInvocationAuthorizer">Provider di autorizzazioni della chiamata globale.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Esegue il wrapping di una funzione da chiamare prima che un client sottoscriva segnali appartenenti all'hub descritto da <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Per impostazione predefinita, <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> cerca attributi nell'hub per determinare se il client è autorizzato a sottoscrivere chiamate del metodo per l'hub descritto.La funzione restituisce true se il client è autorizzato a sottoscrivere chiamate del metodo dell'hub sul lato client e false in caso contrario.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping che determina se il client è autorizzato a connettersi all'hub descritto.</returns>
      <param name="authorizeConnect">Funzione che determina se il client è autorizzato a connettersi all'hub descritto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Esegue il wrapping di una funzione che richiama un metodo dell'hub sul lato server.Anche se un client non è stato autorizzato a connettersi a un hub, è comunque autorizzato a richiamare metodi sul lato server di tale hub, a meno che la chiamata non sia impedita in <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> mediante una mancata esecuzione del parametro di chiamata.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping che richiama un metodo dell'hub sul lato server.</returns>
      <param name="invoke">Funzione che richiama un metodo dell'hub sul lato server.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation">
      <summary>Descrive una chiamata del metodo dell'hub sul lato client.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Args">
      <summary>Ottiene o imposta l'elenco di argomenti utilizzato per la chiamata del metodo dell'hub sul lato client.</summary>
      <returns>Elenco di argomenti associato al metodo dell'hub sul lato client.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Hub">
      <summary>Ottiene o imposta il nome dell'hub a cui appartiene il metodo richiamato.</summary>
      <returns>Nome dell'hub a cui appartiene il metodo richiamato.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Method">
      <summary>Ottiene o imposta il nome del metodo dell'hub sul lato client richiamato.</summary>
      <returns>Nome del metodo dell'hub sul lato client richiamato.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.State">
      <summary>Ottiene o imposta un archivio chiave-valore che rappresenta lo stato dell'hub sul server aggiornato rispetto all'ultimo invio dello stato dell'hub al client.</summary>
      <returns>Archivio chiave-valore che rappresenta lo stato dell'hub sul server.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy">
      <summary>Rappresenta un proxy sul lato server dell'hub sul lato client.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])">
      <summary>Richiama un metodo sulle connessioni rappresentate dall'istanza di <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy" />.</summary>
      <returns>Attività che rappresenta l'invio dei dati al client.</returns>
      <param name="method">Nome del metodo da richiamare.</param>
      <param name="args">Argomenti da passare al client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Esegue il metodo <see cref="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])" />.</summary>
      <returns>Restituisce sempre true.</returns>
      <param name="binder">Informazione contenente semantica di associazione e dettagli dell'operazione dell'hub sul lato client.</param>
      <param name="args">Argomenti passati al membro dell'oggetto durante l'operazione di richiamata.</param>
      <param name="result">Quando termina, il metodo restituisce il risultato della chiamata del membro.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy">
      <summary>Rappresenta un proxy dell'ID connessione per l'hub sul lato client.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String[])"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator">
      <summary>Rappresenta il localizzatore dell'assembly predefinito.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.GetAssemblies">
      <summary>Ottiene gli assembly che sono stati caricati nel dominio dell'applicazione corrente.</summary>
      <returns>Matrice di assembly nel dominio dell'applicazione corrente.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator">
      <summary>Rappresenta l'attivatore predefinito per gli hub SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator" />.</summary>
      <param name="resolver">Resolver di dipendenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Crea un nuovo attivatore dell'hub.</summary>
      <returns>Attivatore dell'hub creato.</returns>
      <param name="descriptor">Descrittore.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager">
      <summary>Rappresenta un gestore di hub predefinito.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager" />.</summary>
      <param name="resolver">Resolver di hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHub(System.String)">
      <summary>Recupera un singolo descrittore di hub.</summary>
      <returns>Descrittore di hub, se trovato. In caso contrario, null.</returns>
      <param name="hubName">Nome dell'hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Recupera un metodo con un nome specificato in un hub specificato.</summary>
      <returns>Descrittore del metodo, se trovato.In caso contrario, null.</returns>
      <param name="hubName">Nome dell'hub.</param>
      <param name="method">Nome del metodo da trovare.</param>
      <param name="parameters">Parametri del metodo di cui trovare una corrispondenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Ottiene tutti i metodi che è possibile chiamare su un hub specificato.</summary>
      <returns>Elenco di metodi disponibili.</returns>
      <param name="hubName">Nome dell'hub.</param>
      <param name="predicate">Predicato facoltativo per l'applicazione di un filtro ai risultati.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Recupera tutti gli hub disponibili corrispondenti al predicato specificato.</summary>
      <returns>Elenco di descrittori di hub.</returns>
      <param name="predicate">Predicato.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHub(System.String)">
      <summary>Risolve un nome di hub specificato in un oggetto concreto.</summary>
      <returns>Istanza di implementazione dell'hub, se trovata.In caso contrario, null.</returns>
      <param name="hubName">Nome dell'hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHubs">
      <summary>Risolve tutti gli hub disponibili nei relativi oggetti concreti.</summary>
      <returns>Elenco di istanze di hub.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator">
      <summary>Rappresenta un generatore per il proxy Javascript predefinito.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubManager,Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />.</summary>
      <param name="manager">Gestore dell'hub.</param>
      <param name="javaScriptMinifier">Minimizzatore JavaScript.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />.</summary>
      <param name="resolver">Resolver di dipendenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Genera un proxy specificato.</summary>
      <returns>Proxy generato.</returns>
      <param name="serviceUrl">URL servizio.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String,System.Boolean)">
      <summary>Genera un proxy specificato.</summary>
      <returns>Proxy generato.</returns>
      <param name="serviceUrl">URL servizio.</param>
      <param name="includeDocComments">true per includere commenti del documento. In caso contrario, false.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver">
      <summary>Rappresenta il resolver predefinito per il parametro dell'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Risolve valori di parametro di metodo in base agli oggetti forniti.</summary>
      <returns>Matrice di valori di parametro.</returns>
      <param name="method">Descrittore del metodo.</param>
      <param name="values">Elenco di valori in base a cui risolvere i valori di parametro.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveParameter(Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor,Microsoft.AspNet.SignalR.Json.IJsonValue)">
      <summary>Risolve un valore di parametro in base all'oggetto fornito.</summary>
      <returns>Valore del parametro.</returns>
      <param name="descriptor">Descrittore del parametro.</param>
      <param name="value">Valore in base a cui risolvere il valore di parametro.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.Descriptor">
      <summary>Descrive le informazioni dell'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.Descriptor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.Descriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.Name">
      <summary>Ottiene o imposta il nome dell'hub.</summary>
      <returns>Nome dell'hub.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.NameSpecified">
      <summary>Ottiene o imposta il valore che indica se è specificato il nome dell'attributo di un hub.</summary>
      <returns>true se il nome dell'attributo dell'hub è specificato. In caso contrario, false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary">
      <summary>Contiene un oggetto del dizionario per memorizzare coppie chiave-valore ed esegue l'override dei metodi TrySetMember e TryGetMember per supportare la nuova sintassi.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary" />.</summary>
      <param name="obj">Oggetto del dizionario.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Aggiunge un oggetto della coppia chiave/valore specificata al dizionario.</summary>
      <param name="item">Oggetto della coppia chiave/valore da aggiungere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.String,System.Object)">
      <summary>Aggiunge la chiave e il valore specificati al dizionario.</summary>
      <param name="key">Chiave dell'elemento da aggiungere.</param>
      <param name="value">Valore dell'elemento da aggiungere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Clear">
      <summary>Rimuove tutte le chiavi e i valori dal dizionario.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determina se il dizionario contiene un elemento specifico della coppia chiave/valore.</summary>
      <returns>true se il dizionario contiene un elemento con il valore specificato. In caso contrario, false.</returns>
      <param name="item">Elemento della coppia chiave/valore da individuare nel dizionario.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.ContainsKey(System.String)">
      <summary>Determina se il dizionario contiene la chiave specificata.</summary>
      <returns>true se il dizionario contiene la chiave specificata. In caso contrario, false.</returns>
      <param name="key">Chiave da individuare nel dizionario.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia gli elementi della coppia chiave/valore in una matrice unidimensionale esistente, iniziando dall'indice di matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che rappresenta la destinazione degli elementi copiati dal dizionario.</param>
      <param name="arrayIndex">Indice in base zero della matrice a partire dal quale ha inizio la copia.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Count">
      <summary>Ottiene il numero di elementi contenuti nel dizionario.</summary>
      <returns>Numero di elementi contenuti nel dizionario.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.GetEnumerator">
      <summary>Restituisce un enumeratore che scorre il dizionario.</summary>
      <returns>Enumeratore che scorre il dizionario.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.IsReadOnly">
      <summary>Ottiene un valore che indica se il dizionario dinamico è di sola lettura.</summary>
      <returns>true se il dizionario dinamico è di sola lettura. In caso contrario, false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Item(System.String)">
      <summary>Ottiene o imposta l'elemento con la chiave specifica nel dizionario.</summary>
      <returns>Elemento con la chiave specifica nel dizionario.</returns>
      <param name="key">Chiave dell'elemento.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Keys">
      <summary>Ottiene una raccolta di chiavi contenute nel dizionario.</summary>
      <returns>Raccolta di chiavi contenute nel dizionario.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Rimuove un elemento specifico della coppia chiave/valore dal dizionario.</summary>
      <returns>Dizionario con l'elemento rimosso.</returns>
      <param name="item">Voce da rimuovere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.String)">
      <summary>Rimuove una chiave specifica dal dizionario.</summary>
      <returns>Dizionario con la chiave rimossa.</returns>
      <param name="key">Chiave da rimuovere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che scorre gli elementi di una raccolta.</summary>
      <returns>Enumeratore che scorre una raccolta.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Fornisce l'implementazione per operazioni che ottengono i valori dei membri.</summary>
      <returns>true se l'operazione viene eseguita correttamente. In caso contrario, false.</returns>
      <param name="binder">Fornisce informazioni sull'oggetto che ha chiamato l'operazione dinamica.</param>
      <param name="result">Risultato dell'operazione get.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Ottiene il valore associato alla chiave specificata.</summary>
      <returns>true se il dizionario contiene un elemento con la chiave specificata. In caso contrario, false.</returns>
      <param name="key">Chiave del valore da ottenere.</param>
      <param name="value">Quando termina, questo metodo contiene il valore associato alla chiave specificata nel caso in cui tale chiave venga trovata. In caso contrario, restituisce il valore predefinito per il tipo del parametro value.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Fornisce l'implementazione per operazioni che impostano i valori dei membri.</summary>
      <returns>true se l'operazione viene eseguita correttamente. In caso contrario, false.</returns>
      <param name="binder">Fornisce informazioni sull'oggetto che ha chiamato l'operazione dinamica.</param>
      <param name="value">Valore su cui impostare il membro.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Unwrap(System.Object)">
      <summary>Rimuove il wrapping di un valore specificato associato al dizionario.</summary>
      <returns>Valore di cui è stato rimosso il wrapping.</returns>
      <param name="value">Valore di cui rimuovere il wrapping.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Values">
      <summary>Ottiene una raccolta di valori contenuti nel dizionario.</summary>
      <returns>Raccolta di valori contenuti nel dizionario.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Wrap(System.Object)">
      <summary>Esegue il wrapping di un valore specificato associato al dizionario.</summary>
      <returns>Valore di cui è stato eseguito il wrapping.</returns>
      <param name="value">Valore di cui eseguire il wrapping.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator">
      <summary>Rappresenta un generatore per il proxy Javascript vuoto.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Genera un proxy con un URL specificato.</summary>
      <returns>Proxy generato.</returns>
      <param name="serviceUrl">URL servizio.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator">
      <summary>Rappresenta l'enumerazione associata al localizzatore dell'assembly.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator" />.</summary>
      <param name="assemblies">Assembly.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.GetAssemblies">
      <summary>Restituisce l'elenco di assembly.</summary>
      <returns>Elenco di assembly.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ExceptionContext"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.#ctor(System.Exception)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Error">
      <summary>Eccezione da inviare al client chiamante.Questa verrà sostituita da un eccezione generica a meno che l'errore non sia <see cref="T:Microsoft.AspNet.SignalR.HubException" /> o che <see cref="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors" /> sia impostato su true.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Result">
      <summary>Valore da restituire in sostituzione della generazione dell'errore.Se il risultato è impostato, l'errore verrà impostato su null.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.GroupProxy">
      <summary>Rappresenta un gruppo di proxy di segnale utilizzato dall'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.GroupProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext">
      <summary>Rappresenta il contesto chiamante del client.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.#ctor(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" />.</summary>
      <param name="request">Richiesta HTTP corrente.</param>
      <param name="connectionId">The connection ID.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.ConnectionId">
      <summary>Ottiene l'ID connessione del client chiamante.</summary>
      <returns>ID connessione del client chiamante.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Headers">
      <summary>Ottiene le intestazioni per la richiesta.</summary>
      <returns>Intestazioni per la richiesta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.QueryString">
      <summary>Ottiene la stringa di query per la richiesta.</summary>
      <returns>Stringa di query per la richiesta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Request">
      <summary>Ottiene l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.IRequest" /> per la richiesta HTTP corrente.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.IRequest" /> per la richiesta HTTP corrente.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.RequestCookies">
      <summary>Ottiene i cookie per la richiesta.</summary>
      <returns>Cookie per la richiesta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.User">
      <summary>Ottiene l'interfaccia <see cref="T:System.Security.Principal.IPrincipal" /> per la richiesta.</summary>
      <returns>Interfaccia <see cref="T:System.Security.Principal.IPrincipal" /> per la richiesta.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext">
      <summary>Incapsula tutte le informazioni su una singola connessione SignalR a un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,Microsoft.AspNet.SignalR.IConnection,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />.</summary>
      <param name="pipelineInvoker">Invoker della pipeline.</param>
      <param name="connection">Connessione dell'interfaccia.</param>
      <param name="hubName">Nome dell'hub.</param>
      <param name="connectionId">ID connessione.</param>
      <param name="tracker">Strumento per l'individuazione delle modifiche allo stato.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Caller">
      <summary>Ottiene o imposta il client chiamante.</summary>
      <returns>Client chiamante.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Others">
      <summary>Ottiene o imposta tutti i client connessi eccetto il client chiamante.</summary>
      <returns>Tutti i client connessi eccetto il client chiamante.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroup(System.String)">
      <summary>Restituisce una rappresentazione dinamica di tutti i client di un gruppo, eccetto il client chiamante.</summary>
      <returns>Rappresentazione dinamica di tutti i client di un gruppo, eccetto il client chiamante.</returns>
      <param name="groupName">Nome del gruppo.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})">
      <summary>Restituisce una rappresentazione dinamica di tutti i client di un gruppo specificato, eccetto il client chiamante.</summary>
      <returns>Rappresentazione dinamica di tutti i client di un gruppo, eccetto il client chiamante.</returns>
      <param name="groupNames">Nome dei gruppi.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.All"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.AllExcept(System.String[])">
      <summary>Restituisce una rappresentazione dinamica di tutti i client, eccetto il client chiamante specificato.</summary>
      <returns>Rappresentazione dinamica di tutti i client, eccetto il client chiamante specificato.</returns>
      <param name="excludeConnectionIds">Elenco di ID connessione da escludere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Client(System.String)">
      <summary>Restituisce una rappresentazione dinamica della connessione con l'ID connessione specificato.</summary>
      <returns>Rappresentazione dinamica del client specificato.</returns>
      <param name="connectionId">ID connessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Clients(System.Collections.Generic.IList{System.String})">
      <summary>Restituisce una rappresentazione dinamica della connessione con gli ID connessione specificati.</summary>
      <returns>Rappresentazione dinamica dei client specificati.</returns>
      <param name="connectionIds">ID connessione.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Group(System.String,System.String[])">
      <summary>Restituisce una rappresentazione dinamica del gruppo specificato.</summary>
      <returns>Rappresentazione dinamica del gruppo specificato.</returns>
      <param name="groupName">Nome del gruppo.</param>
      <param name="excludeConnectionIds">Elenco di ID connessione da escludere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Groups(System.Collections.Generic.IList{System.String},System.String[])">
      <summary>Restituisce una rappresentazione dinamica dei gruppi specificati.</summary>
      <returns>Rappresentazione dinamica dei gruppi specificati.</returns>
      <param name="groupNames">Nomi dei gruppi.</param>
      <param name="excludeConnectionIds">Elenco di ID connessione da escludere.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.HubName"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Invoker"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor">
      <summary>Rappresenta le informazioni su un singolo hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.CreateQualifiedName(System.String)">
      <summary>Crea un nome completo per l'hub utilizzando quello non qualificato specificato.</summary>
      <returns>Nome completo creato.</returns>
      <param name="unqualifiedName">Nome non qualificato.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.HubType">
      <summary>Ottiene o imposta il tipo di hub.</summary>
      <returns>Tipo di hub.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher">
      <summary>Gestisce tutte le comunicazioni attraverso la connessione permanente dell'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.#ctor(Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />.</summary>
      <param name="configuration">Impostazioni di configurazione che determinano se abilitare i proxy di JS e fornire ai client errori dell'hub dettagliati.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Crea un elenco di hub autorizzati per la richiesta di connessione specificata.</summary>
      <returns>true se sono presenti hub autorizzati. In caso contrario, false.</returns>
      <param name="request">Richiesta per la connessione corrente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.GetSignals(System.String,System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Chiamato dall'host per inizializzare l'invio dell'hub per il resolver di dipendenza.</summary>
      <param name="resolver">Resolver di dipendenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chiamato quando viene stabilita la connessione a questa istanza dell'hub.</summary>
      <returns>Attività chiamata quando viene stabilita la connessione a questa istanza dell'hub.</returns>
      <param name="request">Richiesta per la connessione corrente.</param>
      <param name="connectionId">ID del client in riconnessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chiamato quando viene interrotta la connessione da questa istanza dell'hub.</summary>
      <returns>Attività chiamata quando viene interrotta la connessione da questa istanza dell'hub.</returns>
      <param name="request">Richiesta per la connessione corrente.</param>
      <param name="connectionId">ID del client in riconnessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Elabora le chiamate in ingresso a un metodo dell'hub.</summary>
      <returns>Attività chiamata quando vengono ricevuti i dati da questa istanza dell'hub.</returns>
      <param name="request">Richiesta per la connessione corrente.</param>
      <param name="connectionId">ID del client in riconnessione.</param>
      <param name="data">Dati ricevuti.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chiamato quando viene ristabilita la connessione a questa istanza dell'hub.</summary>
      <returns>Attività chiamata quando viene ristabilita la connessione a questa istanza dell'hub.</returns>
      <param name="request">Richiesta per la connessione corrente.</param>
      <param name="connectionId">ID del client in riconnessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Chiamato quando viene ristabilita una connessione dopo un timeout per determinare quali gruppi è necessario aggiungere di nuovo.</summary>
      <returns>Elenco di connessioni utilizzate per riconnettersi dopo un timeout per determinare quali gruppi è necessario aggiungere di nuovo.</returns>
      <param name="request">Richiesta per la connessione corrente.</param>
      <param name="groups">Gruppi di cui la chiamata di connessione afferma di fare parte.</param>
      <param name="connectionId">ID del client in riconnessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Gestisce tutte le richieste per il contesto dell'host.</summary>
      <returns>Attività che gestisce tutte le richieste per il contesto dell'host.</returns>
      <param name="context">Contesto dell'host.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Trace">
      <summary>Ottiene le connessioni dell'hub che consentono alle applicazioni di tracciare l'esecuzione del codice e associare i messaggi di traccia alla relativa origine.</summary>
      <returns>Connessioni dell'hub che consentono alle applicazioni di tracciare l'esecuzione del codice e associare i messaggi di traccia alla relativa origine.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions">
      <summary>Fornisce un'estensione del gestore dell'hub al processo dell'intero hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.EnsureHub(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter[])">
      <summary>Assicura tutte le informazioni sul descrittore di hub.</summary>
      <returns>Descrittore di hub per assicurare tutte le informazioni.</returns>
      <param name="hubManager">Gestore dell'hub.</param>
      <param name="hubName">Nome dell'hub.</param>
      <param name="counters">Contatori delle prestazioni.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubMethods(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String)">
      <summary>Ottiene tutti i metodi che è possibile chiamare su un hub specificato.</summary>
      <returns>Raccolta di metodi che è possibile chiamare su un hub specificato.</returns>
      <param name="hubManager">Gestore dell'hub.</param>
      <param name="hubName">Nome dell'hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubs(Microsoft.AspNet.SignalR.Hubs.IHubManager)">
      <summary>Recupera tutti gli hub disponibili.</summary>
      <returns>Recupero di tuti gli hub disponibili.</returns>
      <param name="hubManager">Gestore dell'hub.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute">
      <summary>Rappresenta gli attributi del nome del metodo per l'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute" />.</summary>
      <param name="methodName">Nome del metodo.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.MethodName">
      <summary>Ottiene o imposta il nome del metodo.</summary>
      <returns>Nome del metodo.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute">
      <summary>Rappresenta l'attributo per il nome dell'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute" />.</summary>
      <param name="hubName">Nome dell'hub.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.HubName">
      <summary>Ottiene o imposta il nome dell'hub.</summary>
      <returns>Nome dell'hub.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule">
      <summary>Classe di base comune che semplifica l'implementazione di interfacce IHubPipelineModule.Un modulo può intercettare e personalizzare varie fasi del processo di elaborazione dell'hub, tra cui la connessione, la riconnessione, la disconnessione, la chiamata di metodi dell'hub sul lato server, la chiamata di metodi dell'hub sul lato client, l'autorizzazione di client dell'hub e la nuova partecipazione a gruppi dell'hub.Per attivare un modulo, chiamare il metodo <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.I moduli combinati aggiunti a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> vengono richiamati mediante l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Esegue il wrapping di una funzione da chiamare prima che un client sottoscriva segnali appartenenti all'hub descritto da <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Per impostazione predefinita, <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> cerca attributi in <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> per determinare se il client è autorizzato a sottoscrivere chiamate del metodo per l'hub descritto.La funzione restituisce true se il client è autorizzato a sottoscrivere chiamate del metodo dell'hub sul lato client e false in caso contrario.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping che determina se il client è autorizzato a connettersi all'hub descritto.</returns>
      <param name="authorizeConnect">Funzione che determina se il client è autorizzato a connettersi all'hub descritto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Esegue il wrapping di una funzione chiamata quando un client si connette a <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> per ciascuna interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> a cui il client si connette.Per impostazione predefinita, determina una chiamata del metodo OnConnected di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping da chiamare quando un client si connette a un hub.</returns>
      <param name="connect">Funzione da chiamare quando un client si connette a un hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Esegue il wrapping di una funzione chiamata quando un client si disconnette da <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> per ciascuna interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> a cui il client era connesso.Per impostazione predefinita, determina una chiamata del metodo OnDisconnected di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping da chiamare quando un client si disconnette da un hub.</returns>
      <param name="disconnect">Funzione da chiamare quando un client si disconnette da un hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Esegue il wrapping di una funzione che richiama un metodo dell'hub sul lato server.Anche se un client non è stato autorizzato a connettersi a un hub, è comunque autorizzato a richiamare metodi sul lato server di tale hub, a meno che la chiamata non sia impedita in <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> mediante una mancata esecuzione del parametro di chiamata.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping che richiama un metodo dell'hub sul lato server.</returns>
      <param name="invoke">Funzione che richiama un metodo dell'hub sul lato server.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Esegue il wrapping di una funzione che richiama un metodo dell'hub sul lato client.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping che richiama un metodo dell'hub sul lato client.</returns>
      <param name="send">Funzione che richiama un metodo dell'hub sul lato client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Esegue il wrapping di una funzione chiamata quando un client si riconnette a <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> per ciascuna interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> a cui il client si connette.Per impostazione predefinita, determina una chiamata del metodo OnReconnected di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping da chiamare quando un client si riconnette a un hub.</returns>
      <param name="reconnect">Funzione da chiamare quando un client si riconnette a un hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Esegue il wrapping di una funzione che determina a quali dei gruppi appartenenti all'hub descritto da <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> il client è autorizzato a partecipare di nuovo.Per impostazione predefinita, i client che si riconnettono al server vengono rimossi da tutti i gruppi di cui erano in precedenza membri, per evitare che client non attendibili affermino di essere membri di gruppi a cui non sono mai stati autorizzati a partecipare.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping che determina a quali gruppi il client è autorizzato a partecipare di nuovo.</returns>
      <param name="rejoiningGroups">Funzione che determina a quali gruppi il client è autorizzato a partecipare di nuovo.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Questo metodo viene chiamato dopo l'esecuzione dei componenti di connessione di tutti i moduli aggiunti successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> e dopo l'eventuale esecuzione di <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" />.</summary>
      <param name="hub">Hub a cui il client si è connesso.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Questo metodo viene chiamato dopo l'esecuzione dei componenti di disconnessione di tutti i moduli aggiunti successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> e dopo l'eventuale esecuzione di <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" />.</summary>
      <param name="hub">Hub da cui il client si è disconnesso.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterIncoming(System.Object,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Questo metodo viene chiamato al termine dell'esecuzione dei componenti in ingresso di tutti i moduli aggiunti successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> e del metodo dell'hub sul lato server.</summary>
      <returns>Valore restituito nuovo o aggiornato del metodo dell'hub sul lato server.</returns>
      <param name="result">Valore restituito del metodo dell'hub sul lato server.</param>
      <param name="context">Descrizione della chiamata del metodo dell'hub sul lato server.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Questo metodo viene chiamato dopo l'esecuzione dei componenti in uscita di tutti i moduli aggiunti successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Questo non significa che tutti i client abbiano ricevuto la chiamata del metodo dell'hub, ma indica che è stato pubblicato un messaggio di chiamata dell'hub in un bus di messaggi.</summary>
      <param name="context">Descrizione della chiamata del metodo dell'hub sul lato client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Questo metodo viene chiamato dopo l'esecuzione dei componenti di riconnessione di tutti i moduli aggiunti successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> e dopo l'eventuale esecuzione di <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" />.</summary>
      <param name="hub">Hub a cui il client si è riconnesso.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeAuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Questo metodo viene chiamato prima dell'esecuzione dei componenti AuthorizeConnect di tutti i moduli aggiunti successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Se il risultato è false, i moduli aggiunti successivamente non verranno eseguiti e il client non sarà autorizzato a sottoscrivere chiamate sul lato client di metodi appartenenti all'hub definito da <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.</summary>
      <returns>true se il client è autorizzato a connettersi all'hub. In caso contrario, false.</returns>
      <param name="hubDescriptor">Descrizione dell'hub che il client sta tentando di sottoscrivere.</param>
      <param name="request">Richiesta di connessione del client che sta tentando di sottoscrivere l'hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Questo metodo viene chiamato prima dell'esecuzione dei componenti di connessione di tutti i moduli aggiunti successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Se il risultato è false, i moduli aggiunti successivamente e il metodo <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> non verranno eseguiti.</summary>
      <returns>true se i componenti di connessione dei moduli aggiunti successivamente e il metodo <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> devono essere eseguiti. In caso contrario, false.</returns>
      <param name="hub">Hub a cui il client si è connesso.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Questo metodo viene chiamato prima dell'esecuzione dei componenti di disconnessione di tutti i moduli aggiunti successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Se il risultato è false, i moduli aggiunti successivamente e il metodo <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> non verranno eseguiti.</summary>
      <returns>true se i componenti di disconnessione dei moduli aggiunti successivamente e il metodo <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> devono essere eseguiti. In caso contrario, false.</returns>
      <param name="hub">Hub da cui il client si è disconnesso.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Questo metodo viene chiamato prima dell'esecuzione dei componenti in ingresso di tutti i moduli aggiunti successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Se il risultato è false, i moduli aggiunti successivamente e la chiamata del metodo dell'hub sul lato server non verranno eseguiti.Anche se un client non è stato autorizzato a connettersi a un hub, è comunque autorizzato a richiamare metodi sul lato server di tale hub, a meno che la chiamata non sia impedita in <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> mediante una mancata esecuzione del parametro di chiamata oppure in <see cref="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)" /> mediante la restituzione di false.</summary>
      <returns>true se i componenti in ingresso dei moduli aggiunti successivamente e la chiamata del metodo dell'hub sul lato server devono essere eseguiti. In caso contrario, false.</returns>
      <param name="context">Descrizione della chiamata del metodo dell'hub sul lato server.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Questo metodo viene chiamato prima dell'esecuzione dei componenti in uscita di tutti i moduli aggiunti successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Se il risultato è false, i moduli aggiunti successivamente e le chiamate del metodo dell'hub sul lato client non verranno eseguiti.</summary>
      <returns>true se i componenti in uscita dei moduli aggiunti successivamente e la chiamata del metodo dell'hub sul lato server devono essere eseguiti. In caso contrario, false.</returns>
      <param name="context">Descrizione della chiamata del metodo dell'hub sul lato client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Questo metodo viene chiamato prima dell'esecuzione dei componenti di riconnessione di tutti i moduli aggiunti successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Se il risultato è false, i moduli aggiunti successivamente e il metodo <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> non verranno eseguiti.</summary>
      <returns>true se i componenti di riconnessione dei moduli aggiunti successivamente e il metodo <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> devono essere eseguiti. In caso contrario, false.</returns>
      <param name="hub">Hub a cui il client si è riconnesso.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnIncomingError(Microsoft.AspNet.SignalR.Hubs.ExceptionContext,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Questo metodo viene chiamato quando viene generata un'eccezione non rilevata da un metodo dell'hub sul lato server oppure dal componente in ingresso di un modulo aggiunto successivamente a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.L'osservazione dell'eccezione con questo metodo non ne impedisce il bubbling verso altri moduli.</summary>
      <param name="exceptionContext">Rappresenta l'eccezione generata durante la chiamata sul lato server.È possibile modificare l'errore o impostare un risultato utilizzando questo contesto.</param>
      <param name="invokerContext">Descrizione della chiamata del metodo dell'hub sul lato server.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubRequest">
      <summary>Fornisce metodi che comunicano con la richiesta di connessione SignalR stabilita a un hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubRequest.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Hub">
      <summary>Ottiene o imposta il valore di connessione di un hub.</summary>
      <returns>Valore di connessione di un hub.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Id">
      <summary>Ottiene o imposta l'ID connessione.</summary>
      <returns>ID connessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Method">
      <summary>Ottiene o imposta il metodo di richiesta.</summary>
      <returns>Metodo di richiesta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.ParameterValues">
      <summary>Ottiene o imposta i valori di parametro.</summary>
      <returns>Valori di parametro.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.State">
      <summary>Ottiene o imposta lo stato corrente della richiesta.</summary>
      <returns>Stato corrente della richiesta.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubResponse">
      <summary>Rappresenta la risposta restituita da una richiesta dell'hub in ingresso.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubResponse.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubResponse" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Error">
      <summary>Ottiene o imposta l'eccezione generata a causa della chiamata del metodo dell'hub.</summary>
      <returns>Eccezione generata a causa della chiamata del metodo dell'hub.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.ErrorData">
      <summary>Dati aggiuntivi errore contenuti in <see cref="T:Microsoft.AspNet.SignalR.HubException" /></summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Id">
      <summary>Ottiene o imposta l'ID dell'operazione.</summary>
      <returns>ID dell'operazione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.IsHubException">
      <summary>Indica se l'errore è <see cref="T:Microsoft.AspNet.SignalR.HubException" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Result">
      <summary>Ottiene o imposta il risultato della chiamata.</summary>
      <returns>Risultato della chiamata.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.StackTrace">
      <summary>Ottiene o imposta l'analisi dello stack dell'eccezione generata a causa della chiamata del metodo dell'hub.</summary>
      <returns>Analisi dello stack dell'eccezione generata a causa della chiamata del metodo dell'hub.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.State">
      <summary>Ottiene o imposta le modifiche apportate allo stato sottoposto a round trip.</summary>
      <returns>Modifiche apportate allo stato sottoposto a round trip.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator">
      <summary>Individua un assembly e restituisce informazioni sui relativi moduli.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator.GetAssemblies">
      <summary>Restituisce un elenco di assembly a cui fa riferimento il modulo.</summary>
      <returns>Elenco di assembly a cui fa riferimento il modulo.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection">
      <summary>Interfaccia da implementare mediante <see cref="T:System.Attribute" /> che può autorizzare il client a connettersi a un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Dato un oggetto <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" />, determina se il client è autorizzato a connettersi a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>true se il chiamante è autorizzato a connettersi all'hub. In caso contrario, false.</returns>
      <param name="hubDescriptor">Descrizione dell'hub a cui il client sta tentando di connettersi.</param>
      <param name="request">Richiesta di connessione da parte del client.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation">
      <summary>Interfaccia da implementare mediante <see cref="T:System.Attribute" /> che può autorizzare la chiamata di metodi di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>Data un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />, determina se il client è autorizzato a richiamare il metodo di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>True se il chiamante è autorizzato a richiamare il metodo di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />. In caso contrario, false.</returns>
      <param name="hubIncomingInvokerContext">Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" /> contenente informazioni dettagliate sulla chiamata del metodo di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</param>
      <param name="appliesToMethod">Indica se l'istanza dell'interfaccia è un attributo applicato direttamente a un metodo.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy">
      <summary>Proxy sul lato server dell'hub sul lato client.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IClientProxy.Invoke(System.String,System.Object[])">
      <summary>Richiama un metodo sulle connessioni rappresentate dall'istanza di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy" />.</summary>
      <returns>Attività che rappresenta l'invio dei dati al client.</returns>
      <param name="method">Nome del metodo da richiamare.</param>
      <param name="args">Argomenti da passare al client.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHub">
      <summary>Fornisce un'interfaccia che rappresenta i metodi che comunicano con connessioni SignalR stabilite a un hub.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Clients">
      <summary>Ottiene o imposta i client connessi all'hub.</summary>
      <returns>Client connessi all'hub.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Context">
      <summary>Ottiene o imposta le informazioni sul client chiamante.</summary>
      <returns>Informazioni sul client chiamante.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Groups">
      <summary>Ottiene o imposta il gestore di gruppi per questa istanza dell'hub.</summary>
      <returns>Gestore di gruppi per questa istanza dell'hub.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected">
      <summary>Chiamato quando viene stabilita la connessione a questa istanza dell'hub.</summary>
      <returns>Oggetto attività che rappresenta l'operazione di connessione.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected">
      <summary>Chiamato quando viene interrotta la connessione da questa istanza dell'hub.</summary>
      <returns>Oggetto attività che rappresenta l'operazione di disconnessione.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected">
      <summary>Chiamato quando viene ristabilita la connessione a questa istanza dell'hub.</summary>
      <returns>Oggetto attività che rappresenta l'operazione di riconnessione.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubActivator">
      <summary>Fornisce un metodo per creare un'istanza dell'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Crea una nuova istanza dell'hub.</summary>
      <returns>Hub appena creato.</returns>
      <param name="descriptor">Descrittore di hub.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext">
      <summary>Incapsula tutte le informazioni su una singola connessione SignalR a un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Caller"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Others"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroup(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext">
      <summary>Incapsula tutte le informazioni su una connessione SignalR a un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.All">
      <summary>Ottiene o imposta tutti i client connessi.</summary>
      <returns>Tutti i client connessi.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.AllExcept(System.String[])">
      <summary>Restituisce una rappresentazione dinamica di tutti i client, eccetto il client chiamante specificato.</summary>
      <returns>Rappresentazione dinamica di tutti i client, eccetto il client chiamante specificato.</returns>
      <param name="excludeConnectionIds">Elenco di ID connessione da escludere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Client(System.String)">
      <summary>Restituisce una rappresentazione dinamica della connessione con l'ID connessione specificato.</summary>
      <returns>Rappresentazione dinamica del client specificato.</returns>
      <param name="connectionId">ID connessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Clients(System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Group(System.String,System.String[])">
      <summary>Restituisce una rappresentazione dinamica del gruppo specificato.</summary>
      <returns>Rappresentazione dinamica del gruppo specificato.</returns>
      <param name="groupName">Nome del gruppo.</param>
      <param name="excludeConnectionIds">Elenco di ID connessione da escludere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Groups(System.Collections.Generic.IList{System.String},System.String[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider">
      <summary>Descrive il provider di descrittori di hub, che fornisce informazioni sugli hub disponibili.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.GetHubs">
      <summary>Recupera tutti gli hub disponibili.</summary>
      <returns>Raccolta di descrittori di hub.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Tenta di recuperare un hub con un nome specificato.</summary>
      <returns>True se è stato trovato un hub.</returns>
      <param name="hubName">Nome dell'hub.</param>
      <param name="descriptor">Oggetto descrittore recuperato.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext">
      <summary>Descrizione di una chiamata di un metodo dell'hub sul lato server originata da un client.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Args">
      <summary>Ottiene gli argomenti da passare al metodo richiamato.</summary>
      <returns>Argomenti da passare al metodo richiamato.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Hub">
      <summary>Ottiene un'istanza dell'hub contenente il metodo richiamato come membro.</summary>
      <returns>Istanza dell'hub contenente il metodo richiamato come membro.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.MethodDescriptor">
      <summary>Ottiene una escrizione del metodo richiamato dal client.</summary>
      <returns>Descrizione del metodo richiamato dal client.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.StateTracker">
      <summary>Ottiene l'archivio chiave-valore che rappresenta lo stato dell'hub sul client al momento della chiamata.</summary>
      <returns>Archivio chiave-valore che rappresenta lo stato dell'hub nel client al momento della chiamata.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubManager">
      <summary>Descrive un gestore di hub, ovvero il punto principale dell'intero hub e del processo di ricerca dei metodi.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHub(System.String)">
      <summary>Recupera un singolo descrittore di hub.</summary>
      <returns>Descrittore di hub, se trovato.In caso contrario, Null.</returns>
      <param name="hubName">Nome dell'hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Recupera un metodo con un nome specificato in un hub specificato.</summary>
      <returns>Descrittore del metodo, se trovato.In caso contrario, Null.</returns>
      <param name="hubName">Nome dell'hub.</param>
      <param name="method">Nome del metodo da trovare.</param>
      <param name="parameters">Parametri del metodo di cui trovare una corrispondenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Ottiene tutti i metodi che è possibile chiamare su un hub specificato.</summary>
      <returns>Elenco di metodi disponibili.</returns>
      <param name="hubName">Nome dell'hub.</param>
      <param name="predicate">Predicato facoltativo per l'applicazione di un filtro ai risultati.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Recupera tutti gli hub disponibili corrispondenti al predicato specificato.</summary>
      <returns>Elenco di descrittori di hub.</returns>
      <param name="predicate">Predicato.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHub(System.String)">
      <summary>Risolve un nome di hub specificato in un oggetto concreto.</summary>
      <returns>Istanza di implementazione dell'hub, se trovata.In caso contrario, Null.</returns>
      <param name="hubName">Nome dell'hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHubs">
      <summary>Risolve tutti gli hub disponibili nei relativi oggetti concreti.</summary>
      <returns>Elenco di istanze di hub.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext">
      <summary>Descrizione di una chiamata di un metodo dell'hub sul lato client originata dal server.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Connection">
      <summary>Ottiene <see cref="T:Microsoft.AspNet.SignalR.IConnection" />, se presente, corrispondente al client che ha richiamato il metodo dell'hub sul lato server che a sua volta richiama il metodo dell'hub sul lato client.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.IConnection" />, se presente, corrispondente al client che ha richiamato il metodo dell'hub sul lato server che a sua volta richiama il metodo dell'hub sul lato client.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.ExcludedSignals">
      <summary>Ottiene i segnali (ID connessione, nome del tipo di hub oppure nome del tipo di hub + "." + nome del gruppo) appartenenti ai client che non devono ricevere la chiamata del metodo indipendentemente dall'impostazione di <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" />.</summary>
      <returns>Segnali (ID connessione, nome del tipo di hub oppure nome del tipo di hub + "." + nome del gruppo) appartenenti ai client che non devono ricevere la chiamata del metodo indipendentemente dall'impostazione di <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Invocation">
      <summary>Ottiene una descrizione della chiamata al metodo da effettuare sul client.</summary>
      <returns>Descrizione della chiamata al metodo da effettuare nel client.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal">
      <summary>Ottiene il segnale (ID connessione, nome del tipo di hub oppure nome del tipo di hub + "." + nome del gruppo) appartenenti ai client che devono ricevere la chiamata del metodo.</summary>
      <returns>Segnali (ID connessione, nome del tipo di hub oppure nome del tipo di hub + "." + nome del gruppo) appartenenti ai client che devono ricevere la chiamata del metodo.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signals">
      <summary>Segnali (ID connessione, nome del tipo di hub oppure nome del tipo di hub + "." + nome del gruppo) appartenenti ai client che devono ricevere la chiamata del metodo.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline">
      <summary>Raccolta di moduli che può intercettare e personalizzare varie fasi del processo di elaborazione dell'hub, tra cui la connessione, la riconnessione, la disconnessione, la chiamata di metodi dell'hub sul lato server, la chiamata di metodi dell'hub sul lato client, l'autorizzazione di client dell'hub e la nuova partecipazione a gruppi dell'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)">
      <summary>Aggiunge un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" /> alla pipeline dell'hub.I moduli aggiunti inizialmente alla pipeline eseguiranno il wrapping dei moduli aggiunti successivamente.Prima di poter richiamare qualsiasi metodo su <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />, è necessario aggiungere tutti i moduli alla pipeline.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> con il modulo appena aggiunto che consente di concatenare chiamate al metodo <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.Questo metodo modifica la pipeline su cui viene richiamato e non è pertanto necessario archiviarne il risultato.</returns>
      <param name="pipelineModule">Modulo che può intercettare e personalizzare varie fasi del processo di elaborazione dell'hub, tra cui la connessione, la riconnessione, la disconnessione, la chiamata di metodi dell'hub sul lato server, la chiamata di metodi dell'hub sul lato client, l'autorizzazione di client dell'hub e la nuova partecipazione a gruppi dell'hub.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker">
      <summary>Le implementazioni di questa interfaccia sono responsabili dell'esecuzione delle operazioni necessarie per completare le varie fasi del processo di elaborazione dell'hub, tra cui la connessione, la riconnessione, la disconnessione, la chiamata di metodi dell'hub sul lato server, la chiamata di metodi dell'hub sul lato client, l'autorizzazione di client dell'hub e la nuova partecipazione a gruppi dell'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.AuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Questo metodo deve essere chiamato prima che un client sottoscriva segnali appartenenti all'hub descritto da <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Per impostazione predefinita, <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> cerca attributi in <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> per determinare se il client è autorizzato a sottoscrivere chiamate del metodo per l'hub descritto.</summary>
      <returns>true se il client è autorizzato a sottoscrivere chiamate del metodo dell'hub sul lato client. In caso contrario, false.</returns>
      <param name="hubDescriptor">Descrizione dell'hub a cui il client sta tentando di connettersi.</param>
      <param name="request">Richiesta di connessione effettuata dal client che deve includere l'utente <see cref="T:System.Security.Principal.IPrincipal" /> del client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Connect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Questo metodo deve essere chiamato quando un client si connette a <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> per ciascuna interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> a cui il client si connette.Per impostazione predefinita, determina una chiamata del metodo OnConnected di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> a cui il client è connesso.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Disconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Questo metodo deve essere chiamato quando un client si disconnette da <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> per ciascuna interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> a cui il client era connesso.Per impostazione predefinita, determina una chiamata del metodo OnDisconnected di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> da cui il client si è disconnesso.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Invoke(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Richiama un metodo dell'hub sul lato server.</summary>
      <returns>Operazione asincrona che fornisce il valore restituito della chiamata del metodo dell'hub sul lato server.</returns>
      <param name="context">Descrizione della chiamata del metodo dell'hub sul lato server.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Reconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Questo metodo deve essere chiamato quando un client si riconnette a <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> per ciascuna interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> a cui il client si connette.Per impostazione predefinita, determina una chiamata del metodo OnReconnected di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> a cui il client si è riconnesso.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.RejoiningGroups(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String})">
      <summary>Questo metodo determina a quali dei gruppi appartenenti all'hub descritto da <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> il client è autorizzato a partecipare di nuovo.Per impostazione predefinita, i client che si riconnettono al server vengono rimossi da tutti i gruppi di cui erano in precedenza membri, per evitare che client non attendibili affermino di essere membri di gruppi a cui non sono mai stati autorizzati a partecipare.</summary>
      <returns>Elenco di gruppi a cui il client è autorizzato a partecipare di nuovo.</returns>
      <param name="hubDescriptor">Descrizione dell'hub ai cui gruppi il client sta tentando di partecipare di nuovo.</param>
      <param name="request">Richiesta di riconnessione effettuata dal client che sta tentando di partecipare di nuovo ai gruppi.</param>
      <param name="groups">Elenco di gruppi appartenenti all'hub pertinente di cui il client afferma di essere stato membro prima della riconnessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Send(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Richiama un metodo dell'hub sul lato client.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="context">Descrizione della chiamata del metodo dell'hub sul lato client.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule">
      <summary>Un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" /> può intercettare e personalizzare varie fasi del processo di elaborazione dell'hub, tra cui la connessione, la riconnessione, la disconnessione, la chiamata di metodi dell'hub sul lato server, la chiamata di metodi dell'hub sul lato client, l'autorizzazione di client dell'hub e la nuova partecipazione a gruppi dell'hub.Per attivare i moduli, chiamare il metodo <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.I moduli combinati aggiunti a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> vengono richiamati mediante l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Esegue il wrapping di una funzione da chiamare prima che un client sottoscriva segnali appartenenti all'hub descritto da <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Per impostazione predefinita, <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> cerca attributi in <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> per determinare se il client è autorizzato a sottoscrivere chiamate del metodo per l'hub descritto.La funzione restituisce true se il client è autorizzato a sottoscrivere chiamate del metodo dell'hub sul lato client e false in caso contrario.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping che determina se il client è autorizzato a connettersi all'hub descritto.</returns>
      <param name="authorizeConnect">Funzione che determina se il client è autorizzato a connettersi all'hub descritto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Esegue il wrapping di una funzione chiamata quando un client si connette a <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> per ciascuna interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> a cui il client si connette.Per impostazione predefinita, determina una chiamata del metodo OnConnected di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping da chiamare quando un client si connette a un hub.</returns>
      <param name="connect">Funzione da chiamare quando un client si connette a un hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Esegue il wrapping di una funzione chiamata quando un client si disconnette da <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> per ciascuna interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> a cui il client era connesso.Per impostazione predefinita, determina una chiamata del metodo OnDisconnected di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping da chiamare quando un client si disconnette da un hub.</returns>
      <param name="disconnect">Funzione da chiamare quando un client si disconnette da un hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Esegue il wrapping di una funzione che richiama un metodo dell'hub sul lato server.Anche se un client non è stato autorizzato a connettersi a un hub, è comunque autorizzato a richiamare metodi sul lato server di tale hub, a meno che la chiamata non sia impedita in <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> mediante una mancata esecuzione del parametro di chiamata.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping che richiama un metodo dell'hub sul lato server.</returns>
      <param name="invoke">Funzione che richiama un metodo dell'hub sul lato server.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Esegue il wrapping di una funzione che richiama un metodo dell'hub sul lato client.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping che richiama un metodo dell'hub sul lato client.</returns>
      <param name="send">Funzione che richiama un metodo dell'hub sul lato client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Esegue il wrapping di una funzione chiamata quando un client si riconnette a <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> per ciascuna interfaccia <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> a cui il client si connette.Per impostazione predefinita, determina una chiamata del metodo OnReconnected di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping da chiamare quando un client si riconnette a un hub.</returns>
      <param name="reconnect">Funzione da chiamare quando un client si riconnette a un hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Esegue il wrapping di una funzione che determina a quali dei gruppi appartenenti all'hub descritto da <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> il client è autorizzato a partecipare di nuovo.Per impostazione predefinita, i client che si riconnettono al server vengono rimossi da tutti i gruppi di cui erano in precedenza membri, per evitare che client non attendibili affermino di essere membri di gruppi a cui non sono mai stati autorizzati a partecipare.</summary>
      <returns>Funzione di cui è stato eseguito il wrapping che determina a quali gruppi il client è autorizzato a partecipare di nuovo.</returns>
      <param name="rejoiningGroups">Funzione che determina a quali gruppi il client è autorizzato a partecipare di nuovo.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser">
      <summary>Gestisce l'analisi delle richieste in ingresso mediante <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser.Parse(System.String,Newtonsoft.Json.JsonSerializer)">
      <summary>Analizza il payload dell'hub in ingresso in un oggetto <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</summary>
      <returns>Oggetto <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" /> risultante.</returns>
      <param name="data">Payload dell'hub non elaborato.</param>
      <param name="serializer">Oggetto JsonSerializer utilizzato per analizzare i dati.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier">
      <summary>Combina, minimizza e memorizza nella cache il codice JavaScript dell'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier.Minify(System.String)">
      <summary>Minimizza l'origine specificata di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />.</summary>
      <returns>Origine specificata di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />.</returns>
      <param name="source">Origine minimizzata.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator">
      <summary>Genera un servizio proxy per l'interfaccia JavaScript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Genera un proxy per l'URL servizio di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />.</summary>
      <returns>Proxy per generare l'URL servizio di <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />.</returns>
      <param name="serviceUrl">URL servizio.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider">
      <summary>Descrive un provider di metodi di hub che compila una raccolta di metodi disponibili in un hub specificato.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Recupera tutti i metodi in un hub specificato.</summary>
      <returns>Metodi disponibili.</returns>
      <param name="hub">Oggetto descrittore di hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Tenta di recuperare un metodo.</summary>
      <returns>True se è stato trovato un metodo.</returns>
      <param name="hub">Oggetto descrittore di hub.</param>
      <param name="method">Nome del metodo.</param>
      <param name="descriptor">Descrittore del metodo, se trovato.In caso contrario, Null.</param>
      <param name="parameters">Parametri del metodo di cui trovare una corrispondenza.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IParameterResolver">
      <summary>Descrive un resolver di parametri, che consente di risolvere valori corrispondenti a parametri in base alle informazioni fornite.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Risolve valori di parametro di metodo in base agli oggetti forniti.</summary>
      <returns>Matrice di valori di parametro.</returns>
      <param name="method">Descrittore del metodo.</param>
      <param name="values">Elenco di valori in base a cui risolvere i valori di parametro.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor">
      <summary>Rappresenta le informazioni su un singolo metodo dell'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Attributes">
      <summary>Ottiene o imposta gli attributi associati a questo metodo.</summary>
      <returns>Attributi associati a questo metodo.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Hub">
      <summary>Ottiene o imposta l'oggetto descrittore di hub, che rappresenta la destinazione di questo metodo.</summary>
      <returns>Oggetto descrittore di hub, che rappresenta la destinazione di questo metodo.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Invoker">
      <summary>Ottiene o imposta il delegato della chiamata del metodo.Accetta come argomenti un hub di destinazione e una matrice di argomenti della chiamata.</summary>
      <returns>Delegato della chiamata del metodo.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Parameters">
      <summary>Ottiene o imposta i parametri del metodo disponibili.</summary>
      <returns>Parametri del metodo disponibili.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.ReturnType">
      <summary>Ottiene o imposta il tipo restituito di questo metodo.</summary>
      <returns>Tipo restituito di questo metodo.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodExtensions">
      <summary>Rappresenta l'estensione dei metodi per gli hub SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodExtensions.Matches(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Specifica se l'estensione di un metodo corrisponde al descrittore di un altro metodo.</summary>
      <returns>true se l'estensione di un metodo corrisponde al descrittore di un altro metodo. In caso contrario; false.</returns>
      <param name="methodDescriptor">Descrittore del metodo.</param>
      <param name="parameters">Elenco di parametri.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.GetInvocationData(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.Invoke(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException">
      <summary>Rappresenta un'eccezione che viene generata quando un client non è autorizzato a connettersi a un hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> con dati serializzati.</summary>
      <param name="info">Informazioni serializzate sull'eccezione.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> con messaggio di errore.</summary>
      <param name="message">Messaggio relativo all'eccezione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> con messaggio di errore ed eccezione interna.</summary>
      <param name="message">Messaggio relativo all'eccezione.</param>
      <param name="inner">Errore che ha causato l'eccezione.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier">
      <summary>Rappresenta un minimizzatore per Javascript null.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Instance">
      <summary>Specifica l'istanza di <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Minify(System.String)">
      <summary>Minimizza l'origine specificata di Javascript.</summary>
      <returns>Origine minimizzata.</returns>
      <param name="source">Origine da minimizzare.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor">
      <summary>Provides details about the null method.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor" /> class.</summary>
      <param name="methodName">The name for this null method.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Attributes">
      <summary>Gets or sets the attributes attached to this method.</summary>
      <returns>The attributes attached to this method.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Invoker">
      <summary>Gets or sets the method invocation delegate. Takes a target hub and an array of invocation arguments as it's arguments.</summary>
      <returns>The method invocation delegate.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Parameters">
      <summary>Gets or sets the available method parameters.</summary>
      <returns>The available method parameters.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor">
      <summary>Rappresenta le informazioni su un singolo parametro del metodo dell'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.Name">
      <summary>Ottiene o imposta il nome del parametro.</summary>
      <returns>Nome del parametro.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.ParameterType">
      <summary>Ottiene o imposta il tipo di parametro.</summary>
      <returns>Tipo di parametro.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider">
      <summary>Descrive il provider di descrittori di hub e fornisce informazioni riflesse sugli hub disponibili.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider" />.</summary>
      <param name="resolver">Classe <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.BuildHubsCache">
      <summary>Recupera una raccolta di connessione per creare la cache dell'hub.</summary>
      <returns>Raccolta di connessione per creare la cache dell'hub.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.GetHubs">
      <summary>Recupera tutti gli hub disponibili. </summary>
      <returns>Raccolta degli hub disponibili.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Tenta di recuperare un hub con un nome specificato.</summary>
      <returns>true se l'hub è stato trovato. In caso contrario, false.</returns>
      <param name="hubName">Nome dell'hub da recuperare.</param>
      <param name="descriptor">Quando termina, questo metodo contiene l'oggetto del descrittore recuperato.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider">
      <summary>Rappresenta il metodo riflesso per il provider di descrittori.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Restituisce una raccolta di metodi per il provider.</summary>
      <returns>Raccolta di metodi per il provider.</returns>
      <param name="hub">Descrittore di hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Cerca nell'<paramref name="hub" /> specificato il <paramref name="method" /> indicato.</summary>
      <returns>true se nell'hub viene trovato il metodo corrispondente al nome e al set di parametri specificati. In caso contrario, false.</returns>
      <param name="hub">Hub in cui eseguire la ricerca del <paramref name="method" /> specificato.</param>
      <param name="method">Nome del metodo da cercare.</param>
      <param name="descriptor">Se l'operazione ha esito positivo, corrisponde a <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" /> risolto.</param>
      <param name="parameters">Set di parametri utilizzato per consentire l'individuazione di un overload specifico del <paramref name="method" /> specificato.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper">
      <summary>Rappresenta un helper di reflection.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetAttributeValue``2(System.Reflection.ICustomAttributeProvider,System.Func{``0,``1})">
      <summary>Ottiene il valore dell'attributo per questo helper.</summary>
      <returns>Valore dell'attributo per questo helper.</returns>
      <param name="source">Origine dove ottenere il valore.</param>
      <param name="valueGetter">Valore del metodo Get.</param>
      <typeparam name="TAttribute">Tipo dell'attributo.</typeparam>
      <typeparam name="TResult">Tipo di risultato.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetExportedHubMethods(System.Type)">
      <summary>Ottiene un elenco di metodi dell'hub esportati.</summary>
      <returns>Elenco di metodi dell'hub esportati.</returns>
      <param name="type">Tipo di metodi da ottenere.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy">
      <summary>Rappresenta il proxy di segnale utilizzato dall'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Ottiene i dati della chiamata dell'hub del client associati al proxy.</summary>
      <returns>Dati della chiamata dell'hub del client associati al proxy.</returns>
      <param name="method">Metodo.</param>
      <param name="args">Argomenti.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.HubName">
      <summary>Ottiene o imposta il nome dell'hub.</summary>
      <returns>Nome dell'hub.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoke(System.String,System.Object[])">
      <summary>Richiama un metodo e restituisce i risultati della chiamata del metodo.</summary>
      <returns>Risultato dell'operazione.</returns>
      <param name="method">Metodo da richiamare.</param>
      <param name="args">Matrice di argomento.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoker"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Signal">
      <summary>Ottiene o imposta il segnale associato a <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />.</summary>
      <returns>Segnale associato a <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Fornisce l'implementazione per operazioni che ottengono i valori dei membri.</summary>
      <returns>true se l'operazione viene eseguita correttamente. In caso contrario, false.</returns>
      <param name="binder">Informazioni sull'oggetto che ha chiamato l'operazione dinamica.</param>
      <param name="result">Risultato dell'operazione get.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Fornisce l'implementazione per operazioni che richiamano un membro.</summary>
      <returns>true se l'operazione viene eseguita correttamente. In caso contrario, false.</returns>
      <param name="binder">Fornisce informazioni sull'operazione dinamica.</param>
      <param name="args">Argomenti passati al membro dell'oggetto durante l'operazione di richiamata.</param>
      <param name="result">Risultato della chiamata del membro.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker">
      <summary>Rappresenta un dizionario per il rilevamento di modifiche.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />.</summary>
      <param name="values">Valore del dizionario.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.GetChanges">
      <summary>Ottiene le modifiche associate allo strumento per l'individuazione.</summary>
      <returns>Modifiche associate allo strumento per l'individuazione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.Item(System.String)">
      <summary>Ottiene o imposta l'elemento associato allo strumento per l'individuazione utilizzando una chiave specificata.</summary>
      <returns>Elemento associato allo strumento per l'individuazione utilizzando una chiave specificata.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy">
      <summary>Rappresenta il proxy di segnale con stato utilizzato dall'hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Ottiene i dati della chiamata dell'hub del client associati al proxy.</summary>
      <returns>Dati della chiamata dell'hub del client associati al proxy.</returns>
      <param name="method">Metodo.</param>
      <param name="args">Argomenti.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Fornisce l'implementazione per operazioni che ottengono i valori dei membri.</summary>
      <returns>true se l'operazione viene eseguita correttamente. In caso contrario, false.</returns>
      <param name="binder">Informazioni sull'oggetto che ha chiamato l'operazione dinamica.</param>
      <param name="result">Risultato dell'operazione get.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Fornisce l'implementazione per operazioni che impostano i valori dei membri.</summary>
      <returns>true se l'operazione viene eseguita correttamente. In caso contrario, false.</returns>
      <param name="binder">Informazioni sull'oggetto che ha chiamato l'operazione dinamica.</param>
      <param name="value">Risultato dell'operazione set.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.UserProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.UserProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler">
      <summary>Rappresenta un'istanza che gestisce il kit di certificazione app (ACK, App Certification Kit).</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor(System.Boolean,System.TimeSpan,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
      <param name="completeAcksOnTimeout">true se ACK è stato completato al timeout. In caso contrario, false.</param>
      <param name="ackThreshold">Soglia ACK.</param>
      <param name="ackInterval">Intervallo ACK.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.CreateAck(System.String)">
      <summary>Crea un nuovo oggetto ACK.</summary>
      <returns>Oggetto ACK creato.</returns>
      <param name="id">Identificatore.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose">
      <summary>Rilascia tutte le risorse utilizzate da <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose(System.Boolean)">
      <summary>Rilascia tutte le risorse utilizzate da questa istanza.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite. false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.TriggerAck(System.String)">
      <summary>Attiva un oggetto ACK specificato.</summary>
      <returns>Risultato dell'operazione.</returns>
      <param name="id">Identificatore ACK.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader">
      <summary>Rappresenta il lettore di testo associati al segmento di matrice.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.#ctor(System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader" />.</summary>
      <param name="buffer">Buffer del segmento di matrice</param>
      <param name="encoding">Codifica.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Legge un numero massimo specificato di caratteri dal lettore corrente e scrive i dati in un buffer, a partire dall'indice specificato.</summary>
      <returns>Numero di caratteri che sono stati letti.</returns>
      <param name="buffer">Contiene la matrice di caratteri specificata con i valori compresi tra l'indice e sostituiti dai caratteri letti dall'origine corrente.</param>
      <param name="index">Posizione nel buffer in cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di caratteri da leggere.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Connection">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.#ctor(Microsoft.AspNet.SignalR.Messaging.IMessageBus,Newtonsoft.Json.JsonSerializer,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IAckHandler,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Infrastructure.IProtectedData)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.Connection" />.</summary>
      <param name="newMessageBus">Nuovo bus di messaggi.</param>
      <param name="jsonSerializer">Serializzatore JSON.</param>
      <param name="baseSignal">Segnale di base.</param>
      <param name="connectionId">ID connessione.</param>
      <param name="signals">Raccolta di segnali.</param>
      <param name="groups">Raccolta di gruppi.</param>
      <param name="traceManager">Gestore di tracce.</param>
      <param name="ackHandler">Gestore ACK.</param>
      <param name="performanceCounterManager">Gestore dei contatori delle prestazioni.</param>
      <param name="protectedData">Dati protetti.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.DefaultSignal">
      <summary>Ottiene il segnale principale per questa connessione.</summary>
      <returns>Segnale principale per la connessione.</returns>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyAdded">
      <summary>Si verifica quando l'evento ha aggiunto a una chiave.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyRemoved">
      <summary>Si verifica quando l'evento ha rimosso la chiave.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Identity">
      <summary>Ottiene una proprietà di identità per questa connessione.</summary>
      <returns>Proprietà di identità per questa connessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Microsoft#AspNet#SignalR#Messaging#ISubscriber#EventKeys">
      <summary>Ottiene un elenco di oggetti a cui è possibile accedere singolarmente dall'indice.</summary>
      <returns>Elenco di oggetti a cui è possibile accedere singolarmente dall'indice.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Riceve un messaggio di risposta al metodo di connessione.</summary>
      <returns>Messaggio di risposta al metodo di connessione da ricevere.</returns>
      <param name="messageId">ID del messaggio.</param>
      <param name="callback">Determina se la connessione crea una risposta di callback.</param>
      <param name="maxMessages">Numero massimo di messaggi.</param>
      <param name="state">Stato di connessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Invia un messaggio a una o più connessioni.</summary>
      <returns>Messaggio inviato a una o più connessioni.</returns>
      <param name="message">Messaggio inviato alle connessioni.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Subscription">
      <summary>Ottiene o imposta una sottoscrizione per questa proprietà della connessione.</summary>
      <returns>Sottoscrizione per questa proprietà della connessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.WriteCursor">
      <summary>Ottiene o imposta il cursore per scrivere una serie sequenziale di caratteri.</summary>
      <returns>Cursore per scrivere una serie sequenziale di caratteri.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager">
      <summary>Fornisce un'implementazione <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" /> predefinita.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager" />.</summary>
      <param name="resolver">Classe <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnection(System.Type)">
      <summary>Restituisce un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> per la classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> per la classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="type">Tipo di <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnectionContext``1">
      <summary>Restituisce un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> per la classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> per la classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <typeparam name="T">Tipo di <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext``1">
      <summary>Restituisce il contesto dell'hub per questa connessione.</summary>
      <returns>Contesto dell'hub per questa connessione.</returns>
      <typeparam name="T">Tipo dell'hub.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext(System.String)">
      <summary>Restituisce il contesto dell'hub per questa connessione dato il nome specificato.</summary>
      <returns>Contesto dell'hub per questa connessione.</returns>
      <param name="hubName">Nome dell'hub.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData">
      <summary>Fornisce metodi per la protezione dei dati.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.#ctor(Microsoft.Owin.Security.DataProtection.IDataProtectionProvider)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData" />.</summary>
      <param name="provider">Provider di protezione dei dati.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Protect(System.String,System.String)">
      <summary>Protegge i dati specificati.</summary>
      <returns>Dati protetti.</returns>
      <param name="data">Dati da proteggere.</param>
      <param name="purpose">Scopo della protezione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Unprotect(System.String,System.String)">
      <summary>Rimuove la protezione sui dati specificati.</summary>
      <returns>Dati non protetti.</returns>
      <param name="protectedValue">Dati protetti.</param>
      <param name="purpose">Scopo della protezione.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData">
      <summary>Fornisce metodi per la protezione dei dati.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Protect(System.String,System.String)">
      <summary>Protegge i dati specificati.</summary>
      <returns>Dati protetti.</returns>
      <param name="data">Dati da proteggere.</param>
      <param name="purpose">Scopo della protezione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Unprotect(System.String,System.String)">
      <summary>Rimuove la protezione sui dati specificati.</summary>
      <returns>Dati non protetti.</returns>
      <param name="protectedValue">Dati protetti.</param>
      <param name="purpose">Scopo della protezione.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler">
      <summary>Fornisce un'interfaccia che rappresenta l'istanza che gestisce il kit di certificazione app (ACK, App Certification Kit).</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.CreateAck(System.String)">
      <summary>Crea un nuovo oggetto ACK.</summary>
      <returns>Oggetto ACK creato.</returns>
      <param name="id">Identificatore.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.TriggerAck(System.String)">
      <summary>Attiva un oggetto ACK specificato.</summary>
      <returns>Risultato dell'operazione.</returns>
      <param name="id">Identificatore ACK.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter">
      <summary>Represents the base interface for class that has the ability to write raw binary data.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter.Write(System.ArraySegment{System.Byte})">
      <summary>Writes raw binary data to underlying stream.</summary>
      <param name="data">The raw binary data to write.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager">
      <summary>Consente l'accesso agli hub, alle connessioni permanenti e ai riferimenti.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetConnectionContext``1">
      <summary>Restituisce un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> per la classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> per la classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <typeparam name="T">Tipo di <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext``1">
      <summary>Restituisce le informazioni sull'hub associate alla connessione.</summary>
      <returns>Informazioni sull'hub associate alla connessione.</returns>
      <typeparam name="T">Tipo dell'hub.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext(System.String)">
      <summary>Restituisce le informazioni sull'hub associate alla connessione.</summary>
      <returns>Informazioni sull'hub associate alla connessione.</returns>
      <param name="hubName">Nome dell'hub.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper">
      <summary>Rappresenta l'helper per le operazione atomiche per le variabili condivise da più thread.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper.CompareExchangeOr(System.Int32@,System.Int32,System.Int32,System.Int32)">
      <summary>Confronta due oggetti per l'uguaglianza del riferimento e per verificare se sono uguali.</summary>
      <returns>true se i due oggetti sono uguali. In caso contrario, false.</returns>
      <param name="location">Oggetto di destinazione confrontato con comparando ed eventualmente sostituito.</param>
      <param name="value">Oggetto che sostituisce l'oggetto di destinazione se il confronto restituisce l'uguaglianza.</param>
      <param name="comparandA">Primo comparando.</param>
      <param name="comparandB">Secondo comparando.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Close">
      <summary>Chiude il contatore delle prestazioni e libera tutte le risorse allocate da questa istanza di contatore delle prestazioni.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.CounterName"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Decrement">
      <summary>Decrementa i contatori delle prestazioni associati di uno mediante un'operazione atomica efficiente.</summary>
      <returns>Valore del contatore decrementato.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Increment">
      <summary>Incrementa i contatori delle prestazioni associati di uno mediante un'operazione atomica efficiente.</summary>
      <returns>Valore del contatore incrementato.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.IncrementBy(System.Int64)">
      <summary>Incrementa o decrementa il valore dei contatori delle prestazioni associati di un importo specificato mediante un'operazione atomica efficiente.</summary>
      <returns>Nuovo valore del contatore.</returns>
      <param name="value">Valore in base a cui incrementare.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.NextSample">
      <summary>Ottiene un esempio di contatore e restituisce il relativo valore non elaborato o non calcolato.</summary>
      <returns>Esempio di contatore e restituisce il relativo valore non elaborato o non calcolato.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RawValue">
      <summary>Ottiene o imposta il valore non elaborato o non calcolato di questo contatore.</summary>
      <returns>Valore non elaborato del contatore.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RemoveInstance">
      <summary>Elimina l'istanza di categoria specificata dalla proprietà InstanceName dell'oggetto PerformanceCounter.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager">
      <summary>Consente l'accesso ai contatori delle prestazioni.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di messaggi ricevuti dalle connessioni (da server a client) al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di messaggi ricevuti dalle connessioni (da server a client) dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di messaggi inviati dalle connessioni (da client a server) al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di messaggi inviati dalle connessioni (da client a server) dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsConnected">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di eventi Connect di connessione dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsCurrent">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di connessioni attualmente attive.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsDisconnected">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di eventi Disconnect di connessione dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsReconnected">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di eventi Reconnect di connessione dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di errori di qualsiasi tipo elaborati al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di errori di qualsiasi tipo elaborati dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di errori di chiamata dell'hub al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di errori di chiamata dell'hub dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di errori di risoluzione dell'hub al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di errori di risoluzione dell'hub elaborati dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di errori di trasporto al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di errori di trasporto elaborati dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Inizializza i contatori delle prestazioni.</summary>
      <param name="instanceName">Nome dell'istanza dell'host.</param>
      <param name="hostShutdownToken">Oggetto CancellationToken che rappresenta l'arresto dell'host.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Carica un contatore delle prestazioni.</summary>
      <param name="categoryName">Nome della categoria.</param>
      <param name="counterName">Nome del contatore.</param>
      <param name="instanceName">Nome dell'istanza.</param>
      <param name="isReadOnly">Indica se il contatore è di sola lettura.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di processi di lavoro allocati al recapito dei messaggi nel bus di messaggi.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di processi di lavoro attualmente occupati nel recapito dei messaggi nel bus di messaggi.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di messaggi pubblicati nel bus di messaggi al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di messaggi pubblicati nel bus di messaggi dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di messaggi ricevuti dai sottoscrittori al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di messaggi ricevuti dai sottoscrittori dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero corrente di sottoscrittori al bus di messaggi.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di nuovi sottoscrittori al bus di messaggi al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di sottoscrittori al bus di messaggi dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero corrente di argomenti nel bus di messaggi.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di errori di scalabilità orizzontale al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di errori di scalabilità orizzontale dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di messaggi ricevuti dal bus di messaggi di scalabilità orizzontale al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Ottiene il contatore delle prestazioni che rappresenta la lunghezza della coda di invio con scalabilità orizzontale corrente.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di flussi logici nel provider di bus di messaggi di scalabilità orizzontale attualmente configurato che si trovano in stato di buffer.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di flussi logici nel provider di bus di messaggi di scalabilità orizzontale attualmente configurato che si trovano in stato aperto.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di flussi logici nel provider di bus di messaggi di scalabilità orizzontale attualmente configurato.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData">
      <summary>Rappresenta un'interfaccia che fornisce metodi per crittografare e decrittografare i dati associati all'infrastruttura SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Protect(System.String,System.String)">
      <summary>Protegge i dati specificati.</summary>
      <returns>Dati protetti.</returns>
      <param name="data">Dati da proteggere.</param>
      <param name="purpose">Scopo della protezione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Unprotect(System.String,System.String)">
      <summary>Rimuove la protezione di dati specifici.</summary>
      <returns>Dati non protetti.</returns>
      <param name="protectedValue">Valore protetto da rendere non protetto.</param>
      <param name="purpose">Motivo della rimozione della protezione.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager">
      <summary>Genera un ID del server.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager.ServerId">
      <summary>ID del server.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier">
      <summary>Fornisce un'interfaccia che rappresenta una classe che riduce la dimensione di una stringa.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)">
      <summary>Minimizza una stringa in modo che possa essere invertita dall'istanza di <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" />.</summary>
      <returns>Rappresentazione minimizzata di <paramref name="value" /> senza i seguenti caratteri: , | \</returns>
      <param name="value">Stringa da minimizzare.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)">
      <summary>Una chiamata a questa funzione indica che qualsiasi tentativo futuro di annullare la minimizzazione di stringhe minimizzate in precedenza a partire da <paramref name="value" /> può essere soddisfatto con un valore restituito null.Questo consente di eseguire la pulizia delle strutture di dati interne che contengono riferimenti a <paramref name="value" />.</summary>
      <param name="value">Stringa minimizzata in precedenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)">
      <summary>Inverte una chiamata a <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> che è stata eseguita almeno una volta sull'istanza di <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> senza chiamate successive a <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> condividendo lo stesso argomento della chiamata a <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> che ha restituito <paramref name="value" />.</summary>
      <returns>Argomento di tutte le precedenti chiamate a <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> che hanno restituito <paramref name="value" />.Se ogni chiamata a <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> sull'istanza di <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> non ha mai restituito <paramref name="value" /> o se la chiamata più recente a <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> che ha restituito <paramref name="value" /> è stata seguita da una chiamata a <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> con condivisione dello stesso argomento, <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)" /> può restituire null ma non deve generare un'eccezione.</returns>
      <param name="value">Stringa minimizzata restituita da una chiamata precedente a <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager">
      <summary>Gestisce i contatori delle prestazioni mediante i contatori delle prestazioni di Windows.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.DefaultDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
      <param name="resolver">Resolver di dipendenza predefinito.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.CategoryName">
      <summary>Specifica il nome della categoria per questo contatore delle prestazioni.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di messaggi ricevuti dalle connessioni (da server a client) al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di messaggi ricevuti dalle connessioni (da server a client) dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di messaggi inviati dalle connessioni (da client a server) al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di messaggi inviati dalle connessioni (da client a server) dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsConnected">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di eventi Connect di connessione dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsCurrent">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di connessioni attualmente attive.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsDisconnected">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di eventi Disconnect di connessione dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsReconnected">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di eventi Reconnect di connessione dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di errori di qualsiasi tipo elaborati al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di errori di qualsiasi tipo elaborati dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di errori di chiamata dell'hub al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di errori di chiamata dell'hub dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di errori di risoluzione dell'hub al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di errori di risoluzione dell'hub elaborati dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di errori di trasporto al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di errori di trasporto elaborati dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Inizializza i contatori delle prestazioni.</summary>
      <param name="instanceName">Nome dell'istanza dell'host.</param>
      <param name="hostShutdownToken">Oggetto CancellationToken che rappresenta l'arresto dell'host.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Carica il contatore delle prestazioni.</summary>
      <param name="categoryName">Nome della categoria.</param>
      <param name="counterName">Nome del contatore.</param>
      <param name="instanceName">Nome dell'istanza.</param>
      <param name="isReadOnly">true se il contatore è di sola lettura. In caso contrario, false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di processi di lavoro allocati al recapito dei messaggi nel bus di messaggi.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di processi di lavoro attualmente occupati nel recapito dei messaggi nel bus di messaggi.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di messaggi pubblicati nel bus di messaggi al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di messaggi pubblicati nel bus di messaggi dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di messaggi ricevuti dai sottoscrittori al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di messaggi ricevuti dai sottoscrittori dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero corrente di sottoscrittori al bus di messaggi.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di nuovi sottoscrittori al bus di messaggi al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di sottoscrittori al bus di messaggi dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero corrente di argomenti nel bus di messaggi.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di errori di scalabilità orizzontale al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero totale di errori di scalabilità orizzontale dall'avvio dell'applicazione.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di messaggi ricevuti dal bus di messaggi di scalabilità orizzontale al secondo.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Ottiene il contatore delle prestazioni che rappresenta la lunghezza della coda di invio con scalabilità orizzontale corrente.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di flussi logici nel provider di bus di messaggi di scalabilità orizzontale attualmente configurato che si trovano in stato di buffer.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di flussi logici nel provider di bus di messaggi di scalabilità orizzontale attualmente configurato che si trovano in stato aperto.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Ottiene il contatore delle prestazioni che rappresenta il numero di flussi logici nel provider di bus di messaggi di scalabilità orizzontale attualmente configurato.</summary>
      <returns>Restituisce <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver">
      <summary>Provides method for resolving protocol.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor(System.Version,System.Version)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
      <param name="min">The minimum version of the protocol to resolve.</param>
      <param name="max">The maximum version of the protocol to resolve.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.Resolve(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Resolves the protocol in the specified SignalR request.</summary>
      <param name="request">The request to resolve.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Purposes">
      <summary>Specifica le costanti per scopi specifici.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.ConnectionToken">
      <summary>Costante ConnectionToken.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.Groups">
      <summary>Costante Groups.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType">
      <summary>Specifica i comandi del server.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType.RemoveConnection">
      <summary>Comando RemoveConnection.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager">
      <summary>Implementazione predefinita di <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.ServerId">
      <summary>Ottiene o imposta l'ID del server.</summary>
      <returns>ID del server.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonValue">
      <summary>Rappresenta un valore JSON.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.CanConvertTo(System.Type)">
      <summary>Converte il valore del parametro nella classe <see cref="T:System.Type" /> specificata.</summary>
      <returns>Valore del parametro convertito.</returns>
      <param name="type">Classe <see cref="T:System.Type" /> in cui convertire il parametro.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.ConvertTo(System.Type)">
      <summary>Converte il valore del parametro nella classe <see cref="T:System.Type" /> specificata.</summary>
      <returns>Valore del parametro convertito.</returns>
      <param name="type">Classe <see cref="T:System.Type" /> in cui convertire il parametro.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonWritable">
      <summary>Le implementazioni gestiscono le relative serializzazioni in JSON.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonWritable.WriteJson(System.IO.TextWriter)">
      <summary>Esegue la serializzazione in JSON mediante una classe <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Classe <see cref="T:System.IO.TextWriter" /> che riceve l'oggetto serializzato in JSON.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions">
      <summary> Estensioni per <see cref="T:Newtonsoft.Json.JsonSerializer" />. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Deserializza JSON in un oggetto .NET.</summary>
      <returns>Oggetto deserializzato dalla stringa JSON.</returns>
      <param name="serializer">Serializzatore.</param>
      <param name="jsonBuffer">Buffer JSON da deserializzare.</param>
      <param name="encoding">Codifica da utilizzare.</param>
      <typeparam name="T">Classe <see cref="T:System.Type" /> dell'oggetto deserializzato.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.String)">
      <summary>Deserializza JSON in un oggetto .NET.</summary>
      <returns>Oggetto deserializzato dalla stringa JSON.</returns>
      <param name="serializer">Serializzatore.</param>
      <param name="json">JSON da deserializzare.</param>
      <typeparam name="T">Classe <see cref="T:System.Type" /> dell'oggetto deserializzato.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Serialize(Newtonsoft.Json.JsonSerializer,System.Object,System.IO.TextWriter)">
      <summary>Serializza l'oggetto specificato nella classe <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="serializer">Serializzatore JSON.</param>
      <param name="value">Oggetto da serializzare.</param>
      <param name="writer">Classe <see cref="T:System.IO.TextWriter" /> in cui serializzare l'oggetto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Stringify(Newtonsoft.Json.JsonSerializer,System.Object)">
      <summary>Serializza l'oggetto specificato in una stringa JSON.</summary>
      <returns>Rappresentazione di una stringa JSON dell'oggetto.</returns>
      <param name="serializer">Serializzatore.</param>
      <param name="value">Oggetto da serializzare.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonUtility">
      <summary> Classe helper per operazioni JSON comuni. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CamelCase(System.String)">
      <summary>Converte il nome specificato in notazione Camel.</summary>
      <returns>Valore della notazione Camel del parametro <paramref name="name" /> specificato.</returns>
      <param name="name">Valore da convertire.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializer">
      <summary>Crea un'istanza di <see cref="T:Newtonsoft.Json.JsonSerializer" /> con l'impostazione predefinita.</summary>
      <returns>Oggetto <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> appena creato.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializerSettings">
      <summary>Crea un'istanza di <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> predefinita.</summary>
      <returns>Oggetto <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> appena creato.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateJsonpCallback(System.String,System.String)">
      <summary>Crea un callback JSONP.</summary>
      <returns>
        <see cref="T:System.String" /> che rappresenta il callback.</returns>
      <param name="callback">Callback da creare.</param>
      <param name="payload">Payload.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JavaScriptMimeType">
      <summary>Ottiene il tipo MIME per Javascript.</summary>
      <returns>Tipo MIME per Javascript.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JsonMimeType">
      <summary>Ottiene il tipo MIME di questa utilità JSON.</summary>
      <returns>Tipo MIME di questa utilità JSON.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Command">
      <summary>Rappresenta i comandi in uso con la messaggistica SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Command.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.Command" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.CommandType">
      <summary>Ottiene o imposta il tipo di comandi.</summary>
      <returns>Tipo di comandi.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Id">
      <summary>Ottiene o imposta l'identificatore del comando.</summary>
      <returns>Identificatore di comando.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Value">
      <summary>Ottiene o imposta il valore di un comando.</summary>
      <returns>Valore del comando.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.WaitForAck">
      <summary>Ottiene o imposta un valore che indica se il comando attende la certificazione prima dell'esecuzione.</summary>
      <returns>true se il comando attende la certificazione prima dell'esecuzione. In caso contrario, false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.CommandType">
      <summary>Enumera i comandi per il messaggio della connessione.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Abort">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.AddToGroup">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Disconnect">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Initializing">
      <summary>Specifica il comando per inizializzare la connessione.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.RemoveFromGroup">
      <summary />
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.IMessageBus">
      <summary>Fornisce i metodi utilizzati per pubblicare e sottoscrivere messaggi dal bus di messaggi SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Stabilisce una sottoscrizione dell'argomento per il sottoscrittore nel bus di messaggi.</summary>
      <returns>Stato della sottoscrizione.</returns>
      <param name="subscriber">Sottoscrittore.</param>
      <param name="cursor">Cursore di lettura che indica le operazioni per la sottoscrizione.</param>
      <param name="callback">Funzione di callback.</param>
      <param name="maxMessages">Dimensione del buffer di messaggi.</param>
      <param name="state">Stato dell'operazione di callback.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscriber">
      <summary>Fornisce dettagli sul sottoscrittore nel bus di messaggi SignalR.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyAdded"></member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyRemoved"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Identity"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Subscription">
      <summary>Ottiene o imposta la sottoscrizione.</summary>
      <returns>Sottoscrizione</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.WriteCursor">
      <summary>Ottiene o imposta il cursore di scrittura.</summary>
      <returns>Cursore di scrittura.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscription">
      <summary>Fornisce metodi per eseguire operazioni e controllare lo stato della sottoscrizione.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscription.Identity">
      <summary>Ottiene o imposta l'identità della sottoscrizione.</summary>
      <returns>Identità della sottoscrizione.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.SetQueued">
      <summary>Imposta la sottoscrizione sullo stato di attività.</summary>
      <returns>true se la sottoscrizione è stata impostata sullo stato di attività. In caso contrario, false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.UnsetQueued">
      <summary>Imposta la sottoscrizione sullo stato di inattività.</summary>
      <returns>true se la sottoscrizione è stata impostata sullo stato di inattività. In caso contrario, false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.Work">
      <summary>Esegue operazioni sul messaggio sottoscritto mediante questa sottoscrizione.</summary>
      <returns>Attività che rappresenta l'operazione sul messaggio sottoscritto.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.#ctor(System.String,System.UInt64,Microsoft.AspNet.SignalR.Messaging.MessageStore{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo" />.</summary>
      <param name="key">Chiave associata all'evento locale.</param>
      <param name="id">Identificatore associato alle informazioni chiave.</param>
      <param name="store">Archivio di messaggi associato alla chiave eventi locale.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Id">
      <summary>Ottiene o imposta l'identificatore associato alle informazioni chiave.</summary>
      <returns>Identificatore associato alle informazioni chiave.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Key">
      <summary>Ottiene o imposta la chiave associata all'evento locale.</summary>
      <returns>Chiave associata all'evento locale.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.MessageStore">
      <summary>Ottiene il messaggio per la chiave.</summary>
      <returns>Messaggio per la chiave.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Message">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.ArraySegment{System.Byte})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />.</summary>
      <param name="source">Origine del messaggio.</param>
      <param name="key">Messaggio chiave.</param>
      <param name="value">Valore del messaggio.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.CommandId">
      <summary>Ottiene o imposta l'identificatore di comando del messaggio.</summary>
      <returns>Identificatore di comando del messaggio.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Encoding">
      <summary>Codifica del messaggio.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Filter">
      <summary>Ottiene o imposta il filtro del messaggio.</summary>
      <returns>Filtro del messaggio.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.GetString"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsAck">
      <summary>Ottiene o imposta un valore che indica se il messaggio è un messaggio di riconoscimento.</summary>
      <returns>true se il messaggio è un messaggio di riconoscimento. In caso contrario, false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsCommand">
      <summary>Ottiene un valore che indica se il messaggio è un messaggio di comando.</summary>
      <returns>true se il messaggio è un messaggio di comando. In caso contrario, false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Key">
      <summary>Ottiene o imposta la chiave per il messaggio.</summary>
      <returns>Chiave per il messaggio.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.MappingId">
      <summary>ID payload.Utilizzato solo negli scenari di scalabilità orizzontale.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.ReadFrom(System.IO.Stream)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Source">
      <summary>Ottiene o imposta l'origine del messaggio.</summary>
      <returns>Origine del messaggio.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.StreamIndex">
      <summary>Indice del flusso da cui deriva questo messaggio.Utilizzato solo negli scenari di scalabilità orizzontale.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Value">
      <summary>Ottiene o imposta il valore del messaggio.</summary>
      <returns>Valore del messaggio.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.WaitForAck">
      <summary>Ottiene o imposta un valore che indica se il messaggio è in attesa di riconoscimento.</summary>
      <returns>true se il messaggio è in attesa di riconoscimento. In caso contrario, false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.WriteTo(System.IO.Stream)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker">
      <summary>Pianifica l'operazione necessaria per una determinata sottoscrizione e contiene un algoritmo per la scelta del numero di processi di lavoro, ovvero thread nel pool di thread, per la gestione dell'operazione pianificata.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
      <param name="performanceCounterManager">Gestore dei contatori delle prestazioni.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose">
      <summary>Rilascia tutte le risorse utilizzate dall'oggetto <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose(System.Boolean)">
      <summary>Rilascia tutte le risorse utilizzate dall'oggetto <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite. false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Schedule(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Pianifica il lavoro sulla sottoscrizione specificata.</summary>
      <param name="subscription">Sottoscrizione da pianificare.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Trace">
      <summary>Ottiene o imposta l'origine di traccia del broker.</summary>
      <returns>Origine di traccia del broker.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBus">
      <summary>Rappresenta il bus di messaggi per SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager,System.Int32)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Counters"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Crea una nuova sottoscrizione per il sottoscrittore.</summary>
      <returns>Sottoscrizione appena creata.</returns>
      <param name="subscriber">Sottoscrittore.</param>
      <param name="cursor">Cursore di lettura che indica le operazioni per la sottoscrizione.</param>
      <param name="callback">Funzione di callback.</param>
      <param name="messageBufferSize">Dimensione del buffer di messaggi.</param>
      <param name="state">Stato dell'operazione di callback.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateTopic(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Save(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.ScheduleEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Stabilisce una sottoscrizione dell'argomento per il sottoscrittore nel bus di messaggi.</summary>
      <returns>Stato della sottoscrizione.</returns>
      <param name="subscriber">Sottoscrittore.</param>
      <param name="cursor">Cursore di lettura che indica le operazioni per la sottoscrizione.</param>
      <param name="callback">Funzione di callback.</param>
      <param name="maxMessages">Dimensione del buffer di messaggi.</param>
      <param name="state">Stato dell'operazione di callback.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Topics"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Trace">
      <summary>Ottiene l'origine di traccia utilizzata per tracciare l'esecuzione del codice.</summary>
      <returns>Origine di traccia utilizzata per tracciare l'esecuzione del codice.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions">
      <summary>Fornisce metodi di estensione al bus di messaggi SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Action{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate``1(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{``0,Microsoft.AspNet.SignalR.Messaging.Message},``0)">
      <summary>Enumera i messaggi.</summary>
      <param name="messages">Elenco contenente i messaggi da enumerare.</param>
      <param name="filter">Metodo che filtra il messaggio enumerato.</param>
      <param name="onMessage">Metodo che gestisce ciascun messaggio enumerato.</param>
      <param name="state">Oggetto che rappresenta lo stato dell'operazione.</param>
      <typeparam name="T">Tipo del parametro <paramref name="state" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Publish(Microsoft.AspNet.SignalR.Messaging.IMessageBus,System.String,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageResult">
      <summary>Rappresenta il risultato di un messaggio.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</summary>
      <param name="terminal">true per indicare che si tratta del risultato del messaggio di un terminale. In caso contrario, false.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</summary>
      <param name="messages">Matrice di messaggi associati con la struttura <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</param>
      <param name="totalCount">Quantità di messaggi popolati nella matrice di messaggi.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Messages">
      <summary>Ottiene un'interfaccia <see cref="T:System.Collections.Generic.IList`1" /> associata al risultato.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IList`1" /> associato al risultato.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Terminal">
      <summary>Ottiene o imposta un valore che indica se si tratta del risultato del messaggio di un terminale.</summary>
      <returns>true se si tratta del risultato del messaggio di un terminale. In caso contrario, false.</returns>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.MessageResult.TerminalMessage">
      <summary>Specifica se si tratta del risultato del messaggio di un terminale.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.TotalCount">
      <summary>Ottiene o imposta la quantità di messaggi popolati nella matrice di messaggi.</summary>
      <returns>Quantità di messaggi popolati nella matrice di messaggi.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1">
      <summary>Rappresenta un archivio di messaggi supportato da un buffer circolare.</summary>
      <typeparam name="T">Tipo di elementi nell'archivio.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" /> con la capacità specificata.</summary>
      <param name="capacity">Capacità minima dell'archivio.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32,System.UInt32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" />.</summary>
      <param name="capacity">Capacità minima dell'archivio.</param>
      <param name="offset">Offset del primo messaggio nell'archivio.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.Add(`0)">
      <summary>Aggiunge un messaggio all'archivio e restituisce l'ID del messaggio appena aggiunto.</summary>
      <returns>ID del messaggio appena aggiunto.</returns>
      <param name="message">Messaggio da aggiungere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessageCount">
      <summary>Ottiene il numero di messaggi contenuti nell'archivio.</summary>
      <returns>Numero di messaggi contenuti nell'archivio.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessages(System.UInt64,System.Int32)">
      <summary>Ottiene il batch di messaggi successivo, iniziando dall'ID specificato. </summary>
      <returns>Batch di messaggi successivo.</returns>
      <param name="firstMessageId">ID del primo messaggio.</param>
      <param name="maxMessages">Numero massimo di messaggi da restituire.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1">
      <summary>Rappresenta il risultato associato all'archivio di messaggi.</summary>
      <typeparam name="T">Tipo di risultato.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.#ctor(System.UInt64,System.ArraySegment{`0},System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1" />.</summary>
      <param name="firstMessageId">Identificatore del primo messaggio.</param>
      <param name="messages">Messaggio associato al risultato.</param>
      <param name="hasMoreData">true se il risultato contiene più dati. In caso contrario, false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.FirstMessageId">
      <summary>Ottiene l'identificatore del primo messaggio.</summary>
      <returns>Identificatore del primo messaggio.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.HasMoreData">
      <summary>Ottiene un valore che indica se il risultato contiene più dati.</summary>
      <returns>true se il risultato contiene più dati. In caso contrario, false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.Messages">
      <summary>Ottiene il messaggio associato al risultato.</summary>
      <returns>Messaggio associato al risultato.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration">
      <summary>Rappresenta le impostazioni comuni per le implementazioni del bus di messaggi di scalabilità orizzontale.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.DisableQueuing">
      <summary>L'accodamento è attualmente disabilitato.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.MaxQueueLength">
      <summary>Ottiene o imposta la lunghezza massima della coda di invio in uscita.</summary>
      <returns>Lunghezza massima della coda di invio in uscita.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.Id"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.LocalKeyInfo"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.ServerCreationTime"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore">
      <summary>Represents a scale out mapping store on SignalR messaging.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.Add(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})">
      <summary>Adds a new scaleout mapping store.</summary>
      <param name="id">The identifier.</param>
      <param name="message">The message.</param>
      <param name="localKeyInfo">The local key information.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.GetEnumerator(System.UInt64)">
      <summary>Gets the enumerator for the mapping store.</summary>
      <returns>The enumerator for the mapping store.</returns>
      <param name="id">The identifier.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.MaxMapping">
      <summary>Gets the maximum numbers of mapping for this instance.</summary>
      <returns>The maximum numbers of mapping for this instance.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage">
      <summary>Represents a message to the scaleout backplane.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
      <param name="messages">The messages from SignalR.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.FromBytes(System.Byte[])">
      <summary>Creates a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class from the specified data in bytes.</summary>
      <returns>The created instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" />.</returns>
      <param name="data">The data in bytes.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.Messages">
      <summary>Gets or sets the messages from SignalR.</summary>
      <returns>The messages from SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ServerCreationTime">
      <summary>Gets or sets the time the message was created on the origin server.</summary>
      <returns>The time the message was created on the origin server.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ToBytes">
      <summary>Converts a <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</summary>
      <returns>The converted <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus">
      <summary>Rappresenta una classe di base comune per le implementazioni del bus di messaggi di scalabilità orizzontale.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Close(System.Int32)">
      <param name="streamIndex">Indice del flusso da chiudere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnError(System.Int32,System.Exception)">
      <summary>Chiude la coda specificata per l'invio di messaggi ottenendo un esito negativo per tutti gli invii in modo asincrono.</summary>
      <param name="streamIndex">Indice del flusso da chiudere.</param>
      <param name="exception">Errore che si è verificato.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnReceived(System.Int32,System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)">
      <summary>Richiamato quando viene ricevuto un payload da un backplane.Deve essere presente una sola chiamata attiva in qualsiasi momento.</summary>
      <param name="streamIndex">ID del flusso.</param>
      <param name="id">ID del payload all'interno del flusso.</param>
      <param name="message">Messaggio di scalabilità orizzontale.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Open(System.Int32)">
      <param name="streamIndex">Indice del flusso da aprire.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)">
      <summary>Pubblica un messaggio del bus di messaggi di scalabilità orizzontale.</summary>
      <returns>Attività che rappresenta l'operazione per pubblicare un messaggio.</returns>
      <param name="message">Messaggio da pubblicare.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Invia i messaggi dal bus di messaggi di scalabilità orizzontale SignalR.</summary>
      <returns>Attività che rappresenta l'operazione per inviare un messaggio.</returns>
      <param name="messages">Messaggi da inviare.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Int32,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.StreamCount">
      <summary>Il numero dei flussi non può essere modificato per la durata di questa istanza.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore">
      <summary>Represents a message store that is backed by a ring buffer.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.#ctor(System.UInt32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore" /> class.</summary>
      <param name="capacity">The minimum capacity of the store.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.Add(Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping)">
      <summary>Adds a message to the store and returns the ID of the newly added message.</summary>
      <returns>The ID of the newly added message.</returns>
      <param name="mapping">The mapping used in the store.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentCount">
      <summary>Gets or sets the number of message fragments in the store.</summary>
      <returns>The number of message fragments.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentSize">
      <summary>Gets or sets the size of the message fragment.</summary>
      <returns>The size of the message fragment.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessages(System.UInt64)">
      <summary>Gets the next batch of messages, beginning with the specified ID. </summary>
      <returns>The next batch of messages.</returns>
      <param name="firstMessageIdRequestedByClient">The first message ID requested by the client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessagesByMappingId(System.UInt64)">
      <summary>Gets the next batch of messages for the specified mapping ID.</summary>
      <returns>The next batch of messages.</returns>
      <param name="mappingId">The mapping ID.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.MaxMapping">
      <summary>Gets or sets the maximum mapping ID.</summary>
      <returns>The maximum mapping ID.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription">
      <summary>Rappresenta una sottoscrizione con scalabilità orizzontale.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription" />.</summary>
      <param name="identity">Identità della sottoscrizione.</param>
      <param name="eventKeys">Chiavi evento per la sottoscrizione.</param>
      <param name="cursor">Cursore di scrittura.</param>
      <param name="streams">Flussi utilizzati per l'associazione ai cursori di scrittura.</param>
      <param name="callback">Funzione di callback eseguita quando lo stato della sottoscrizione viene modificato.</param>
      <param name="maxMessages">Numero massimo di messaggi allocati per questa sottoscrizione.</param>
      <param name="counters">Oggetto utilizzato per l'accesso ai contatori delle prestazioni della sottoscrizione.</param>
      <param name="state">Stato della sottoscrizione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.BeforeInvoke(System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.WriteCursor(System.IO.TextWriter)">
      <summary>Scrive il cursore utilizzando il writer di testo specificato.</summary>
      <param name="textWriter">Writer di testo utilizzato per scrivere il cursore.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Subscription">
      <summary>Rappresenta un'implementazione della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.ISubscription" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.Subscription" />.</summary>
      <param name="identity">Identità della sottoscrizione.</param>
      <param name="eventKeys">Elenco contenente le chiavi evento per la sottoscrizione.</param>
      <param name="callback">Funzione di callback eseguita quando lo stato della sottoscrizione viene modificato.</param>
      <param name="maxMessages">Numero massimo di messaggi allocati per questa sottoscrizione.</param>
      <param name="counters">Oggetto utilizzato per l'accesso ai contatori delle prestazioni della sottoscrizione.</param>
      <param name="state">Stato della sottoscrizione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.AddEvent(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.BeforeInvoke(System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Disposable">
      <summary>Ottiene o imposta il metodo utilizzato per eliminare le risorse della sottoscrizione.</summary>
      <returns>Metodo utilizzato per eliminare le risorse della sottoscrizione.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose(System.Boolean)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Identity"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Invoke(Microsoft.AspNet.SignalR.Messaging.MessageResult)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.MaxMessages"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.RemoveEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetEventTopic(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.UnsetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Work"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.WriteCursor(System.IO.TextWriter)">
      <summary>Scrive il cursore utilizzando il writer di testo specificato.</summary>
      <param name="textWriter">Writer di testo utilizzato per scrivere il cursore.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Topic">
      <summary>Rappresenta l'argomento nel bus di messaggi SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.#ctor(System.UInt32,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.Topic" />.</summary>
      <param name="storeSize">Dimensione dell'archivio di messaggi.</param>
      <param name="lifespan">Durata dell'argomento.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.AddSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Aggiunge la sottoscrizione specificata all'elenco.</summary>
      <param name="subscription">Sottoscrizione da aggiungere.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.IsExpired">
      <summary>Ottiene un valore che indica se l'argomento è scaduto.</summary>
      <returns>true se l'argomento è scaduto. In caso contrario, false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.LastUsed">
      <summary>Ottiene o imposta l'ora dell'ultimo utilizzo della sottoscrizione.</summary>
      <returns>Ora dell'ultimo utilizzo della sottoscrizione.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.MarkUsed"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.RemoveSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Elimina la sottoscrizione specificata dall'elenco.</summary>
      <param name="subscription">Sottoscrizione da eliminare.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Store">
      <summary>Ottiene o imposta l'archivio di messaggi.</summary>
      <returns>Archivio di messaggi.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.SubscriptionLock">
      <summary>Ottiene o imposta l'oggetto utilizzato per bloccare l'argomento.</summary>
      <returns>Oggetto utilizzato per bloccare l'argomento.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Subscriptions">
      <summary>Ottiene o imposta l'elenco contenente le sottoscrizioni dell'argomento.</summary>
      <returns>Elenco contenente le sottoscrizioni dell'argomento.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup">
      <summary>Rappresenta una raccolta dell'argomento che è utilizzato come una ricerca.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Clear">
      <summary>Rimuove tutti gli argomenti dalla raccolta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.ContainsKey(System.String)">
      <summary>Determina se l'argomento con la chiave specificata è contenuto nella raccolta.</summary>
      <returns>true se l'argomento con la chiave specificata è contenuto nella raccolta. In caso contrario, false.</returns>
      <param name="key">Chiave dell'argomento.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Count">
      <summary>Ottiene il numero di tutti gli argomenti (generali e di gruppo) presenti nella raccolta.</summary>
      <returns>Numero di tutti gli argomenti (generali e di gruppo) presenti nella raccolta.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetEnumerator">
      <summary>Ottiene un enumeratore che scorre la raccolta.</summary>
      <returns>Enumeratore che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetOrAdd(System.String,System.Func{System.String,Microsoft.AspNet.SignalR.Messaging.Topic})">
      <summary>Aggiunge un argomento alla raccolta utilizzando la funzione specificata se la chiave esiste già.</summary>
      <returns>Argomento generato per la chiave specificata.</returns>
      <param name="key">Chiave dell'elemento da aggiungere.</param>
      <param name="factory">Funzione utilizzata per generare l'argomento per la chiave.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Item(System.String)">
      <summary>Ottiene l'argomento generato con la chiave specificata.</summary>
      <returns>Argomento con la chiave specificata, se trovato. Se l'argomento non viene trovato, null.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ottiene un enumeratore che scorre la raccolta.</summary>
      <returns>Enumeratore che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryGetValue(System.String,Microsoft.AspNet.SignalR.Messaging.Topic@)">
      <summary>Tenta di ottenere l'argomento con la chiave specificata dalla raccolta.</summary>
      <returns>true se la chiave è stata trovata. In caso contrario, false.</returns>
      <param name="key">Chiave da ottenere.</param>
      <param name="topic">Quando termina, questo metodo contiene l'argomento recuperato.Questo parametro viene passato senza inizializzazione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryRemove(System.String)">
      <summary>Tenta di rimuovere e restituire l'argomento che ha la chiave specificata dalla raccolta.</summary>
      <returns>Argomento rimosso.</returns>
      <param name="key">Chiave dell'argomento da rimuovere.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerRequest">
      <summary>Rappresenta una richiesta server.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerRequest" />.</summary>
      <param name="environment">Ambiente.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Cookies">
      <summary>Ottiene i cookie associati al server.</summary>
      <returns>Cookie associati al server.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Environment"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Headers">
      <summary>Ottiene le intestazioni associate alla richiesta.</summary>
      <returns>Intestazioni associate alla richiesta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.LocalPath"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.QueryString">
      <summary>Ottiene la raccolta delle variabili di stringhe di query del server.</summary>
      <returns>Raccolta delle variabili di stringhe di query del server.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.ReadForm"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Url">
      <summary>Ottiene le informazioni sull'URL della richiesta corrente.</summary>
      <returns>Oggetto <see cref="T:System.Uri" /> contenente informazioni relative all'URL della richiesta corrente.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.User">
      <summary>Ottiene l'utente per questo server.</summary>
      <returns>Utente per questo server.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerResponse">
      <summary>Rappresenta commenti e suggerimenti severi in risposta alla richiesta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerResponse" />.</summary>
      <param name="environment">Ambiente.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.CancellationToken">
      <summary>Ottiene il token di annullamento associato alla risposta.</summary>
      <returns>Token di annullamento associato alla risposta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.ContentType">
      <summary>Ottiene o imposta il tipo di contenuto associato alla risposta.</summary>
      <returns>Tipo di contenuto associato alla risposta.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Flush">
      <summary>Scarica questa istanza.</summary>
      <returns>Istanza scaricata.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Scrive una risposta utilizzando il segmento di matrice associato.</summary>
      <param name="data">Segmento di matrice.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware">
      <summary>Represents the middleware used by the hub dispatcher.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware">
      <summary>Rappresenta il middleware per la connessione permanente.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager">
      <summary>Rappresenta un'interfaccia che fornisce le proprietà per tenere traccia dell'esecuzione del codice.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Item(System.String)">
      <summary>Ottiene <see cref="T:System.Diagnostics.TraceSource" /> con il nome specificato per l'origine.</summary>
      <returns>
        <see cref="T:System.Diagnostics.TraceSource" /> con il nome specificato per l'origine.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Switch">
      <summary>Ottiene il passaggio che controlla la traccia dell'esecuzione del codice e l'output di debug.</summary>
      <returns>Oggetto <see cref="T:System.Diagnostics.SourceSwitch" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.TraceManager">
      <summary>Fornisce le proprietà che consentono di tracciare l'esecuzione del codice.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Tracing.TraceManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor(System.Diagnostics.TextWriterTraceListener)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Item(System.String)">
      <summary>Ottiene <see cref="T:System.Diagnostics.TraceSource" /> con il nome specificato per l'origine.</summary>
      <returns>
        <see cref="T:System.Diagnostics.TraceSource" /> con il nome specificato per l'origine.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Switch">
      <summary>Ottiene il passaggio che controlla la traccia dell'esecuzione del codice e l'output di debug.</summary>
      <returns>Oggetto <see cref="T:System.Diagnostics.SourceSwitch" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport">
      <summary>Rappresenta un trasporto Forever Frame.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport" />.</summary>
      <param name="context">Contesto dell'host.</param>
      <param name="resolver">Resolver di dipendenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inizializza l'oggetto risposta.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> che rappresenta l'operazione di inizializzazione della risposta.</returns>
      <param name="connection">Connessione al trasporto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.KeepAlive">
      <summary>Mantiene la connessione attiva.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> che rappresenta l'operazione Keep Alive.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.OutputWriter">
      <summary>Ottiene il writer di testo HTML che scrive la risposta del contesto nel flusso di output.</summary>
      <returns>Writer di testo HTML che scrive la risposta del contesto nel flusso di output.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Invia la risposta del contesto specificato.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> che rappresenta l'operazione di invio.</returns>
      <param name="response">Risposta da inviare.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <param name="context">Contesto dell'host.</param>
      <param name="resolver">Resolver di dipendenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <param name="context">Contesto dell'host.</param>
      <param name="jsonSerializer">JsonSerializer.</param>
      <param name="heartbeat">Heartbeat del trasporto.</param>
      <param name="performanceCounterWriter">Writer del contatore delle prestazioni.</param>
      <param name="traceManager">Gestore di tracce.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Connected">
      <summary>Ottiene o imposta la funzione di connessione per <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <returns>Funzione di connessione per <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Fornisce l'operazione sulla coda per i trasporti.</summary>
      <returns>Operazione sulla coda per i trasporti.</returns>
      <param name="writeAsync">Scrive in modo asincrono.</param>
      <param name="state">Oggetto di stato.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializePersistentState">
      <summary>Inizializza lo stato permanente del trasporto Forever.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inizializza la risposta di connessione per il trasporto Forever.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Connessione al trasporto.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.JsonSerializer">
      <summary>Ottiene JsonSerializer per il trasporto Forever.</summary>
      <returns>JsonSerializer per il trasporto Forever.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.LastMessageId">
      <summary>Ottiene l'ID dell'ultimo messaggio per il trasporto Forever.</summary>
      <returns>ID dell'ultimo messaggio per il trasporto Forever.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSending(System.String)">
      <summary>Fornisce il payload per un trasporto in fase di invio.</summary>
      <param name="payload">Payload della stringa.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSendingResponse(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Fornisce una risposta per i metodi in fase di invio.</summary>
      <param name="response">Risposta a una connessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Fornisce una connessione per elaborare la richiesta.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Connessione al trasporto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequestCore(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Fornisce una richiesta per elaborare la connessione per il trasporto.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Connessione al trasporto.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Received">
      <summary>Ottiene o imposta una funzione da ricevere per il trasporto Forever.</summary>
      <returns>Funzione da ricevere per il trasporto Forever.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Reconnected">
      <summary>Ottiene o imposta la funzione riconnessa per il trasporto Forever.</summary>
      <returns>Funzione riconnessa per il trasporto Forever.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Invia una risposta a una connessione per il trasporto Forever.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="response">Risposta permanente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(System.Object)">
      <summary>Invia un oggetto al trasporto Forever.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="value">Valore da inviare.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.TransportConnected">
      <summary>Ottiene o imposta il trasporto connesso per <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <returns>Trasporto connesso per <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITrackingConnection">
      <summary> Rappresenta una connessione che è possibile monitorare da un'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" />. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary> Applica un nuovo stato alla connessione. </summary>
      <param name="states">Uno dei valori dell'enumerazione <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates" />.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.CancellationToken"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectionId"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectTask"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Disconnect"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.DisconnectThreshold"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.End"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsTimedOut"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.KeepAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.SupportsKeepAlive"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Timeout"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Url"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransport">
      <summary>Rappresenta un trasporto per le comunicazioni.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Connected">
      <summary>Ottiene o imposta un callback che viene richiamato quando la connessione iniziale si connette al trasporto.</summary>
      <returns>Restituisce <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.ConnectionId">
      <summary>Ottiene o imposta l'ID connessione per il trasporto.</summary>
      <returns>Restituisce <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Disconnected">
      <summary>Ottiene o imposta un callback che viene richiamato quando il trasporto viene disconnesso.</summary>
      <returns>Restituisce <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Elabora l'interfaccia <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" /> specificata per il trasporto.</summary>
      <returns>Oggetto <see cref="T:System.Threading.Tasks.Task" /> che viene completato quando il trasporto termina l'elaborazione della connessione.</returns>
      <param name="connection">Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" /> da elaborare.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Received">
      <summary>Ottiene o imposta un callback che viene richiamato quando il trasporto riceve i dati.</summary>
      <returns>Restituisce <see cref="T:System.Func`2" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Reconnected">
      <summary>Ottiene o imposta un callback che viene richiamato quando il trasporto viene connesso nuovamente.</summary>
      <returns>Restituisce <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.Send(System.Object)">
      <summary>Invia i dati sul trasporto.</summary>
      <returns>Oggetto <see cref="T:System.Threading.Tasks.Task" /> che viene completato al completamento dell'invio.</returns>
      <param name="value">Valore da inviare.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.TransportConnected">
      <summary>Ottiene o imposta un callback che viene richiamato quando il trasporto viene connesso.</summary>
      <returns>Restituisce <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection">
      <summary>Rappresenta il trasporto per la connessione.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Riceve i dati della sottoscrizione dal trasporto.</summary>
      <returns>Dati della sottoscrizione ricevuti dal trasporto.</returns>
      <param name="messageId">ID del messaggio per la sottoscrizione.</param>
      <param name="callback">Metodo che gestisce il messaggio ricevuto.</param>
      <param name="maxMessages">Dimensione del buffer di messaggi.</param>
      <param name="state">Stato della connessione del trasporto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat">
      <summary>Gestisce il monitoraggio dello stato delle connessioni.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Aggiunge una nuova connessione all'elenco delle connessioni monitorate.</summary>
      <returns>Connessione che sostituisce, se disponibile.</returns>
      <param name="connection">Connessione da aggiungere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.GetConnections">
      <summary>Ottiene un elenco delle connessioni da monitorare.</summary>
      <returns>Elenco di connessioni.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Contrassegna una connessione esistente come attiva.</summary>
      <param name="connection">Connessione da contrassegnare.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Rimuove una connessione dall'elenco delle connessioni monitorate.</summary>
      <param name="connection">Connessione da rimuovere.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportManager">
      <summary>Gestisce i trasporti per le connessioni.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Ottiene il trasporto specificato per l'oggetto <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> specificato.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" /> per l'oggetto <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> specificato.</returns>
      <param name="hostContext">Oggetto <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> per la richiesta corrente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.SupportsTransport(System.String)">
      <summary>Determina se il trasporto specificato è supportato.</summary>
      <returns>True se il trasporto è supportato. In caso contrario, false.</returns>
      <param name="transportName">Nome del trasporto da testare.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport" />.</summary>
      <param name="context">Contesto dell'host.</param>
      <param name="resolver">Resolver di dipendenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Connected">
      <summary>Ottiene o imposta la funzione connessa.</summary>
      <returns>Funzione connessa.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.DisconnectThreshold">
      <summary>Ottiene la soglia di disconnessione.</summary>
      <returns>Soglia di disconnessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.IsConnectRequest">
      <summary>Ottiene un valore che indica se il trasporto è una richiesta di connessione.</summary>
      <returns>true se il trasporto è una richiesta di connessione. In caso contrario, false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Elabora la richiesta di connessione.</summary>
      <returns>Attività che rappresenta l'operazione della richiesta.</returns>
      <param name="connection">Connessione da elaborare.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Received">
      <summary>Ottiene o imposta la funzione ricevuta.</summary>
      <returns>Funzione ricevuta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Reconnected">
      <summary>Ottiene o imposta il trasporto riconnesso.</summary>
      <returns>Attività che riconnette il trasporto.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Invia una risposta per il trasporto.</summary>
      <returns>Attività che rappresenta l'operazione per inviare una risposta.</returns>
      <param name="response">Risposta da inviare.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(System.Object)">
      <summary>Invia un trasporto di polling lungo con un valore specificato.</summary>
      <returns>Attività che rappresenta l'operazione per inviare un trasporto di polling lungo.</returns>
      <param name="value">Valore.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.SupportsKeepAlive">
      <summary>Ottiene un valore che indica se il trasporto supporta Keep Alive.</summary>
      <returns>true se il trasporto supporta Keep Alive. In caso contrario, false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.TransportConnected">
      <summary>Ottiene o imposta il trasporto connesso.</summary>
      <returns>Attività che connette il trasporto.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse">
      <summary> Rappresenta una risposta alla connessione. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor(System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{System.IO.TextWriter})">
      <summary>Crea una nuova istanza di <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
      <param name="exclude">Filtro che determina se i messaggi devono essere scritti sul client.</param>
      <param name="writeCursor">Writer del cursore.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Aborted">
      <summary>Ottiene o imposta un valore che indica se la chiusura della connessione è stata forzata.</summary>
      <returns>true se la chiusura della connessione. In caso contrario, false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Disconnect">
      <summary>Ottiene o imposta un valore che indica se la connessione riceve un comando di disconnessione.</summary>
      <returns>true se la connessione riceve un comando di disconnessione. In caso contrario, false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.GroupsToken">
      <summary>Ottiene o imposta un token firmato che rappresenta l'elenco dei gruppi.</summary>
      <returns>Gruppi di token.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Initializing">
      <summary>True se la connessione è in fase di inizializzazione.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.LongPollDelay">
      <summary>Ottiene o imposta il tempo di attesa del client di polling lungo prima che venga ristabilita una connessione se non si riceve alcun dato.</summary>
      <returns>Tempo di attesa del client di polling lungo prima che venga ristabilita una connessione se non si riceve alcun dato.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Messages">
      <summary>Ottiene o imposta l'elenco dei messaggi da inviare alla connessione di ricezione.</summary>
      <returns>Elenco dei messaggi da inviare alla connessione di ricezione.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Microsoft#AspNet#SignalR#Json#IJsonWritable#WriteJson(System.IO.TextWriter)">
      <summary>Serializza solo i componenti necessari di <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" /> in JSON mediante la classe JsonTextWriter di Json.NET per migliorare le prestazioni.</summary>
      <param name="writer">Classe <see cref="T:System.IO.TextWriter" /> che riceve la serializzazione JSON.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Reconnect">
      <summary>True se il client deve tentare la riconnessione.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Terminal"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.TotalCount">
      <summary>Ottiene o imposta il numero totale di messaggi inviati dalla connessione di ricezione.</summary>
      <returns>Numero totale di messaggi inviati dalla connessione di ricezione.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport">
      <summary>Fornisce il trasporto per l'invio di eventi dal server di SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</summary>
      <param name="context">Contesto dell'host.</param>
      <param name="resolver">Resolver di dipendenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inizializza una risposta a <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />.</summary>
      <returns>Inizializzazione della risposta a <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />.</returns>
      <param name="connection">Inizializzazione della connessione del trasporto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.KeepAlive">
      <summary>Restituisce un metodo Keep Alive per eseguire una connessione permanente alla risorsa Internet.</summary>
      <returns>Metodo Keep Alive per eseguire una connessione permanente alla risorsa Internet.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Invia una risposta permanente a <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</summary>
      <returns>Risposta permanente da inviare a <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</returns>
      <param name="response">Risposta permanente.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates">
      <summary>Enumera l'attributo di TransportConnectionState.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Aborted">
      <summary>Stato di connessione interrotta.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Added">
      <summary>Stato di connessione aggiunta.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disconnected">
      <summary>Stato di connessione disconnessa.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.DisconnectMessageReceived">
      <summary>Stato di messaggio di disconnessione ricevuto.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disposed">
      <summary>Stato di connessione eliminata.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.HttpRequestEnded">
      <summary>Stato di richiesta HTTP terminata della connessione.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.None">
      <summary>Stato di assenza di connessione.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.QueueDrained">
      <summary>Stato di coda svuotata della connessione.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Removed">
      <summary>Stato di connessione rimossa.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Replaced">
      <summary>Stato di connessione sostituita.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <param name="context">Contesto dell'host.</param>
      <param name="heartbeat">Heartbeat del trasporto.</param>
      <param name="performanceCounterManager">Gestore dei contatori delle prestazioni.</param>
      <param name="traceManager">Gestore di tracce.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort">
      <summary>Interrompe il processo dell'attività corrente per <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <returns>Processo dell'attività corrente da interrompere per <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort(System.Boolean)">
      <summary>Interrompe il processo dell'attività corrente per <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <returns>Processo dell'attività corrente da interrompere per <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</returns>
      <param name="clean">Indica se eseguire la pulizia di tutte le attività nel processo interrotto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary>Applica lo stato di connessione del trasporto per la base di disconnessione.</summary>
      <param name="states">Stati di connessione del trasporto.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CancellationToken">
      <summary>Ottiene un token di annullamento che rappresenta la durata della connessione.</summary>
      <returns>Token di annullamento che rappresenta la durata della connessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Connection">
      <summary>Ottiene o imposta la connessione del trasporto per la base di disconnessione del trasporto.</summary>
      <returns>Connessione del trasporto per la base di disconnessione del trasporto.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionEndToken">
      <summary>Ottiene la connessione per terminare l'operazione per questo token.</summary>
      <returns>Connessione per terminare l'operazione per questo token.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionId">
      <summary>Ottiene o imposta l'ID della connessione.</summary>
      <returns>Stringa contenente l'ID della connessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectTask"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Context">
      <summary>Ottiene il contesto dell'host associato alla base di disconnessione del trasporto.</summary>
      <returns>Contesto dell'host associato alla base di disconnessione del trasporto.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CreateResponseWriter">
      <summary>Rappresenta un writer per creare una risposta per la base di disconnessione del trasporto.</summary>
      <returns>Writer per creare una risposta per la base di disconnessione del trasporto.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnect">
      <summary>Causa la disconnessione.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnected">
      <summary>Ottiene o imposta la proprietà disconnessa per i trasporti della connessione.</summary>
      <returns>Proprietà disconnessa per i trasporti della connessione.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.DisconnectThreshold">
      <summary>Ottiene l'intervallo di tempo di attesa dopo l'interruzione della connessione e prima che venga attivata la disconnessione.</summary>
      <returns>Restituisce <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose">
      <summary>Rilascia tutte le risorse utilizzate dall'istanza corrente della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite utilizzate dalla classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> e, facoltativamente, quelle gestite.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite, false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.End">
      <summary>Termina la connessione.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
      <summary>Rappresenta l'oggetto per terminare l'operazione sulla coda.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="writeAsync">Scrive in modo asincrono.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Rappresenta l'oggetto per terminare l'operazione sulla coda.</summary>
      <returns>Oggetto che rappresenta la fine dell'operazione sulla coda.</returns>
      <param name="writeAsync">Scrive in modo asincrono.</param>
      <param name="state">Stato.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Heartbeat">
      <summary>Ottiene l'heartbeat del trasporto per gestire lo stato di rilevamento delle connessioni.</summary>
      <returns>Heartbeat del trasporto per gestire lo stato di rilevamento delle connessioni.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.HostShutdownToken"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IncrementErrors">
      <summary>Incrementa gli errori nella base di disconnessione del trasporto.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.InitializePersistentState">
      <summary>Applica lo stato permanente per la base di disconnessione del trasporto.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAbortRequest">
      <summary>Ottiene un valore che rappresenta se la connessione esegue una richiesta di interruzione.</summary>
      <returns>true se la connessione esegue una richiesta di interruzione. In caso contrario, false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAlive">
      <summary>Ottiene un valore che rappresenta se la connessione è attiva.</summary>
      <returns>true se la connessione è attiva. In caso contrario, false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsConnectRequest">
      <summary>Ottiene un valore che rappresenta se le connessioni eseguono una richiesta.</summary>
      <returns>true se le connessioni eseguono una richiesta. In caso contrario, false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsTimedOut">
      <summary>Ottiene un valore che rappresenta se la connessione è scaduta.</summary>
      <returns>true se si verifica il timeout della connessione. In caso contrario, false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.KeepAlive">
      <summary>Invia un ping Keep Alive sulla connessione.</summary>
      <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.OutputWriter">
      <summary>Ottiene il writer di output che può scrivere una serie sequenziale di caratteri.</summary>
      <returns>Writer di output che può scrivere una serie sequenziale di caratteri.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.SupportsKeepAlive">
      <summary>Ottiene un valore che rappresenta se il trasporto supporta Keep Alive.</summary>
      <returns>true se il trasporto supporta Keep Alive. In caso contrario, false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Timeout">
      <summary>Causa il timeout della connessione.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Trace">
      <summary>Ottiene l'origine per tracciare l'esecuzione del codice e associare i messaggi di traccia alla relativa origine.</summary>
      <returns>Origine per tracciare l'esecuzione del codice e associare i messaggi di traccia alla relativa origine.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Url">
      <summary>Ottiene l'URI della connessione.</summary>
      <returns>URI della connessione.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat">
      <summary>Rappresenta l'implementazione predefinita di <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />.</summary>
      <param name="resolver">Classe <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Aggiunge una nuova connessione all'elenco delle connessioni monitorate.</summary>
      <param name="connection">Connessione da aggiungere.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose">
      <summary>Rilascia tutte le risorse utilizzate dall'istanza corrente della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite utilizzate dalla classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" /> e, facoltativamente, quelle gestite.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite. false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.GetConnections">
      <summary>Ottiene un elenco delle connessioni da monitorare.</summary>
      <returns>Elenco di connessioni.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Contrassegna una connessione esistente come attiva.</summary>
      <param name="connection">Connessione da contrassegnare.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Rimuove una connessione dall'elenco delle connessioni monitorate.</summary>
      <param name="connection">Connessione da rimuovere.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportManager">
      <summary>Implementazione predefinita di <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportManager" />.</summary>
      <param name="resolver">Interfaccia <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /> predefinita.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Ottiene il trasporto specificato per l'oggetto <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> specificato.</summary>
      <returns>Interfaccia <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" /> per l'oggetto <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> specificato.</returns>
      <param name="hostContext">Oggetto <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> per la richiesta corrente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Register(System.String,System.Func{Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransport})">
      <summary>Aggiunge un nuovo trasporto all'elenco dei trasporti supportati.</summary>
      <param name="transportName">Trasporto specificato.</param>
      <param name="transportFactory">Metodo factory per il trasporto specificato.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Remove(System.String)">
      <summary>Rimuove un trasporto dall'elenco dei trasporti supportati.</summary>
      <param name="transportName">Trasporto specificato.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.SupportsTransport(System.String)">
      <summary>Determina se il trasporto specificato è supportato.</summary>
      <returns>True se il trasporto è supportato. In caso contrario, false.</returns>
      <param name="transportName">Nome del trasporto da testare.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport" />.</summary>
      <param name="context">Contesto dell'host.</param>
      <param name="resolver">Resolver di dipendenza.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CancellationToken">
      <summary>Ottiene il token di annullamento utilizzato per il trasporto.</summary>
      <returns>Token di annullamento utilizzato per il trasporto.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CreateResponseWriter"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.IsAlive">
      <summary>Ottiene un valore che indica se il trasporto è attivo.</summary>
      <returns>true se il trasporto è attivo. In caso contrario, false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.KeepAlive">
      <summary>Mantiene il trasporto attivo.</summary>
      <returns>Attività che mantiene il trasporto attivo.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Elabora una richiesta di connessione.</summary>
      <returns>Attività che rappresenta l'operazione per richiedere una connessione.</returns>
      <param name="connection">Connessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Invia una risposta del Websocket.</summary>
      <returns>Attività che rappresenta l'operazione per inviare una risposta.</returns>
      <param name="response">Risposta da inviare.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(System.Object)">
      <summary>Invia un valore del trasporto.</summary>
      <returns>Attività che rappresenta l'operazione per inviare un valore del trasporto.</returns>
      <param name="value">Valore da inviare.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler">
      <summary>Rappresenta un'istanza che gestisce Websocket SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.#ctor(System.Nullable{System.Int32})"></member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Close">
      <summary>Chiude questa istanza.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Error">
      <summary>Ottiene o imposta l'errore durante la gestione del Websocket.</summary>
      <returns>Errore durante la gestione del Websocket.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.MaxIncomingMessageSize">
      <summary>Ottiene la dimensione massima del messaggio in ingresso.</summary>
      <returns>Dimensione massima del messaggio in ingresso.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnClose(System.Boolean)">
      <summary>Si verifica quando questa istanza è chiusa.</summary>
      <param name="clean">true per pulire le tracce.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnError">
      <summary>Genera un evento quando si è verificato un errore durante l'operazione del gestore.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.Byte[])">
      <summary>Genera un evento quando viene ricevuto un messaggio.</summary>
      <param name="message">Messaggio.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.String)">
      <summary>Genera un evento quando viene ricevuto un messaggio.</summary>
      <param name="message">Messaggio.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnOpen">
      <summary>Genera un evento quando questa istanza è aperta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.ProcessWebSocketRequestAsync(System.Net.WebSockets.WebSocket,System.Threading.CancellationToken)">
      <summary>Elabora in modo asincrono la richiesta ricevuta dal gestore.</summary>
      <returns>Risultato dell'operazione.</returns>
      <param name="webSocket">Websocket.</param>
      <param name="disconnectToken">Token di disconnessione.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Send(System.String)">
      <summary>Invia un messaggio associato al gestore.</summary>
      <returns>Messaggio inviato.</returns>
      <param name="message">Messaggio da inviare.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.WebSocket">
      <summary>Ottiene o imposta il Websocket.</summary>
      <returns>Websocket.</returns>
    </member>
    <member name="T:Owin.ObsoleteOwinExtensions"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="T:Owin.OwinExtensions">
      <summary>Rappresenta la connessione per le estensioni Owin.</summary>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder)">
      <summary>Esegue il mapping degli hub SignalR nella pipeline del generatore di app in "/signalr”.</summary>
      <returns>Restituisce <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Generatore di app.</param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Esegue il mapping degli hub SignalR nella pipeline del generatore di app in "/signalr”.</summary>
      <returns>Restituisce <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Generatore di app.</param>
      <param name="configuration">
        <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /> to use </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String)">
      <summary>Maps the specified SignalR <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />to the app builder pipeline at the specified path. </summary>
      <returns>Restituisce <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Generatore di app.</param>
      <param name="path">  The path to map the <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></param>
      <typeparam name="TConnection">Tipo di classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Maps the specified SignalR <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />to the app builder pipeline at the specified path. </summary>
      <returns>Restituisce <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Generatore di app.</param>
      <param name="path">Percorso in cui eseguire il mapping della connessione permanente.</param>
      <param name="configuration">The <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> to use </param>
      <typeparam name="TConnection">Tipo di classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Esegue il mapping degli hub SignalR nella pipeline del generatore di app nel percorso specificato.</summary>
      <returns>Restituisce <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Generatore di app.</param>
      <param name="path">Percorso in cui eseguire il mapping degli hub signalr.</param>
      <param name="configuration">The <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /> to use </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Maps the specified <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> to the app builder pipeline at the specified path. </summary>
      <returns>Restituisce <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Generatore di app.</param>
      <param name="path">Percorso in cui eseguire il mapping della connessione permanente.</param>
      <param name="connectionType">Tipo di classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
      <param name="configuration">The <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />  to use </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder)">
      <summary>Aggiunge hub SignalR alla pipeline del generatore di app.</summary>
      <param name="builder">Generatore di app.</param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder)">
      <summary>Adds the specified SignalR <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> to the app builder. </summary>
      <param name="builder">Generatore di app</param>
      <typeparam name="TConnection">Tipo di classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <param name="builder">Generatore di app.</param>
      <param name="configuration">The <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> to use</param>
      <typeparam name="TConnection">  Adds the specified SignalR <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> to the app builder. </typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Aggiunge hub SignalR alla pipeline del generatore di app.</summary>
      <param name="builder">Generatore di app.</param>
      <param name="configuration">The <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /> to use </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Adds the specified SignalR <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> to the app builder. </summary>
      <param name="builder">Generatore di app.</param>
      <param name="connectionType">Tipo di classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
      <param name="configuration">The <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> to use </param>
    </member>
    <member name="T:System.Diagnostics.TraceSourceExtensions">
      <summary>Provides extension methods for used by SignalR.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace error message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace warning message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
  </members>
</doc>