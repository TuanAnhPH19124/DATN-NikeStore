<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.AspNet.SignalR.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.AspNet.SignalR.AuthorizeAttribute">
      <summary>Použije se na rozbočovače a metody rozbočovačů, aby měli klienti povoleno připojení k rozbočovačům a volání metod rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.AuthorizeAttribute" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.AuthorizeAttribute._requireOutgoing">
      <summary>Určuje, zda se autorizace provádí pouze u volání metod rozbočovače na straně serveru.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Určuje, zda má klient povolení k připojení k rozbočovači <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Hodnota true, pokud má volající povoleno připojit se k rozbočovači; jinak hodnota false.</returns>
      <param name="hubDescriptor">Popis rozbočovače, ke kterému se klient pokouší připojit.</param>
      <param name="request">Žádost o připojení (i opětovné) od klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>Určuje, zda má klient povolení k volání metody rozbočovače <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Hodnota true, pokud má volající povoleno volat metodu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />; jinak hodnota false.</returns>
      <param name="hubIncomingInvokerContext">Položka <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />, která poskytuje podrobnosti o volání metody <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</param>
      <param name="appliesToMethod">Hodnota true značí, že instance rozhraní představuje atribut přímo použitý na metodu; jinak hodnota false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.RequireOutgoing">
      <summary>Při nastavení hodnoty false se autorizace provádí pouze u volání metod rozbočovače na straně serveru.Tato vlastnost ovlivňuje pouze atributy použité u třídy rozbočovače.Tuto vlastnost nelze číst.</summary>
      <returns>Hodnota false, pokud se autorizace má provádět pouze u volání metod rozbočovače na straně serveru.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Roles">
      <summary>Získá či nastaví role uživatelů.</summary>
      <returns>Role uživatelů</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.UserAuthorized(System.Security.Principal.IPrincipal)">
      <summary>Při přepsání poskytne vstupní bod pro vlastní kontroly autorizace.Voláno metodami <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)" /> a <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)" />.</summary>
      <returns>Hodnota true, je-li uživatel autorizován, jinak hodnota false</returns>
      <param name="user">Položka <see cref="T:System.Security.Principal.IPrincipal" /> pro klienta, u kterého se provádí autorizace.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Users">
      <summary>Získá či nastaví autorizované uživatele.</summary>
      <returns>Autorizovaní uživatelé</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionConfiguration">
      <summary>Představuje konfiguraci připojení.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionConfiguration.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.EnableJSONP">
      <summary>Získá nebo nastaví logickou hodnotu určující, zda je povolen formát JSONP.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.Resolver">
      <summary>Získá nebo nastaví překladač závislostí, který se má použít při vytváření připojení rozbočovače.</summary>
      <returns>Překladač závislostí, který se má použít při vytváření připojení rozbočovače.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionExtensions">
      <summary>Poskytuje rozšiřující metody používané k odeslání zprávy do všech připojení s odběrem určitého signálu.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Broadcast(Microsoft.AspNet.SignalR.IConnection,System.Object,System.String[])">
      <summary>Vysílá hodnotu do všech připojení s výjimkou připojení se zadanými ID.</summary>
      <returns>Úloha, která reprezentuje čas dokončení vysílání.</returns>
      <param name="connection">Připojení.</param>
      <param name="value">Hodnota, která se má vysílat.</param>
      <param name="excludeConnectionIds">Seznam ID připojení určených k vyloučení z vysílání</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.Collections.Generic.IList{System.String},System.Object)">
      <summary>Odešle zprávu do připojení přihlášených k odběru zadaného signálu.Signálem může být například určité ID připojení.</summary>
      <returns>Úloha, která reprezentuje čas dokončení vysílání.</returns>
      <param name="connection">Připojení.</param>
      <param name="connectionIds">ID připojení, na která se má odeslat zpráva.</param>
      <param name="value">Hodnota určená k publikování.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.String,System.Object)">
      <summary>Odešle zprávu do připojení přihlášených k odběru zadaného signálu.Signálem může být například určité ID připojení.</summary>
      <returns>Úloha, která reprezentuje čas dokončení vysílání.</returns>
      <param name="connection">Připojení.</param>
      <param name="connectionId">ConnectionId, na které se má odeslat zpráva.</param>
      <param name="value">Hodnota určená k publikování.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionMessage">
      <summary>Zpráva odeslaná do jednoho či více připojení.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />.</summary>
      <param name="signal">Signál.</param>
      <param name="value">Datová část zprávy.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object,System.Collections.Generic.IList{System.String})">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />.</summary>
      <param name="signal">Signál.</param>
      <param name="value">Datová část zprávy.</param>
      <param name="excludedSignals">Signály, které mají být vyloučeny.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.ExcludedSignals">
      <summary>Reprezentuje seznam signálů k filtrování připojení, která tuto zprávu obdrží.</summary>
      <returns>Vrací objekt <see cref="T:System.Collections.Generic.IList`1" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signal">
      <summary>Signál udávající, kam je třeba tuto zprávu odeslat.Datovou část zprávy obdrží připojení přihlášená k odběru tohoto signálu.</summary>
      <returns>Vrací objekt <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signals">
      <summary>Seznam signálů, na které má být tato zpráva doručenaPokud bude použito, signál nelze použít.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Value">
      <summary>Datová část zprávy.</summary>
      <returns>Vrací objekt <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Cookie">
      <summary>Představuje soubor cookie funkce SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Cookie" />.</summary>
      <param name="name">Název vlastnosti souboru cookie.</param>
      <param name="value">Hodnota vlastnosti souboru cookie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Cookie" />.</summary>
      <param name="name">Název vlastnosti souboru cookie.</param>
      <param name="value">Hodnota vlastnosti souboru cookie.</param>
      <param name="domain">Vlastnost domény souboru cookie.</param>
      <param name="path">Cesta k vlastnosti souboru cookie.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Domain">
      <summary>Získá nebo nastaví doménu souboru cookie.</summary>
      <returns>Doména souboru cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Name">
      <summary>Získá nebo nastaví název souboru cookie.</summary>
      <returns>Název souboru cookie</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Path">
      <summary>Získá nebo nastaví cestu k souboru cookie.</summary>
      <returns>Cesta k souboru cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Value">
      <summary>Získá nebo nastaví hodnotu souboru cookie.</summary>
      <returns>Hodnota souboru cookie</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver">
      <summary>Představuje překladače závislostí s výchozím chováním.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose">
      <summary>Uvolní prostředky používané aktuální instancí třídy <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose(System.Boolean)">
      <summary>Uvolní nespravované prostředky využívané aktuální instancí třídy <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" /> a volitelně také spravované prostředky.</summary>
      <param name="disposing">Hodnota true slouží k uvolnění spravovaných i nespravovaných prostředků; hodnota false slouží k uvolnění pouze nespravovaných prostředků.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetService(System.Type)">
      <summary>Zobrazí samostatně registrované služby, které podporují vytvoření libovolného objektu.</summary>
      <returns>Požadovaná služba nebo objekt.</returns>
      <param name="serviceType">Typ požadované služby nebo objektu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetServices(System.Type)">
      <summary>Vyřeší více registrovaných služeb.</summary>
      <returns>Požadované služby.</returns>
      <param name="serviceType">Typ požadovaných služeb.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Zaregistruje zadané služby do překladače závislostí.</summary>
      <param name="serviceType">Typ služeb k zaregistrování.</param>
      <param name="activators">Služby určené k zaregistrování do překladače závislostí.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Zaregistruje zadanou službu do překladače závislostí.</summary>
      <param name="serviceType">Typ služby k zaregistrování.</param>
      <param name="activator">Služba určená k zaregistrování do překladače závislostí.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Vyřeší typ rozšíření.</summary>
      <returns>Vrátí objekt pro vyřešení typu rozšíření.</returns>
      <param name="resolver">Překladač závislostí</param>
      <typeparam name="T">Typ k vyřešení</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Vyřeší typ rozšíření.</summary>
      <returns>Vrátí objekt pro vyřešení typu rozšíření.</returns>
      <param name="resolver">Překladač závislostí</param>
      <param name="type">Typ k vyřešení</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Vyřeší všechny typy rozšíření.</summary>
      <returns>Vrátí kolekci rozšíření k vyřešení typu.</returns>
      <param name="resolver">Překladač závislostí</param>
      <typeparam name="T">Typ k vyřešení</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Vyřeší všechny typy rozšíření.</summary>
      <returns>Vrátí kolekci rozšíření k vyřešení typu.</returns>
      <param name="resolver">Překladač závislostí</param>
      <param name="type">Typ k vyřešení</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GlobalHost">
      <summary>Poskytuje přístup k výchozím informacím o hostiteli.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.Configuration">
      <summary>Získá výchozí položku <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" />.</summary>
      <returns>Výchozí objekt <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.ConnectionManager">
      <summary>Získá výchozí položku <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" />.</summary>
      <returns>Výchozí objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.DependencyResolver">
      <summary>Získá nebo nastaví výchozí překladač <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</summary>
      <returns>Výchozí objekt <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.HubPipeline">
      <summary>Získá výchozí položku <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.</summary>
      <returns>Výchozí objekt <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.TraceManager">
      <summary>Získá výchozí objekt <see cref="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager" />.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GroupManager">
      <summary>Spravuje skupiny pro připojení.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.#ctor(Microsoft.AspNet.SignalR.IConnection,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.GroupManager" />.</summary>
      <param name="connection">Položka <see cref="T:Microsoft.AspNet.SignalR.IConnection" />, ve které se tato skupina nachází.</param>
      <param name="groupPrefix">Předpona pro tuto skupinu.Buď název <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, nebo název typu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Add(System.String,System.String)">
      <summary>Přidá k zadané skupině připojení.</summary>
      <returns>Úloha, která reprezentuje ID připojení přidávané ke skupině.</returns>
      <param name="connectionId">ID připojení, které se má přidat ke skupině.</param>
      <param name="groupName">Název skupiny.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Remove(System.String,System.String)">
      <summary>Odebere zadané skupině připojení.</summary>
      <returns>Úloha, která reprezentuje ID připojení odebíraného skupině.</returns>
      <param name="connectionId">ID připojení, které se skupině odebrat.</param>
      <param name="groupName">Název skupiny.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Zašle zadané skupině hodnotu.</summary>
      <returns>Úloha, která reprezentuje čas dokončení odesílání.</returns>
      <param name="groupNames">Názvy skupin</param>
      <param name="value">Hodnota, která se má odeslat.</param>
      <param name="excludeConnectionIds">Seznam ID připojení, která mají být vyloučena.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Zašle zadané skupině hodnotu.</summary>
      <returns>Úloha, která reprezentuje čas dokončení odesílání.</returns>
      <param name="groupName">Název skupiny.</param>
      <param name="value">Hodnota, která se má odeslat.</param>
      <param name="excludeConnectionIds">Seznam ID připojení, která mají být vyloučena.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hub">
      <summary>Poskytuje metody komunikující s připojeními SignalR, která se připojila k rozbočovači <see cref="T:Microsoft.AspNet.SignalR.Hub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Clients">
      <summary>Získá nebo nastaví klienty, kteří komunikují pomocí připojení SignalR.</summary>
      <returns>Klienti, kteří komunikují pomocí připojení SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Context">
      <summary>Získá nebo nastaví informace o volajícím klientovi.</summary>
      <returns>Informace o volajícím klientovi.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose">
      <summary>Uvolní všechny prostředky používané touto instancí.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose(System.Boolean)">
      <summary>Uvolní všechny prostředky používané touto instancí.</summary>
      <param name="disposing">Hodnota true slouží k uvolnění spravovaných i nespravovaných prostředků; hodnota false slouží k uvolnění pouze nespravovaných prostředků.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Groups">
      <summary>Získá nebo nastaví správce skupiny pro tuto instanci rozbočovače.</summary>
      <returns>Správce skupiny pro tuto instanci rozbočovače.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnConnected">
      <summary>K tomuto dojde při připojení k této instanci rozbočovače.</summary>
      <returns>Výsledek operace.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnDisconnected">
      <summary>K tomuto dojde při odpojení od této instance rozbočovače.</summary>
      <returns>Výsledek operace.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnReconnected">
      <summary>K tomuto dojde při opětovném připojení k této instanci rozbočovače.</summary>
      <returns>Výsledek operace.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubConfiguration">
      <summary>Představuje konfiguraci rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubConfiguration.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors">
      <summary>Určuje, zda mají být podrobné výjimky vzniklé v metodách rozbočovače zpětně hlášeny ve volajícím klientovi.Výchozí hodnota je false.</summary>
      <returns>Hodnota true, pokud mají být podrobné výjimky vzniklé v metodách rozbočovače zpětně hlášeny ve volajícím klientovi; jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableJavaScriptProxies">
      <summary>Určuje, zda by měly být třídy proxy JavaScript pro rozbočovače na straně serveru automaticky generovány v umístění {cesta}/hubs.Výchozí hodnota je true.</summary>
      <returns>Hodnota true, pokud mají být třídy proxy JavaScript pro rozbočovače na straně serveru automaticky generovány v umístění {cesta}/hubs; jinak hodnota false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubException"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String,System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.HubException.ErrorData"></member>
    <member name="T:Microsoft.AspNet.SignalR.HubPipelineExtensions">
      <summary>Poskytuje rozšiřující metody pro přidání vlastních funkcí k typům dat.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubPipelineExtensions.RequireAuthentication(Microsoft.AspNet.SignalR.Hubs.IHubPipeline)">
      <summary>Vyžádání ověření přidá modul <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> s prvky Authorizer <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection" /> a <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation" />, které budou použity globálně na všechny rozbočovače a metody rozbočovačů.Tyto prvky Authorizer vyžadují ověření identity <see cref="T:System.Security.Principal.IIdentity" /> objektu <see cref="T:System.Security.Principal.IPrincipal" /> pro všechny klienty, kteří volají metody rozbočovače na straně serveru nebo přijímají volání metod rozbočovače na straně klienta.</summary>
      <param name="pipeline">Kanál <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />, do kterého bude přidán modul <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnection">
      <summary>Komunikační kanál pro objekt <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> a jeho připojení.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IConnection.DefaultSignal">
      <summary>Hlavní signál pro toto připojení.Toto je hlavní signál pro objekt <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Odešle zprávu do připojení přihlášených k odběru tohoto signálu.</summary>
      <returns>Úloha, která vrátí čas odeslání zprávy.</returns>
      <param name="message">Zpráva, kterou chcete odeslat.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnectionGroupManager">
      <summary>Spravuje skupiny pro připojení a umožňuje zasílání zpráv skupině.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Odešle hodnotu zadaným skupinám.</summary>
      <returns>Úloha, která reprezentuje čas dokončení odesílání.</returns>
      <param name="groupNames">Názvy skupin</param>
      <param name="value">Hodnota, která se má odeslat.</param>
      <param name="excludeConnectionIds">Seznam ID připojení, která mají být vyloučena.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Zašle zadané skupině hodnotu.</summary>
      <returns>Úloha, která reprezentuje čas dokončení odesílání.</returns>
      <param name="groupName">Název skupiny.</param>
      <param name="value">Hodnota, která se má odeslat.</param>
      <param name="excludeConnectionIds">Seznam ID připojení, která mají být vyloučena.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IDependencyResolver">
      <summary>Poskytuje rozhraní představující překladač závislostí pro SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetService(System.Type)">
      <summary>Vrátí službu pro daný typ.</summary>
      <returns>Vrácená služba.</returns>
      <param name="serviceType">Typ služby, který má být vrácen</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetServices(System.Type)">
      <summary>Vrátí služby pro daný typ.</summary>
      <returns>Vrácené služby</returns>
      <param name="serviceType">Typ služby, který má být vrácen</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Registruje seznam služeb pro zadaný typ.</summary>
      <param name="serviceType">Typ služby k zaregistrování.</param>
      <param name="activators">Seznam delegátů funkcí, kteří přijímají parametr, který představuje službu, kterou chcete aktivovat</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Registruje službu pro zadaný typ.</summary>
      <param name="serviceType">Typ služby k zaregistrování.</param>
      <param name="activator">Delegáti funkcí přijímající parametr, který představuje službu, kterou chcete aktivovat</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IGroupManager">
      <summary>Spravuje skupiny pro připojení.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Add(System.String,System.String)">
      <summary>Přidá k zadané skupině připojení.</summary>
      <returns>Úloha, která reprezentuje ID připojení přidávané ke skupině.</returns>
      <param name="connectionId">ID připojení, které se má přidat ke skupině.</param>
      <param name="groupName">Název skupiny.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Remove(System.String,System.String)">
      <summary>Odebere zadané skupině připojení.</summary>
      <returns>Úloha, která reprezentuje ID připojení odebíraného skupině.</returns>
      <param name="connectionId">ID připojení, které se skupině odebrat.</param>
      <param name="groupName">Název skupiny.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IHubContext">
      <summary>Poskytuje přístup k informacím o objektu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Clients">
      <summary>Zapouzdří všechny informace o připojení SignalR pro rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Groups">
      <summary>Získá objekt <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" /> rozbočovače.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext">
      <summary>Poskytuje přístup k informacím o objektu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Connection">
      <summary>Získá položku <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> pro objekt <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Groups">
      <summary>Získá položku <see cref="T:Microsoft.AspNet.SignalR.IConnectionGroupManager" /> pro objekt <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IRequest">
      <summary>Představuje žádost SignalR.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Cookies">
      <summary>Získá soubory cookie pro připojení klienta.</summary>
      <returns>Soubory cookie pro připojení klienta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Environment">
      <summary>Získá prostředí owin.</summary>
      <returns>Prostředí owin.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Headers">
      <summary>Získá nebo nastaví hlavičky pro žádosti.</summary>
      <returns>Hlavičky pro žádosti.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.LocalPath">
      <summary>Získá místní část cesty adresy URL.</summary>
      <returns>Místní část cesty adresy URL.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.QueryString">
      <summary>Získá kolekci proměnných řetězce dotazu IRequest.</summary>
      <returns>Kolekce proměnných řetězce dotazu IRequest.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IRequest.ReadForm">
      <summary>Přečte formulář žádosti HTTP.</summary>
      <returns>Formulář žádosti HTTP určený k přečtení.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Url">
      <summary>Získá identifikátor URI pro položku IRequest.</summary>
      <returns>Identifikátor URI pro položku IRequest.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.User">
      <summary>Získá uživatele objektu zabezpečení pro položku IRequest.</summary>
      <returns>Objekt zabezpečení pro položku IRequest.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.IUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.PersistentConnection">
      <summary> Reprezentuje připojení mezi klientem a serverem. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.AckHandler">
      <summary>Získá nebo nastaví obslužnou rutinu ACK pro toto připojení.</summary>
      <returns>Obslužná rutina ACK pro toto připojení</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Authorize(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Určuje, zda je toto připojení autorizováno.</summary>
      <returns>Hodnota true, je-li připojení autorizováno, jinak hodnota false.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Určuje, zda je žádost o připojení autorizována.</summary>
      <returns>Hodnota true, je-li žádost o připojení autorizována, jinak hodnota false.</returns>
      <param name="request">Žádost</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Connection">
      <summary>Získá nebo nastaví připojení.</summary>
      <returns>Připojení.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Counters">
      <summary>Získá nebo nastaví správce čítačů výkonu.</summary>
      <returns>Správce čítače výkonu.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.GetSignals(System.String,System.String)">
      <summary>Vrátí signály použité v objektu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Signály použité pro tento objekt <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="userId">ID uživatele pro aktuální připojení.</param>
      <param name="connectionId">ID příchozího připojení.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Groups">
      <summary>Získá nebo nastaví skupiny připojení.</summary>
      <returns>Skupiny připojení</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.JsonSerializer">
      <summary>Získá nebo nastaví serializátor JSON.</summary>
      <returns>Serializátor JSON</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.MessageBus">
      <summary>Získá nebo nastaví sběrnici zpráv pro připojení.</summary>
      <returns>Sběrnice zpráv pro připojení</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Volá se při vytvoření nového připojení.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která se dokončí při dokončení operace připojení.</returns>
      <param name="request">Žádost o aktuální připojení.</param>
      <param name="connectionId">ID opětovně se připojujícího klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Volá se při odpojení připojení.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která se dokončí při dokončení operace odpojení</returns>
      <param name="request">Žádost o aktuální připojení.</param>
      <param name="connectionId">ID opětovně se odpojujícího klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Volá se při přijetí dat z připojení.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která se dokončí při dokončení operace příjmu.</returns>
      <param name="request">Žádost o aktuální připojení.</param>
      <param name="connectionId">ID připojení zasílajícího data.</param>
      <param name="data">Datová část odeslaná do připojení.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Volá se při opětovném navázání připojení po vypršení časového limitu.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která se dokončí při dokončení operace opětovného připojení.</returns>
      <param name="request">Žádost o aktuální připojení.</param>
      <param name="connectionId">ID opětovně se připojujícího klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Volá se při opětovném navázání připojení po vypršení časového limitu, aby se zjistilo, do kterých skupin se má znovu vstoupit.</summary>
      <returns>Kolekce názvů skupin, do nichž se má při opětovném navázání připojení vstoupit.</returns>
      <param name="request">Žádost o aktuální připojení.</param>
      <param name="groups">Skupiny, jejichž součástí má být volající připojení.</param>
      <param name="connectionId">ID opětovně se připojujícího klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Zpracuje všechny požadavky pro připojení <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která se dokončí při dokončení kanálu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="context">Položka <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> pro aktuální žádost.</param>
      <exception cref="InvalidOperationException">Vygeneruje se, pokud připojení nebylo inicializováno.Vygeneruje se, pokud nebyl určen přenos.Vygeneruje se, pokud nebylo určeno ID připojení.</exception>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vstupní bod OWIN.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.ProtectedData">
      <summary>Získá nebo nastaví chráněná data pro toto připojení.</summary>
      <returns>Chráněná data pro toto připojení</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Trace">
      <summary>Získá zdroj připojení.</summary>
      <returns>Zdroj připojení</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.TraceManager">
      <summary>Získá nebo nastaví správce trasování.</summary>
      <returns>Správce trasování</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Transport">
      <summary>Získá nebo nastaví přenos přidružený k tomuto připojení.</summary>
      <returns>Přenos přidružený k tomuto připojení</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.UserIdProvider"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager">
      <summary>Poskytuje přístup ke správci výchozí konfigurace serveru.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.ConnectionTimeout">
      <summary>Získá nebo nastaví časový interval představující dobu, po kterou má připojení zůstat otevřeno, než vyprší jeho časový limit.</summary>
      <returns>Časový interval představující dobu, po kterou má připojení zůstat otevřeno, než vyprší časový limit.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DefaultMessageBufferSize">
      <summary>Získá nebo nastaví počet zpráv, které se mají pro určitý signál ukládat do vyrovnávací paměti.</summary>
      <returns>Počet zpráv, které se mají pro určitý signál ukládat do vyrovnávací paměti.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DisconnectTimeout">
      <summary>Získá nebo nastaví časový interval představující dobu, po kterou se má po ukončení připojení vyčkat, než se vyvolá událost odpojení.</summary>
      <returns>Časový interval představující dobu, po kterou se má po ukončení připojení vyčkat, než se vyvolá událost odpojení.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.KeepAlive">
      <summary>Získá nebo nastaví časový interval představující dobu, která má uplynout mezi zasláním zpráv pro zachování připojení.Je-li funkce povolena, tato hodnota musí být nastavena alespoň na 2 sekundy.Nastavením na hodnotu null lze funkci zakázat.</summary>
      <returns>Časový interval představující dobu, která má uplynout mezi zasláním zpráv pro zachování připojení.Je-li funkce povolena, tato hodnota musí být nastavena alespoň na 2 sekundy.Nastavením na hodnotu null lze funkci zakázat.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.LongPollDelay"></member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.TransportConnectTimeout"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager">
      <summary>Poskytuje přístup ke konfiguraci serveru.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.ConnectionTimeout">
      <summary>Získá nebo nastaví položku <see cref="T:System.TimeSpan" /> reprezentující dobu, po kterou má připojení zůstat otevřeno, než vyprší jeho časový limit.</summary>
      <returns>Časový interval (<see cref="T:System.TimeSpan" />) představující dobu, po kterou má připojení zůstat otevřeno, než vyprší časový limit.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DefaultMessageBufferSize">
      <summary>Získá nebo nastaví počet zpráv, které se mají pro určitý signál ukládat do vyrovnávací paměti.</summary>
      <returns>Počet zpráv, které se mají pro určitý signál ukládat do vyrovnávací paměti.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DisconnectTimeout">
      <summary>Získá nebo nastaví položku <see cref="T:System.TimeSpan" /> reprezentující dobu, po kterou se má po ukončení připojení vyčkat, než se vydá událost odpojení.</summary>
      <returns>Časový interval (<see cref="T:System.TimeSpan" />) představující dobu, po kterou se má po ukončení připojení vyčkat, než se vyvolá událost odpojení.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.KeepAlive">
      <summary>Získá nebo nastaví položku <see cref="T:System.TimeSpan" /> reprezentující dobu, která má uplynout mezi zasláním zpráv pro zachování připojení.Je-li funkce povolena, tato hodnota musí být nastavena alespoň na 2 sekundy.Nastavením na hodnotu null lze funkci zakázat.</summary>
      <returns>Časový interval (<see cref="T:System.TimeSpan" />) představující dobu, která má uplynout mezi zasláním zpráv pro zachování připojení.Je-li funkce povolena, tato hodnota musí být nastavena alespoň na 2 sekundy.Nastavením na hodnotu null lze funkci zakázat.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.LongPollDelay">
      <summary>Získá nebo nastaví <see cref="T:System.TimeSpan" /> instruující klienta, aby počkal před opětovným vytvořením připojení pro dlouhé dotazování po odeslání dat ze serveru.Výchozí hodnota je 0.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.TransportConnectTimeout">
      <summary>Získá nebo nastaví položku <see cref="T:System.TimeSpan" /> reprezentující dobu, po kterou má klient povolit připojení, než bude použit jiný přenos nebo bude přenos považován za neúspěšný.Výchozí hodnota je 5 sekund.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostContext">
      <summary>Představuje kontext hostitele SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(Microsoft.AspNet.SignalR.IRequest,Microsoft.AspNet.SignalR.Hosting.IResponse)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</summary>
      <param name="environment">Prostředí hostitele SignalR</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Environment">
      <summary>Získá prostředí hostitele SignalR.</summary>
      <returns>Prostředí hostitele SignalR</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Request"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Response"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions">
      <summary>Představuje hostitele pro rozšíření překladače závislostí.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions.InitializeHost(Microsoft.AspNet.SignalR.IDependencyResolver,System.String,System.Threading.CancellationToken)">
      <summary>Inicializuje hostitele pro rozšíření překladače závislostí.</summary>
      <param name="resolver">Objekt IDependencyResolver.</param>
      <param name="instanceName">Název instance.</param>
      <param name="hostShutdownToken">Token vypnutí hostitele.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.INameValueCollection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Get(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.GetValues(System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Item(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.IResponse">
      <summary>Reprezentuje připojení ke klientovi.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.CancellationToken">
      <summary>Získá token zrušení reprezentující životnost klienta.</summary>
      <returns>Token zrušení reprezentující životnost klienta</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.ContentType">
      <summary>Získá nebo nastaví typ obsahu odpovědi.</summary>
      <returns>Typ obsahu odpovědi</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Flush">
      <summary>Vyprázdní odpověď klientovi uloženou ve vyrovnávací paměti.</summary>
      <returns>Úloha reprezentující čas vyprázdnění dat.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Zapíše data uložená ve vyrovnávací paměti.</summary>
      <param name="data">Data, která mají být zapsána do vyrovnávací paměti.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory">
      <summary>Slouží k vytváření instancí <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Vytvoří novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory" />.</summary>
      <param name="resolver">Překladač závislostí, který se má použít při vytváření objektu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.CreateInstance(System.Type)">
      <summary>Vytvoří instanci zadaného typu pomocí překladače závislostí nebo výchozího konstruktoru typu.</summary>
      <returns>Instance objektu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></returns>
      <param name="connectionType">Typ objektu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> k vytvoření.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions">
      <summary>Rozšiřující metody třídy <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions.End(Microsoft.AspNet.SignalR.Hosting.IResponse,System.String)">
      <summary>Zavře připojení ke klientovi s volitelnými daty.</summary>
      <returns>Úloha reprezentující čas uzavření připojení.</returns>
      <param name="response">Objekt <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" /></param>
      <param name="data">Data, která mají být zapsána do připojení.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule">
      <summary>Pomocí atributů autorizace z třídy <see cref="T:Microsoft.AspNet.SignalR.Hub" /> určí, zda má být klientům povoleno přijímat zprávy odeslané z rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor(Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection,Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</summary>
      <param name="globalConnectionAuthorizer">Prvek Authorizer globálního připojení.</param>
      <param name="globalInvocationAuthorizer">Prvek Authorizer globálního volání.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Zabalí funkci, která má být volána, než se klient přihlásí k odběru signálů patřících rozbočovači popsanému deskriptorem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Ve výchozím nastavení bude položka <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> hledat v rozbočovači atributy sloužící k určení toho, zda má klient autorizaci k přihlášení k odběru volání metod pro popsaný rozbočovač.Funkce vrátí hodnotu true, pokud má klient autorizaci k odběru volání metod rozbočovače na straně klienta; jinak vrátí hodnotu false.</summary>
      <returns>Zabalená funkce, která určuje, zda má mít klient autorizaci k připojení k popsanému rozbočovači, či nikoli.</returns>
      <param name="authorizeConnect">Funkce, která určuje, zda má mít klient autorizaci k připojení k popsanému rozbočovači, či nikoli.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Zabalí funkci, která volá metodu rozbočovače na straně serveru.I když nemá klient autorizaci k připojení k rozbočovači, bude moci volat v daném rozbočovači metody na straně serveru, pokud mu to úloha <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> neprovedením parametru volání nezakáže.</summary>
      <returns>Zabalená funkce, která volá metodu rozbočovače na straně serveru.</returns>
      <param name="invoke">Funkce, která volá metodu rozbočovače na straně serveru.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation">
      <summary>Popisuje volání metody rozbočovače na straně klienta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Args">
      <summary>Získá nebo nastaví seznam argumentů, s nimiž bude metoda rozbočovače klienta volána.</summary>
      <returns>Seznam argumentů přidružený k metodě rozbočovače na straně klienta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Hub">
      <summary>Získá nebo nastaví název rozbočovače, ke kterému volaná metoda patří.</summary>
      <returns>Název rozbočovače, ke kterému volaná metoda patří.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Method">
      <summary>Získá nebo nastaví název metody rozbočovače na straně klienta k volání.</summary>
      <returns>Název metody rozbočovače na straně klienta, která má být volána.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.State">
      <summary>Získá nebo nastaví úložiště dvojic klíč/hodnota představující stav rozbočovače na serveru, který se změnil od posledního odeslání stavu rozbočovače klientovi.</summary>
      <returns>Úložiště dvojic klíč/hodnota představující stav rozbočovače na serveru.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy">
      <summary>Reprezentuje proxy server na straně serveru pro rozbočovač na straně klienta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])">
      <summary>Volá v připojeních metodu reprezentovanou instancí <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy" />.</summary>
      <returns>Úloha reprezentující čas odeslání dat klientovi.</returns>
      <param name="method">Název metody, která bude vyvolána.</param>
      <param name="args">Argumenty, které mají být předány klientovi.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Provede metodu <see cref="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])" />.</summary>
      <returns>Vždy nabývá hodnoty true.</returns>
      <param name="binder">Informace obsahující sémantiku vazby a podrobnosti o operaci rozbočovače na straně klienta.</param>
      <param name="args">Argumenty předávané členovi objektu během operace volání.</param>
      <param name="result">Při návratu metoda obsahuje výsledek volání člena.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy">
      <summary>Představuje proxy server ID připojení pro rozbočovač na straně klienta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String[])"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator">
      <summary>Představuje výchozí lokátor sestavení.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.GetAssemblies">
      <summary>Získá sestavení, která byla načtena do aktuální domény aplikace.</summary>
      <returns>Pole sestavení v aktuální doméně aplikace.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator">
      <summary>Představuje výchozí aktivátor pro rozbočovače SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator" />.</summary>
      <param name="resolver">Překladač závislostí</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Vytvoří nový aktivátor rozbočovače.</summary>
      <returns>Vytvořený aktivátor rozbočovače.</returns>
      <param name="descriptor">Popisovač</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager">
      <summary>Představuje výchozího správce rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager" />.</summary>
      <param name="resolver">Překladač rozbočovače.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHub(System.String)">
      <summary>Načte popisovač jednoho rozbočovače.</summary>
      <returns>Popisovač rozbočovače, je-li nalezen; jinak hodnota null.</returns>
      <param name="hubName">Název rozbočovače.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Načte metodu s daným názvem v daném prohlížeči.</summary>
      <returns>Popisovač metody, je-li nalezen.Jinak hodnota null.</returns>
      <param name="hubName">Název rozbočovače.</param>
      <param name="method">Název metody k vyhledání.</param>
      <param name="parameters">Parametry metody, které se mají shodovat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Získá všechny metody dostupné pro volání v daném rozbočovači.</summary>
      <returns>Seznam dostupných metod.</returns>
      <param name="hubName">Název rozbočovače.</param>
      <param name="predicate">Volitelný predikát pro filtrování výsledků.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Získá všechny dostupné rozbočovače odpovídající danému predikátu.</summary>
      <returns>Seznam popisovačů rozbočovače.</returns>
      <param name="predicate">Predikát.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHub(System.String)">
      <summary>Přeloží daný název rozbočovače na konkrétní objekt.</summary>
      <returns>Instance implementace rozbočovače, je-li nalezena.Jinak hodnota null.</returns>
      <param name="hubName">Název rozbočovače.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHubs">
      <summary>Přeloží všechny dostupné rozbočovače na příslušné konkrétní objekty.</summary>
      <returns>Seznam instancí rozbočovače.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator">
      <summary>Představuje generátor pro výchozí proxy server Javascript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubManager,Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />.</summary>
      <param name="manager">Správce rozbočovače.</param>
      <param name="javaScriptMinifier">Minifikátor Javascript</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />.</summary>
      <param name="resolver">Překladač závislostí</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Generuje určený proxy server.</summary>
      <returns>Vygenerovaný proxy server</returns>
      <param name="serviceUrl">Adresa URL služby</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String,System.Boolean)">
      <summary>Generuje určený proxy server.</summary>
      <returns>Vygenerovaný proxy server</returns>
      <param name="serviceUrl">Adresa URL služby</param>
      <param name="includeDocComments">Hodnota true, chcete-li zahnout komentáře Doc, jinak hodnota false.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver">
      <summary>Představuje výchozí překladač pro parametr rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Vyřeší hodnoty parametru metody na základě zadaných objektů.</summary>
      <returns>Pole hodnot parametrů.</returns>
      <param name="method">Popisovač metody.</param>
      <param name="values">Seznam hodnot, ze kterých se mají překládat hodnoty parametru.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveParameter(Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor,Microsoft.AspNet.SignalR.Json.IJsonValue)">
      <summary>Vyřeší hodnotu parametru na základě zadaného objektu.</summary>
      <returns>Hodnota parametru.</returns>
      <param name="descriptor">Popisovač parametru</param>
      <param name="value">Hodnota, ze které se má vyřešit hodnota parametru.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.Descriptor">
      <summary>Popisuje informace o rozbočovači.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.Descriptor.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.Descriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.Name">
      <summary>Získá nebo nastaví název rozbočovače.</summary>
      <returns>Název rozbočovače.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.NameSpecified">
      <summary>Získá nebo nastaví hodnotu určující, zda je zadán název atributu rozbočovače.</summary>
      <returns>Hodnota true, pokud je název atributu rozbočovače zadán, jinak hodnota false</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary">
      <summary>Obsahuje objekt slovníku pro uložení párů klíč/hodnota a přepíše metody TrySetMember a TryGetMember pro zajištění podpory nové syntaxe.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary" />.</summary>
      <param name="obj">Objekt slovníku.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Přidá určitý objekt dvojice klíč/hodnota do slovníku.</summary>
      <param name="item">Objekt dvojice klíč/hodnota k přidání.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.String,System.Object)">
      <summary>Přidá zadaný klíč a hodnotu do slovníku.</summary>
      <param name="key">Klíč elementu, který chcete přidat</param>
      <param name="value">Hodnota elementu, který chcete přidat</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Clear">
      <summary>Odebere všechny klíče a hodnoty ze slovníku.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Určuje, zda slovník obsahuje určitou položku páru klíč/hodnota.</summary>
      <returns>Hodnota true, pokud slovník obsahuje element se zadanou hodnotou; jinak hodnota false.</returns>
      <param name="item">Položka páru klíč/hodnota k vyhledání ve slovníku.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.ContainsKey(System.String)">
      <summary>Určuje, zda slovník obsahuje zadaný klíč.</summary>
      <returns>Hodnota true, pokud slovník obsahuje zadaný klíč; jinak hodnota false.</returns>
      <param name="key">Klíč k vyhledání ve slovníku.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Zkopíruje elementy dvojice klíč/hodnota do existujícího jednorozměrného pole, začne u zadaného indexu pole.</summary>
      <param name="array">Jednorozměrné pole, které je cílem elementů zkopírovaných ze slovníku.</param>
      <param name="arrayIndex">Index založený na nule v poli, ve kterém kopírování začíná.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Count">
      <summary>Získá počet položek ve slovníku.</summary>
      <returns>Počet položek ve slovníku.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.GetEnumerator">
      <summary>Vrátí enumerátor, který iteruje ve slovníku.</summary>
      <returns>Enumerátor, který iteruje v rámci slovníku.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.IsReadOnly">
      <summary>Zjistí, zda je dynamický slovník jen pro čtení.</summary>
      <returns>Hodnota true, pokud je dynamický slovník určen pouze ke čtení; jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Item(System.String)">
      <summary>Získá nebo nastaví položku s určitým klíčem ve slovníku.</summary>
      <returns>Položka s určitým klíčem ve slovníku.</returns>
      <param name="key">Klíč položky.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Keys">
      <summary>Získá kolekci klíčů ve slovníku.</summary>
      <returns>Kolekce klíčů ve slovníku.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Odebere určitou dvojici klíč/hodnota ze slovníku.</summary>
      <returns>Slovník s odebranou položkou.</returns>
      <param name="item">Položka k odebrání.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.String)">
      <summary>Odebere určitý klíč ze slovníku.</summary>
      <returns>Slovník s odebraným klíčem.</returns>
      <param name="key">Klíč k odebrání.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Vrací enumerátor procházející kolekci.</summary>
      <returns>Enumerátor, který iteruje v rámci kolekce.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Poskytuje implementaci pro operace, které získávají hodnoty členů.</summary>
      <returns>Hodnota true, pokud byla operace úspěšná, jinak hodnota false.</returns>
      <param name="binder">Poskytuje informace o objektu, který volal dynamickou operaci.</param>
      <param name="result">Výsledek operace získání.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Získá hodnotu přidruženou k zadanému klíči.</summary>
      <returns>Hodnota true, pokud slovník obsahuje element se zadaným klíčem, jinak hodnota false.</returns>
      <param name="key">Klíč hodnoty, kterou chcete získat</param>
      <param name="value">Obsahuje hodnotu přidruženou k zadanému klíči, pokud je klíč při vrácení metody nalezen; v opačném případě výchozí hodnota typu pro parametr hodnoty.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Poskytuje implementaci pro operace, které nastavují hodnoty členů.</summary>
      <returns>Hodnota true, pokud byla operace úspěšná, jinak hodnota false.</returns>
      <param name="binder">Poskytuje informace o objektu, který volal dynamickou operaci.</param>
      <param name="value">Hodnota k nastavení pro člena.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Unwrap(System.Object)">
      <summary>Rozbalí zadanou hodnotu přidruženou ke slovníku.</summary>
      <returns>Rozbalená hodnota.</returns>
      <param name="value">Hodnota k rozbalení.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Values">
      <summary>Získá kolekci hodnot ve slovníku.</summary>
      <returns>Kolekce hodnot ve slovníku.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Wrap(System.Object)">
      <summary>Zabalí zadanou hodnotu přidruženou ke slovníku.</summary>
      <returns>Zabalená hodnota.</returns>
      <param name="value">Hodnota, která se má zahrnout.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator">
      <summary>Představuje generátor pro prázdný proxy server Javascript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Generuje proxy server se zadanou adresou URL.</summary>
      <returns>Vygenerovaný proxy server</returns>
      <param name="serviceUrl">Adresa URL služby</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator">
      <summary>Představuje výčtový objekt přidružený k lokátoru sestavení.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator" />.</summary>
      <param name="assemblies">Sestavení.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.GetAssemblies">
      <summary>Vrátí seznam sestavení.</summary>
      <returns>Seznam sestavení.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ExceptionContext"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.#ctor(System.Exception)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Error">
      <summary>Výjimka, která má být odeslána volajícímu klientoviBude přepsáno generickou hodnotou výjimky (Exception), pokud parametr Error nemá hodnotu <see cref="T:Microsoft.AspNet.SignalR.HubException" /> nebo <see cref="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors" /> nemá nastavenu hodnotu true.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Result">
      <summary>Hodnota, která má být vrácena místo zobrazení chybyPokud je nastaven parametr Result, bude mít parametr Error hodnotu null.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.GroupProxy">
      <summary>Představuje skupinu proxy serveru signálu používanou rozbočovačem.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.GroupProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext">
      <summary>Představuje kontext volání klienta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.#ctor(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" />.</summary>
      <param name="request">Aktuální žádost HTTP.</param>
      <param name="connectionId">ID připojení</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.ConnectionId">
      <summary>Získá ID připojení volajícího klienta.</summary>
      <returns>ID připojení volajícího klienta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Headers">
      <summary>Získá hlavičky pro dané žádosti.</summary>
      <returns>Hlavičky pro dané žádosti.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.QueryString">
      <summary>Získá řetězec dotazu pro tuto žádost.</summary>
      <returns>Řetězec dotazu pro tuto žádost.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Request">
      <summary>Získá objekt <see cref="T:Microsoft.AspNet.SignalR.IRequest" /> pro aktuální požadavek HTTP.</summary>
      <returns>Položka <see cref="T:Microsoft.AspNet.SignalR.IRequest" /> pro aktuální požadavek HTTP.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.RequestCookies">
      <summary>Získá soubory cookie pro tento požadavek.</summary>
      <returns>Soubory cookie pro tento požadavek.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.User">
      <summary>Získá položku <see cref="T:System.Security.Principal.IPrincipal" /> pro daný požadavek.</summary>
      <returns>Položka <see cref="T:System.Security.Principal.IPrincipal" /> pro daný požadavek.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext">
      <summary>Zapouzdří všechny informace o jednom připojení SignalR pro rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,Microsoft.AspNet.SignalR.IConnection,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />.</summary>
      <param name="pipelineInvoker">Původce volání kanálu.</param>
      <param name="connection">Připojení rozhraní.</param>
      <param name="hubName">Název rozbočovače.</param>
      <param name="connectionId">ID připojení.</param>
      <param name="tracker">Modul sledování změny stavu.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Caller">
      <summary>Získá nebo nastaví volajícího klienta.</summary>
      <returns>Volající klient.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Others">
      <summary>Získá nebo nastaví všechny připojené klienty kromě volajícího klienta.</summary>
      <returns>Všichni připojení klienti s výjimkou volajícího klienta.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroup(System.String)">
      <summary>Vrátí dynamickou reprezentaci všech klientů ve skupině s výjimkou volajícího klienta.</summary>
      <returns>Dynamická reprezentace všech klientů ve skupině s výjimkou volajícího klienta.</returns>
      <param name="groupName">Název skupiny.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})">
      <summary>Vrátí dynamickou reprezentaci všech klientů v zadaných skupinách s výjimkou volajícího klienta.</summary>
      <returns>Dynamická reprezentace všech klientů ve skupině s výjimkou volajícího klienta.</returns>
      <param name="groupNames">Název skupin</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.All"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.AllExcept(System.String[])">
      <summary>Vrátí dynamickou reprezentaci všech klientů s výjimkou zadaných volajících klientů.</summary>
      <returns>Dynamická reprezentace všech klientů s výjimkou zadaných volajících klientů.</returns>
      <param name="excludeConnectionIds">Seznam ID připojení, která mají být vyloučena.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Client(System.String)">
      <summary>Vrátí dynamickou reprezentaci připojení se zadaným ID připojení.</summary>
      <returns>Dynamická reprezentace zadaného klienta.</returns>
      <param name="connectionId">ID připojení.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Clients(System.Collections.Generic.IList{System.String})">
      <summary>Vrátí dynamickou reprezentaci připojení se zadanými ID připojení.</summary>
      <returns>Dynamická reprezentace zadaných klientů</returns>
      <param name="connectionIds">ID připojení</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Group(System.String,System.String[])">
      <summary>Vrátí dynamickou reprezentaci zadané skupiny.</summary>
      <returns>Dynamická reprezentace zadané skupiny.</returns>
      <param name="groupName">Název skupiny.</param>
      <param name="excludeConnectionIds">Seznam ID připojení, která mají být vyloučena.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Groups(System.Collections.Generic.IList{System.String},System.String[])">
      <summary>Vrátí dynamickou reprezentaci zadaných skupin.</summary>
      <returns>Dynamická reprezentace zadaných skupin</returns>
      <param name="groupNames">Názvy skupin</param>
      <param name="excludeConnectionIds">Seznam ID připojení, která mají být vyloučena.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.HubName"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Invoker"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor">
      <summary>Představuje informace o jednom rozbočovači.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.CreateQualifiedName(System.String)">
      <summary>Vytvoří úplný název pro rozbočovač za použití zadaného neúplného názvu.</summary>
      <returns>Vytvořený úplný název.</returns>
      <param name="unqualifiedName">Neúplný název.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.HubType">
      <summary>Získá nebo nastaví typ rozbočovače.</summary>
      <returns>Typ rozbočovače.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher">
      <summary>Zpracuje veškerou komunikaci prostřednictvím trvalého připojení rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.#ctor(Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />.</summary>
      <param name="configuration">Konfigurační nastavení určující, zda mají být povoleny třídy proxy JS a zda mají klienti obdržet podrobné chyby rozbočovače</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Sestaví seznam rozbočovačů, které jsou autorizovány pro určitou žádost o připojení.</summary>
      <returns>Hodnota true, pokud existují autorizované rozbočovače, v opačném případě hodnota false.</returns>
      <param name="request">Žádost o aktuální připojení.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.GetSignals(System.String,System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Je voláno hostitelem pro inicializaci odeslání rozbočovače pro překladač IDependencyResolver.</summary>
      <param name="resolver">Překladač IDependency.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Volá se, když se připojení připojí k této instanci rozbočovače.</summary>
      <returns>Úloha, která je volána, když se připojení připojí k této instanci rozbočovače</returns>
      <param name="request">Žádost IRequest o aktuální připojení.</param>
      <param name="connectionId">ID opětovně se připojujícího klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Volá se, když se připojení odpojí od této instance rozbočovače.</summary>
      <returns>Úloha, která je volána, když se připojení odpojí od této instance rozbočovače</returns>
      <param name="request">Žádost IRequest o aktuální připojení.</param>
      <param name="connectionId">ID opětovně se připojujícího klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Zpracuje příchozí volání metody v rozbočovači.</summary>
      <returns>Úloha, která je volána, když jsou data přijata z této instance rozbočovače</returns>
      <param name="request">Žádost IRequest o aktuální připojení.</param>
      <param name="connectionId">ID opětovně se připojujícího klienta.</param>
      <param name="data">Data byla přijata.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Volá se, když se připojení znovu připojí k této instanci rozbočovače.</summary>
      <returns>Úloha, která je volána, když se připojení znovu připojí k této instanci rozbočovače</returns>
      <param name="request">Žádost IRequest o aktuální připojení.</param>
      <param name="connectionId">ID opětovně se připojujícího klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Volá se při opětovném navázání připojení po vypršení časového limitu, aby se zjistilo, do kterých skupin se má znovu vstoupit.</summary>
      <returns>Seznam připojení použitý k opětovnému připojení po vypršení časového limitu, aby se zjistilo, do kterých skupin se má znovu vstoupit</returns>
      <param name="request">Žádost IRequest o aktuální připojení.</param>
      <param name="groups">Skupiny, jejichž součástí má být volající připojení.</param>
      <param name="connectionId">ID opětovně se připojujícího klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Zpracuje všechny žádosti o kontext HostContext.</summary>
      <returns>Úloha, která zpracuje všechny žádosti o kontext HostContext</returns>
      <param name="context">Kontext hostitele.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Trace">
      <summary>Získá připojení rozbočovače, která umožňují aplikacím sledovat spuštění kódu a přidružit zprávy sledování k jejich zdroji.</summary>
      <returns>Připojení rozbočovače, která umožňují aplikacím sledovat spuštění kódu a přidružit zprávy sledování k jejich zdroji.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions">
      <summary>Poskytuje rozšíření správce rozbočovače pro celý proces rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.EnsureHub(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter[])">
      <summary>Zajistí všechny informace o popisovači rozbočovače.</summary>
      <returns>Popisovač rozbočovače k zajištění všech informací.</returns>
      <param name="hubManager">Správce rozbočovače.</param>
      <param name="hubName">Název rozbočovače.</param>
      <param name="counters">Čítače výkonu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubMethods(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String)">
      <summary>Získá všechny metody dostupné pro volání v daném rozbočovači.</summary>
      <returns>Kolekce metod k volání v daném rozbočovači.</returns>
      <param name="hubManager">Správce rozbočovače.</param>
      <param name="hubName">Název rozbočovače.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubs(Microsoft.AspNet.SignalR.Hubs.IHubManager)">
      <summary>Načte všechny dostupné rozbočovače.</summary>
      <returns>Načtení všech dostupných rozbočovačů.</returns>
      <param name="hubManager">Správce rozbočovače.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute">
      <summary>Představuje atributy názvu metody pro rozbočovač.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute" />.</summary>
      <param name="methodName">Název metody</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.MethodName">
      <summary>Získá nebo nastaví metody.</summary>
      <returns>Název metody.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute">
      <summary>Představuje atribut pro název rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute" />.</summary>
      <param name="hubName">Název rozbočovače.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.HubName">
      <summary>Získá nebo nastaví název rozbočovače.</summary>
      <returns>Název rozbočovače.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule">
      <summary>Obecná základní třída pro zjednodušení implementace modulů IHubPipelineModules.Modul může zachytávat a přizpůsobovat různé fáze zpracování v rozbočovači, jako je připojení, opětovné připojení, odpojení, volání metod rozbočovače na straně serveru, volání metod rozbočovače na straně klienta, autorizace klientů rozbočovače a opětovné připojování ke skupinám rozbočovačů.Modul lze aktivovat voláním <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.Kombinované moduly přidané do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> jsou volány prostřednictvím rozhraní <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Zabalí funkci, která má být volána, než se klient přihlásí k odběru signálů patřících rozbočovači popsanému deskriptorem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Ve výchozím nastavení bude položka <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> hledat v rozbočovači <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> atributy sloužící k určení toho, zda má klient autorizaci k přihlášení k odběru volání metod pro popsaný rozbočovač.Funkce vrátí hodnotu true, pokud má klient autorizaci k odběru volání metod rozbočovače na straně klienta; jinak vrátí hodnotu false.</summary>
      <returns>Zabalená funkce, která určuje, zda má mít klient autorizaci k připojení k popsanému rozbočovači, či nikoli.</returns>
      <param name="authorizeConnect">Funkce, která určuje, zda má mít klient autorizaci k připojení k popsanému rozbočovači, či nikoli.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Zabalí funkci, která je volána, když se klient připojí k objektu <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />, pro každý rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, k němuž se klient připojí.Ve výchozím nastavení je výsledkem volání metody OnConnected rozbočovače <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Zabalená funkce, která se má volat při připojení klienta k rozbočovači.</returns>
      <param name="connect">Funkce, která se má volat při připojení klienta k rozbočovači.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Zabalí funkci, která je volána, když se klient odpojí od objektu <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />, pro každý rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, k němuž byl klient připojen.Ve výchozím nastavení je výsledkem volání metody OnDisconnected rozbočovače <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Zabalená funkce, která se má volat při odpojení klienta od rozbočovače.</returns>
      <param name="disconnect">Funkce, která se má volat při odpojení klienta od rozbočovače.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Zabalí funkci, která volá metodu rozbočovače na straně serveru.I když nemá klient autorizaci k připojení k rozbočovači, bude moci volat v daném rozbočovači metody na straně serveru, pokud mu to úloha <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> neprovedením parametru volání nezakáže.</summary>
      <returns>Zabalená funkce, která volá metodu rozbočovače na straně serveru.</returns>
      <param name="invoke">Funkce, která volá metodu rozbočovače na straně serveru.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Zabalí funkci, která volá metodu rozbočovače na straně klienta.</summary>
      <returns>Zabalená funkce, která volá metodu rozbočovače na straně klienta.</returns>
      <param name="send">Funkce, která volá metodu rozbočovače na straně klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Zabalí funkci, která je volána, když se klient znovu připojí k objektu <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />, pro každý rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, k němuž se klient připojí.Ve výchozím nastavení je výsledkem volání metody OnReconnected rozbočovače <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Zabalená funkce, která se má volat při opětovném připojení klienta k rozbočovači.</returns>
      <param name="reconnect">Funkce, která se má volat při opětovném připojení klienta k rozbočovači.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Zabalí funkci, která určuje, které ze skupin patřících k rozbočovači popsanému deskriptorem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> má být klientovi povoleno se znovu připojit.Ve výchozím nastavení budou klienti, kteří se znovu připojují k serveru, odebráni ze všech skupin, jichž byli dříve členy, protože nedůvěryhodní klienti mohou předstírat členství ve skupinách, ke kterým nikdy neměli povolení se připojit.</summary>
      <returns>Zabalená funkce určující, ke kterým skupinám má být klientovi povoleno se znovu připojit.</returns>
      <param name="rejoiningGroups">Funkce určující, ke kterým skupinám má být klientovi povoleno se znovu připojit.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Je-li tato metoda volána, stane se tak až po provedení všech komponent připojení všech modulů později přidaných do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> a po provedení položky <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" />.</summary>
      <param name="hub">Rozbočovač, ke kterému se klient připojil.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Je-li tato metoda volána, stane se tak až po provedení všech komponent odpojení všech modulů později přidaných do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> a po provedení položky <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" />.</summary>
      <param name="hub">Rozbočovač, od kterého se klient odpojil.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterIncoming(System.Object,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Tato metoda je volána po dokončení provádění příchozích komponent všech modulů později přidaných do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> a metody rozbočovače na straně serveru.</summary>
      <returns>Možná nová nebo aktualizovaná návratová hodnota metody rozbočovače na straně serveru.</returns>
      <param name="result">Návratová hodnota metody rozbočovače na straně serveru.</param>
      <param name="context">Popis volání metody rozbočovače na straně serveru.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Tato metoda je volána pro provedení odchozích komponent všech modulů později přidaných do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.To neznamená, že všichni klienti obdrželi volání metody rozbočovače, ale značí to, že do sběrnice zpráv byla úspěšně publikována zpráva o volání rozbočovače.</summary>
      <param name="context">Popis volání metody rozbočovače na straně klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Je-li tato metoda volána, stane se tak až po provedení všech komponent opětovného připojení všech modulů později přidaných do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> a po provedení položky <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" />.</summary>
      <param name="hub">Rozbočovač, ke kterému se klient opětovně připojil.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeAuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Tato metoda je volána před provedením komponent AuthorizeConnect všech modulů později přidaných do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Vrátí-li se hodnota false, později přidané moduly se nespustí a klient se nebude moci přihlásit k odběru volání metod, které patří k rozbočovači definovanému položkou <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />, na straně klienta.</summary>
      <returns>Hodnota true, pokud má klient povoleno připojit se k rozbočovači; jinak hodnota false.</returns>
      <param name="hubDescriptor">Popis rozbočovače, k jehož odběru se klient pokouší přihlásit.</param>
      <param name="request">Žádost o připojení klienta, který se pokouší přihlásit k odběru rozbočovače.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Tato metoda je volána před provedením komponent připojení všech modulů později přidaných do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Vrátí-li se hodnota false, později přidané moduly a metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> se nespustí.</summary>
      <returns>Hodnota true, mají-li být komponenty připojení později přidaných modulů a metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> provedeny; jinak hodnota false.</returns>
      <param name="hub">Rozbočovač, ke kterému se klient připojil.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Tato metoda je volána před provedením komponent odpojení všech modulů později přidaných do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Vrátí-li se hodnota false, později přidané moduly a metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> se nespustí.</summary>
      <returns>Hodnota true, mají-li být komponenty odpojení později přidaných modulů a metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> provedeny; jinak hodnota false.</returns>
      <param name="hub">Rozbočovač, od kterého se klient odpojil.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Tato metoda je volána před provedením příchozích komponent všech modulů později přidaných do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Vrátí-li se hodnota false, volání později přidaných modulů a metody rozbočovače na straně serveru nebude provedeno.I když nemá klient autorizaci k připojení k rozbočovači, bude moci volat v daném rozbočovači metody na straně serveru, pokud mu to úloha <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> neprovedením parametru volání nezakáže nebo pokud mu v tom nezabrání vrácení hodnoty false u položky <see cref="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)" />.</summary>
      <returns>Hodnota true, má-li být volání příchozích komponent později přidaných modulů a metody na straně serveru provedeno; jinak hodnota false.</returns>
      <param name="context">Popis volání metody rozbočovače na straně serveru.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Tato metoda je volána před provedením odchozích komponent všech modulů později přidaných do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Vrátí-li se hodnota false, volání později přidaných modulů a metody rozbočovače na straně klienta nebude provedeno.</summary>
      <returns>Hodnota true, má-li být volání odchozích komponent později přidaných modulů a metody rozbočovače na straně klienta provedeno; jinak hodnota false.</returns>
      <param name="context">Popis volání metody rozbočovače na straně klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Tato metoda je volána před provedením komponent opětovného připojení všech modulů později přidaných do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Vrátí-li se hodnota false, později přidané moduly a metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> se nespustí.</summary>
      <returns>Hodnota true, mají-li být komponenty opětovného připojení později přidaných modulů a metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> provedeny; jinak hodnota false.</returns>
      <param name="hub">Rozbočovač, ke kterému se klient opětovně připojil.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnIncomingError(Microsoft.AspNet.SignalR.Hubs.ExceptionContext,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Volá se, když metoda rozbočovače na straně serveru nebo příchozí komponenta modulu později přidaného do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> vydá nezachycenou výjimku.Dodržením výjimky pomocí této metody nezabráníme v rozšíření do dalších modulů.</summary>
      <param name="exceptionContext">Představuje výjimku, která byla vydána při volání na straně serveru.Pomocí tohoto kontextu je možné změnit chybu nebo nastavit výsledek.</param>
      <param name="invokerContext">Popis volání metody rozbočovače na straně serveru.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubRequest">
      <summary>Poskytuje metody komunikující s žádostmi o připojení SignalR, která se připojila k rozbočovači.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubRequest.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Hub">
      <summary>Získá nebo nastaví hodnotu připojení rozbočovače.</summary>
      <returns>Hodnota připojení rozbočovače.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Id">
      <summary>Získá nebo nastaví ID připojení.</summary>
      <returns>ID připojení.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Method">
      <summary>Získá nebo nastaví metodu žádosti.</summary>
      <returns>Metoda žádosti.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.ParameterValues">
      <summary>Získá nebo nastaví hodnoty parametru.</summary>
      <returns>Hodnoty parametru.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.State">
      <summary>Získá nebo nastaví aktuální stav žádosti.</summary>
      <returns>Aktuální stav žádosti.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubResponse">
      <summary>Představuje odpověď vrácenou z příchozí žádosti rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubResponse.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubResponse" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Error">
      <summary>Získá nebo nastavení výjimku, k níž dojde v důsledku volání metody rozbočovače.</summary>
      <returns>Výjimka, k níž dojde v důsledku volání metody rozbočovače.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.ErrorData">
      <summary>Dodatečné údaje o chybě obsažené v objektu <see cref="T:Microsoft.AspNet.SignalR.HubException" /></summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Id">
      <summary>Získá nebo nastaví ID operace.</summary>
      <returns>ID operace.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.IsHubException">
      <summary>Určuje, zda je parametr chyby Error <see cref="T:Microsoft.AspNet.SignalR.HubException" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Result">
      <summary>Získá nebo nastaví výsledek volání.</summary>
      <returns>Výsledek volání.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.StackTrace">
      <summary>Získá nebo nastaví trasování zásobníku pro výjimku, k níž dojde v důsledku volání metody rozbočovače.</summary>
      <returns>Trasování zásobníku pro výjimku, k níž dojde v důsledku volání metody rozbočovače.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.State">
      <summary>Získá nebo nastaví změny provedené ve stavu doby odezvy.</summary>
      <returns>Změny provedené ve stavu doby odezvy.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator">
      <summary>Vyhledá sestavení a vrátí informace o jeho modulech.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator.GetAssemblies">
      <summary>Vrátí seznam sestavení odkazovaných modulem.</summary>
      <returns>Seznam sestavení odkazovaných modulem.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection">
      <summary>Rozhraní k implementaci pomocí atributů <see cref="T:System.Attribute" />, které může klientům povolovat připojení k rozbočovači <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Na základě položky <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" /> určí, zda má klient povolení k připojení k rozbočovači <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Hodnota true, pokud má volající povoleno připojit se k rozbočovači; jinak hodnota false.</returns>
      <param name="hubDescriptor">Popis rozbočovače, ke kterému se klient pokouší připojit.</param>
      <param name="request">Žádost o připojení od klienta.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation">
      <summary>Rozhraní, které má být implementováno atributy <see cref="T:System.Attribute" /> a může povolit volání metod <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>Na základě položky <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" /> určí, zda má klient povolení k volání metody <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Hodnota true, pokud má volající povoleno volat metodu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />; jinak hodnota false.</returns>
      <param name="hubIncomingInvokerContext">Položka <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />, která poskytuje podrobnosti o volání metody <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</param>
      <param name="appliesToMethod">Udává, zda instanci rozhraní představuje atribut přímo použitý na metodu.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy">
      <summary>Proxy server na straně serveru pro rozbočovač na straně klienta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IClientProxy.Invoke(System.String,System.Object[])">
      <summary>Volá v připojeních metodu reprezentovanou instancí <see cref="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy" />.</summary>
      <returns>Úloha reprezentující čas odeslání dat klientovi.</returns>
      <param name="method">Název metody, která se má volat.</param>
      <param name="args">Argumenty, které mají být předány klientovi.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHub">
      <summary>Poskytuje rozhraní, které představuje metody komunikující s připojeními SignalR, která se připojila k rozbočovači.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Clients">
      <summary>Získá nebo nastaví klienty připojené k rozbočovači.</summary>
      <returns>Klienti připojení k rozbočovači.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Context">
      <summary>Získá nebo nastaví informace o volajícím klientovi.</summary>
      <returns>Informace o volajícím klientovi.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Groups">
      <summary>Získá nebo nastaví správce skupiny pro tuto instanci rozbočovače.</summary>
      <returns>Správce skupiny pro tuto instanci rozbočovače.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected">
      <summary>Volá se, když se připojení připojí k této instanci rozbočovače.</summary>
      <returns>Objekt úlohy představující operaci připojení.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected">
      <summary>Volá se, když se připojení odpojí od této instance rozbočovače.</summary>
      <returns>Objekt úlohy představující operaci odpojení.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected">
      <summary>Volá se, když se připojení znovu připojí k této instanci rozbočovače.</summary>
      <returns>Objekt úlohy představující operaci opětovného připojení.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubActivator">
      <summary>Poskytuje metodu pro vytvoření instance rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Vytvoří novou instanci rozbočovače.</summary>
      <returns>Nově vytvořený rozbočovač</returns>
      <param name="descriptor">Popisovač rozbočovače.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext">
      <summary>Zapouzdří všechny informace o jednom připojení SignalR pro rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Caller"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Others"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroup(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext">
      <summary>Zapouzdří všechny informace o připojení SignalR pro rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.All">
      <summary>Získá nebo nastaví všechny připojené klienty.</summary>
      <returns>Všichni připojení klienti.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.AllExcept(System.String[])">
      <summary>Vrátí dynamickou reprezentaci všech klientů s výjimkou zadaných volajících klientů.</summary>
      <returns>Dynamická reprezentace všech klientů s výjimkou zadaných volajících klientů.</returns>
      <param name="excludeConnectionIds">Seznam ID připojení, která mají být vyloučena</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Client(System.String)">
      <summary>Vrátí dynamickou reprezentaci připojení se zadaným ID připojení.</summary>
      <returns>Dynamická reprezentace zadaného klienta.</returns>
      <param name="connectionId">ID připojení</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Clients(System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Group(System.String,System.String[])">
      <summary>Vrátí dynamickou reprezentaci zadané skupiny.</summary>
      <returns>Dynamická reprezentace zadané skupiny.</returns>
      <param name="groupName">Název skupiny.</param>
      <param name="excludeConnectionIds">Seznam ID připojení, která mají být vyloučena</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Groups(System.Collections.Generic.IList{System.String},System.String[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider">
      <summary>Popisuje zprostředkovatele deskriptoru rozbočovače, který poskytuje informace o dostupných rozbočovačích.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.GetHubs">
      <summary>Načte všechny dostupné rozbočovače.</summary>
      <returns>Kolekce deskriptorů rozbočovače.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Pokusí se načíst rozbočovač se zadaným názvem.</summary>
      <returns>Hodnota true, pokud byl rozbočovač nalezen.</returns>
      <param name="hubName">Název rozbočovače.</param>
      <param name="descriptor">Načtený objekt deskriptoru.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext">
      <summary>Popis volání metody rozbočovače na straně serveru pocházejícího od klienta.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Args">
      <summary>Získá argumenty, které mají být předány volané metodě.</summary>
      <returns>Argumenty, které mají být předány volané metodě.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Hub">
      <summary>Získá instanci rozbočovače obsahující jako člena volanou metodu.</summary>
      <returns>Instance rozbočovače obsahující jako člena volanou metodu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.MethodDescriptor">
      <summary>Získá popis metody volané klientem.</summary>
      <returns>Popis metody volané klientem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.StateTracker">
      <summary>Získá úložiště dvojic klíč-hodnota reprezentující stav rozbočovače v klientovi v čase volání.</summary>
      <returns>Úložiště dvojic klíč-hodnota reprezentující stav rozbočovače v klientovi v čase volání.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubManager">
      <summary>Popisuje správce rozbočovače – hlavní bod celého rozbočovače a procesu vyhledávání metod.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHub(System.String)">
      <summary>Načte popisovač jednoho rozbočovače.</summary>
      <returns>Popisovač rozbočovače, je-li nalezen.V opačném případě hodnota null.</returns>
      <param name="hubName">Název rozbočovače.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Načte metodu s daným názvem v daném prohlížeči.</summary>
      <returns>Popisovač metody, je-li nalezen.V opačném případě hodnota null.</returns>
      <param name="hubName">Název rozbočovače.</param>
      <param name="method">Název metody k vyhledání.</param>
      <param name="parameters">Parametry metody, které se mají shodovat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Získá všechny metody dostupné pro volání v daném rozbočovači.</summary>
      <returns>Seznam dostupných metod.</returns>
      <param name="hubName">Název rozbočovače.</param>
      <param name="predicate">Volitelný predikát pro filtrování výsledků.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Získá všechny dostupné rozbočovače odpovídající danému predikátu.</summary>
      <returns>Seznam popisovačů rozbočovače.</returns>
      <param name="predicate">Predikát.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHub(System.String)">
      <summary>Přeloží daný název rozbočovače na konkrétní objekt.</summary>
      <returns>Instance implementace rozbočovače, je-li nalezena.V opačném případě hodnota null.</returns>
      <param name="hubName">Název rozbočovače.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHubs">
      <summary>Přeloží všechny dostupné rozbočovače na příslušné konkrétní objekty.</summary>
      <returns>Seznam instancí rozbočovače.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext">
      <summary>Popis volání metody rozbočovače na straně klienta pocházejícího od serveru.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Connection">
      <summary>Získá připojení <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> (pokud existuje) odpovídající klientovi, který volal metodu rozbočovače na straně serveru a nyní volá metodu rozbočovače na straně klienta.</summary>
      <returns>Připojení <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> (pokud existuje) odpovídající klientovi, který volal metodu rozbočovače na straně serveru a nyní volá metodu rozbočovače na straně klienta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.ExcludedSignals">
      <summary>Získá signály (ID připojení, název typu rozbočovače nebo název typu rozbočovače + "." + název skupiny) patřící ke klientům, kteří by bez ohledu na položku <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" /> neměli přijímat volání metody.</summary>
      <returns>Signály (ID připojení, název typu rozbočovače nebo název typu rozbočovače + "." + název skupiny) patřící ke klientům, kteří by bez ohledu na položku <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" /> neměli přijímat volání metody.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Invocation">
      <summary>Získá popis volání metody, které má být v klientovi provedeno.</summary>
      <returns>Popis volání metody, které má být v klientovi provedeno.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal">
      <summary>Získá signál (ID připojení, název typu rozbočovače nebo název typu rozbočovače + "." + název skupiny) patřící ke klientům, kteří přijímají volání metody.</summary>
      <returns>Signál (ID připojení, název typu rozbočovače nebo název typu rozbočovače + "." + název skupiny) patřící ke klientům, kteří přijímají volání metody.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signals">
      <summary>Signály (ID připojení, název typu rozbočovače nebo název typu rozbočovače + "." + název skupiny) patřící ke klientům, kteří přijímají volání metody.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline">
      <summary>Kolekce modulů, které mohou zachytávat a přizpůsobovat různé fáze zpracování v rozbočovači, jako je připojení, opětovné připojení, odpojení, volání metod rozbočovače na straně serveru, volání metod rozbočovače na straně klienta, autorizace klientů rozbočovače a opětovné připojování ke skupinám rozbočovačů.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)">
      <summary>Přidá do kanálu rozbočovače modul <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" />.Moduly přidané do kanálu jako první budou zahrnovat později přidané moduly.Před voláním metod pomocí rozhraní <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" /> je třeba do kanálu přidat všechny moduly.</summary>
      <returns>Kanál <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> s nově přidaným modulem, který umožňuje řetězit volání <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.Tato metoda mění kanál, ve kterém je volána, takže není nutné ukládat její výsledek.</returns>
      <param name="pipelineModule">Modul, který může zachytávat a přizpůsobovat různé fáze zpracování v rozbočovači, jako je připojení, opětovné připojení, odpojení, volání metod rozbočovače na straně serveru, volání metod rozbočovače na straně klienta, autorizace klientů rozbočovače a opětovné připojování ke skupinám rozbočovačů.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker">
      <summary>Implementace tohoto rozhraní slouží k provádění operací nutných k dokončení různých fází zpracování v rozbočovači, jako je připojení, opětovné připojení, odpojení, volání metod rozbočovače na straně serveru, volání metod rozbočovače na straně klienta, autorizace klientů rozbočovače a opětovné připojování ke skupinám rozbočovačů.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.AuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Volá se, než se klient přihlásí k odběru signálů patřících rozbočovači popsanému deskriptorem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Ve výchozím nastavení bude položka <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> hledat v rozbočovači <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> atributy sloužící k určení toho, zda má klient autorizaci k přihlášení k odběru volání metod pro popsaný rozbočovač.</summary>
      <returns>Hodnota true, pokud má klient autorizaci k odběru volání metod rozbočovače na straně klienta; jinak hodnota false.</returns>
      <param name="hubDescriptor">Popis rozbočovače, k němuž se klient pokouší přihlásit.</param>
      <param name="request">Žádost o připojení odeslaná klientem, která by měla obsahovat uživatele <see cref="T:System.Security.Principal.IPrincipal" /> klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Connect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Volá se, když se klient připojí k objektu <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />, pro každý rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, k němuž se klient připojí.Ve výchozím nastavení je výsledkem volání metody OnConnected rozbočovače <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, k němuž je klient připojen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Disconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Volá se, když se klient odpojí od objektu <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />, pro každý rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, k němuž se klient připojí.Ve výchozím nastavení je výsledkem volání metody OnDisconnected rozbočovače <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, od kterého byl klient odpojen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Invoke(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Volá metodu rozbočovače na straně serveru.</summary>
      <returns>Asynchronní operace poskytující návratovou hodnotu volání metody rozbočovače na straně serveru.</returns>
      <param name="context">Popis volání metody rozbočovače na straně serveru.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Reconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Volá se, když se klient opětovně připojí k objektu <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />, pro každý rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, k němuž se klient připojí.Ve výchozím nastavení je výsledkem volání metody OnReconnected rozbočovače <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, k němuž je klient opětovně připojen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.RejoiningGroups(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String})">
      <summary>Tato metoda určuje, které ze skupin patřících k rozbočovači popsanému deskriptorem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> má být klientovi povoleno se znovu připojit.Ve výchozím nastavení budou klienti, kteří se znovu připojují k serveru, odebráni ze všech skupin, jichž byli dříve členy, protože nedůvěryhodní klienti mohou předstírat členství ve skupinách, ke kterým nikdy neměli povolení se připojit.</summary>
      <returns>Seznam skupin, do nichž má klient povoleno znovu vstoupit.</returns>
      <param name="hubDescriptor">Popis rozbočovače, pro který se klient pokouší znovu vstoupit do skupin.</param>
      <param name="request">Žádost o opětovné připojení odeslaná klientem, který se pokouší znovu vstoupit do skupin.</param>
      <param name="groups">Seznam skupin patřících do příslušného rozbočovače, o kterých klient prohlašuje, že byl před opětovným připojením jejich členem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Send(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Volá metodu rozbočovače na straně klienta.</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="context">Popis volání metody rozbočovače na straně klienta.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule">
      <summary>Modul <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" /> může zachytávat a přizpůsobovat různé fáze zpracování v rozbočovači, jako je připojení, opětovné připojení, odpojení, volání metod rozbočovače na straně serveru, volání metod rozbočovače na straně klienta, autorizace klientů rozbočovače a opětovné připojování ke skupinám rozbočovačů.Moduly lze aktivovat voláním <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.Kombinované moduly přidané do kanálu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> jsou volány prostřednictvím rozhraní <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Zabalí funkci, která má být volána, než se klient přihlásí k odběru signálů patřících rozbočovači popsanému deskriptorem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Ve výchozím nastavení bude položka <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> hledat v rozbočovači <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> atributy sloužící k určení toho, zda má klient autorizaci k přihlášení k odběru volání metod pro popsaný rozbočovač.Funkce vrátí hodnotu true, pokud má klient autorizaci k odběru volání metod rozbočovače na straně klienta; jinak vrátí hodnotu false.</summary>
      <returns>Zabalená funkce, která určuje, zda má mít klient autorizaci k připojení k popsanému rozbočovači, či nikoli.</returns>
      <param name="authorizeConnect">Funkce, která určuje, zda má mít klient autorizaci k připojení k popsanému rozbočovači, či nikoli.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Zabalí funkci, která je volána, když se klient připojí k objektu <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />, pro každý rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, k němuž se klient připojí.Ve výchozím nastavení je výsledkem volání metody OnConnected rozbočovače <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Zabalená funkce, která se má volat při připojení klienta k rozbočovači.</returns>
      <param name="connect">Funkce, která se má volat při připojení klienta k rozbočovači.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Zabalí funkci, která je volána, když se klient odpojí od objektu <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />, pro každý rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, k němuž byl klient připojen.Ve výchozím nastavení je výsledkem volání metody OnDisconnected rozbočovače <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Zabalená funkce, která se má volat při odpojení klienta od rozbočovače.</returns>
      <param name="disconnect">Funkce, která se má volat při odpojení klienta od rozbočovače.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Zabalí funkci, která volá metodu rozbočovače na straně serveru.I když nemá klient autorizaci k připojení k rozbočovači, bude moci volat v daném rozbočovači metody na straně serveru, pokud mu to úloha <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> neprovedením parametru volání nezakáže.</summary>
      <returns>Zabalená funkce, která volá metodu rozbočovače na straně serveru.</returns>
      <param name="invoke">Funkce, která volá metodu rozbočovače na straně serveru.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Zabalí funkci, která volá metodu rozbočovače na straně klienta.</summary>
      <returns>Zabalená funkce, která volá metodu rozbočovače na straně klienta.</returns>
      <param name="send">Funkce, která volá metodu rozbočovače na straně klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Zabalí funkci, která je volána, když se klient znovu připojí k objektu <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />, pro každý rozbočovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, k němuž se klient připojí.Ve výchozím nastavení je výsledkem volání metody OnReconnected rozbočovače <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Zabalená funkce, která se má volat při opětovném připojení klienta k rozbočovači.</returns>
      <param name="reconnect">Funkce, která se má volat při opětovném připojení klienta k rozbočovači.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Zabalí funkci, která určuje, které ze skupin patřících k rozbočovači popsanému deskriptorem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> má být klientovi povoleno se znovu připojit.Ve výchozím nastavení budou klienti, kteří se znovu připojují k serveru, odebráni ze všech skupin, jichž byli dříve členy, protože nedůvěryhodní klienti mohou předstírat členství ve skupinách, ke kterým nikdy neměli povolení se připojit.</summary>
      <returns>Zabalená funkce určující, ke kterým skupinám má být klientovi povoleno se znovu připojit.</returns>
      <param name="rejoiningGroups">Funkce určující, ke kterým skupinám má být klientovi povoleno se znovu připojit.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser">
      <summary>Zpracovává analýzu příchozích žádostí prostřednictvím třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser.Parse(System.String,Newtonsoft.Json.JsonSerializer)">
      <summary>Analyzuje příchozí datovou část rozbočovače do žádosti <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</summary>
      <returns>Výsledná žádost <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</returns>
      <param name="data">Nezpracovaná datová část rozbočovače.</param>
      <param name="serializer">Položka JsonSerializer použitá k analýze dat.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier">
      <summary>Spojuje, minifikuje a ukládá do mezipaměti jazyk JavaScript rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier.Minify(System.String)">
      <summary>Minifikuje zadaný zdroj položky <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />.</summary>
      <returns>Zadaný zdroj položky <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />.</returns>
      <param name="source">Minifikovaný zdroj.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator">
      <summary>Generuje službu proxy serveru pro rozhraní JavaScript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Generuje proxy server pro adresu URL služby položky <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />.</summary>
      <returns>Proxy server k vygenerování adresy URL služby pro položku <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />.</returns>
      <param name="serviceUrl">Služba adresy URL.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider">
      <summary>Popisuje zprostředkovatele metody rozbočovače, který sestavuje kolekci metod dostupných v daném rozbočovači.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Načte všechny metody v daném rozbočovači.</summary>
      <returns>Dostupné metody.</returns>
      <param name="hub">Objekt deskriptoru rozbočovače.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Pokusí se načíst metodu.</summary>
      <returns>Hodnota true, pokud byla nalezena metoda.</returns>
      <param name="hub">Objekt deskriptoru rozbočovače.</param>
      <param name="method">Název metody.</param>
      <param name="descriptor">Deskriptor metody, je-li nalezen.V opačném případě hodnota null.</param>
      <param name="parameters">Parametry metody, které se mají shodovat.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IParameterResolver">
      <summary>Popisuje překladač parametrů pro překlad hodnot za účelem kontroly shody parametrů na základě zadaných informací.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Vyřeší hodnoty parametru metody na základě zadaných objektů.</summary>
      <returns>Pole hodnot parametru.</returns>
      <param name="method">Deskriptor metody.</param>
      <param name="values">Seznam hodnot, ze kterých se mají překládat hodnoty parametru.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor">
      <summary>Představuje informace o metodě jednoho rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Attributes">
      <summary>Získá nebo nastaví atributy připojené k této metodě.</summary>
      <returns>Atributy připojené k této metodě.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Hub">
      <summary>Získá objekt popisovače rozbočovače, který je cílem této metody.</summary>
      <returns>Objekt popisovače rozbočovače, který je cílem této metody.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Invoker">
      <summary>Získá nebo nastaví delegáta volání metody.K cílovému rozbočovači přiřadí jako argumenty pole argumentů volání.</summary>
      <returns>Delegát volání metody.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Parameters">
      <summary>Získá nebo nastaví dostupné parametry metody.</summary>
      <returns>Dostupné parametry metody.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.ReturnType">
      <summary>Získá nebo nastaví návratový typ této metody.</summary>
      <returns>Návratový typ této metody.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodExtensions">
      <summary>Představuje rozšíření metod pro rozbočovače SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodExtensions.Matches(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Určí, zda rozšíření metody odpovídá jinému popisovači metody.</summary>
      <returns>Hodnota true, pokud rozšíření metody odpovídá jinému popisovači metody; jinak hodnota false.</returns>
      <param name="methodDescriptor">Popisovač metody.</param>
      <param name="parameters">Seznam parametrů.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.GetInvocationData(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.Invoke(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException">
      <summary>Představuje výjimku, k níž dojde, když klient není autorizován pro připojení k rozbočovači.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> se serializovanými daty.</summary>
      <param name="info">Serializované informace o výjimce</param>
      <param name="context">Kontextové informace o zdroji nebo cíli</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> s chybovou zprávou.</summary>
      <param name="message">Zpráva týkající se výjimky.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String,System.Exception)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> s chybovou zprávou a vnitřní výjimkou.</summary>
      <param name="message">Zpráva týkající se výjimky.</param>
      <param name="inner">Chyba, která výjimku způsobila.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier">
      <summary>Představuje minifikátor pro prázdný kód Javascript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Instance">
      <summary>Určuje instanci <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Minify(System.String)">
      <summary>Minifikuje zadaný zdroj kódu Javascript.</summary>
      <returns>Minifikovaný zdroj.</returns>
      <param name="source">Zdroj k minifikaci</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor">
      <summary>Provides details about the null method.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor" /> class.</summary>
      <param name="methodName">The name for this null method.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Attributes">
      <summary>Gets or sets the attributes attached to this method.</summary>
      <returns>The attributes attached to this method.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Invoker">
      <summary>Gets or sets the method invocation delegate. Takes a target hub and an array of invocation arguments as it's arguments.</summary>
      <returns>The method invocation delegate.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Parameters">
      <summary>Gets or sets the available method parameters.</summary>
      <returns>The available method parameters.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor">
      <summary>Představuje informace o parametru metody jednoho rozbočovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.Name">
      <summary>Získá nebo nastaví název parametru.</summary>
      <returns>Název parametru.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.ParameterType">
      <summary>Získá nebo nastaví typ parametru.</summary>
      <returns>Typ parametru.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider">
      <summary>Popisuje zprostředkovatele popisovače rozbočovače a poskytuje reflektované informace o dostupných rozbočovačích.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider" />.</summary>
      <param name="resolver">Objekt <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /></param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.BuildHubsCache">
      <summary>Načte kolekci připojení k sestavení mezipaměti rozbočovače.</summary>
      <returns>Kolekce připojení k sestavení mezipaměti rozbočovače.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.GetHubs">
      <summary>Načte všechny dostupné rozbočovače. </summary>
      <returns>Kolekce dostupných rozbočovačů.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Pokusí se načíst rozbočovač se zadaným názvem.</summary>
      <returns>Hodnota true, pokud byl nalezen rozbočovač; jinak hodnota false.</returns>
      <param name="hubName">Název rozbočovače k načtení</param>
      <param name="descriptor">Po návratu metody obsahuje načtený objekt deskriptoru.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider">
      <summary>Představuje reflektovanou metodu pro zprostředkovatele popisovače.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Vrátí kolekci metod pro zprostředkovatele.</summary>
      <returns>Kolekce metod pro zprostředkovatele.</returns>
      <param name="hub">Popisovač rozbočovače.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>V zadaném rozbočovači <paramref name="hub" /> vyhledá zadanou metodu <paramref name="method" />.</summary>
      <returns>Hodnota true, pokud byla v rozbočovači nalezena metoda odpovídající sadě názvů/parametrů, jinak hodnota false.</returns>
      <param name="hub">Rozbočovač, ve kterém se má hledat zadaná metoda <paramref name="method" />.</param>
      <param name="method">Název metody, který se má hledat.</param>
      <param name="descriptor">V případě úspěchu popisovač <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" />, který byl vyřešen.</param>
      <param name="parameters">Sada parametrů, která bude použita při hledání určitého přetížení zadané metody <paramref name="method" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper">
      <summary>Pomocník pro využití metody reflexe.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetAttributeValue``2(System.Reflection.ICustomAttributeProvider,System.Func{``0,``1})">
      <summary>Získá hodnotu atributu tohoto pomocníka.</summary>
      <returns>Hodnota atributu tohoto pomocníka.</returns>
      <param name="source">Zdroj k získání hodnoty.</param>
      <param name="valueGetter">Získá hodnotu.</param>
      <typeparam name="TAttribute">Typ atributu</typeparam>
      <typeparam name="TResult">Typ výsledku</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetExportedHubMethods(System.Type)">
      <summary>Získá seznam exportovaných metod rozbočovače.</summary>
      <returns>Seznam exportovaných metod rozbočovače.</returns>
      <param name="type">Typ metod k získání.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy">
      <summary>Představuje proxy server signálu používaný rozbočovačem.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Získá data volání rozbočovače klienta přidružená k proxy serveru.</summary>
      <returns>Data volání rozbočovače klienta přidružená k proxy serveru.</returns>
      <param name="method">Metoda.</param>
      <param name="args">Argumenty</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.HubName">
      <summary>Získá nebo nastaví název rozbočovače.</summary>
      <returns>Název rozbočovače.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoke(System.String,System.Object[])">
      <summary>Vyvolá metodu a vrátí výsledky volání metody.</summary>
      <returns>Výsledek operace.</returns>
      <param name="method">Metoda k vyvolání.</param>
      <param name="args">Pole argumentu.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoker"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Signal">
      <summary>Získá nebo nastaví signál přidružený k položce <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />.</summary>
      <returns>Signál přidružený k položce <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Poskytuje implementaci pro operace, které získávají hodnoty členů.</summary>
      <returns>Hodnota true, pokud byla operace úspěšná, jinak hodnota false.</returns>
      <param name="binder">Informace o objektu, který volal dynamickou operaci.</param>
      <param name="result">Výsledek operace získání.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Poskytuje implementaci pro operace, které volají člena.</summary>
      <returns>Hodnota true, pokud byla operace úspěšná, jinak hodnota false.</returns>
      <param name="binder">Poskytuje informace o dynamické operaci.</param>
      <param name="args">Argumenty předávané členovi objektu během operace volání.</param>
      <param name="result">Výsledek volání člena.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker">
      <summary>Představuje slovník pro sledování změn.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />.</summary>
      <param name="values">Hodnota slovníku.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.GetChanges">
      <summary>Získá změny přidružené ke sledovacímu modulu.</summary>
      <returns>Změny přidružené ke sledovacímu modulu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.Item(System.String)">
      <summary>Získá nebo nastaví položku přidruženou ke sledovacímu modulu za použití zadaného klíče.</summary>
      <returns>Položka přidružená ke sledovacímu modulu za použití zadaného klíče.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy">
      <summary>Představuje proxy server stavového signálu používaný rozbočovačem.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Získá data volání rozbočovače klienta přidružená k proxy serveru.</summary>
      <returns>Data volání rozbočovače klienta přidružená k proxy serveru.</returns>
      <param name="method">Metoda.</param>
      <param name="args">Argumenty</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Poskytuje implementaci pro operace, které získávají hodnoty členů.</summary>
      <returns>Hodnota true, pokud byla operace úspěšná, jinak hodnota false.</returns>
      <param name="binder">Informace o objektu, který volal dynamickou operaci.</param>
      <param name="result">Výsledek operace získání.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Poskytuje implementaci pro operace, které nastavují hodnoty členů.</summary>
      <returns>Hodnota true, pokud byla operace úspěšná, jinak hodnota false.</returns>
      <param name="binder">Informace o objektu, který volal dynamickou operaci.</param>
      <param name="value">Výsledek operace nastavení.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.UserProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.UserProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler">
      <summary>Představuje instanci, která zpracovává sadu ACK (App Certification Kit).</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor(System.Boolean,System.TimeSpan,System.TimeSpan)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
      <param name="completeAcksOnTimeout">Hodnota true, pokud jsou objekty ACK dokončeny v časovém limitu; jinak hodnota false.</param>
      <param name="ackThreshold">Prahová hodnota objektu ACK.</param>
      <param name="ackInterval">Interval objektu ACK.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.CreateAck(System.String)">
      <summary>Vytvoří nový objekt ACK.</summary>
      <returns>Vytvořený objekt ACK.</returns>
      <param name="id">Identifikátor.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose">
      <summary>Uvolní všechny prostředky používané položkou <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose(System.Boolean)">
      <summary>Uvolní všechny prostředky používané touto instancí.</summary>
      <param name="disposing">Hodnota true slouží k uvolnění spravovaných i nespravovaných prostředků; hodnota false slouží k uvolnění pouze nespravovaných prostředků.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.TriggerAck(System.String)">
      <summary>Aktivuje zadaný objekt ACK.</summary>
      <returns>Výsledek operace.</returns>
      <param name="id">Identifikátor objektu ACK.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader">
      <summary>Představuje čtečku textu přidruženou k segmentu pole.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.#ctor(System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader" />.</summary>
      <param name="buffer">Vyrovnávací paměť segmentu pole.</param>
      <param name="encoding">Kódování</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Přečte zadaný maximální počet znaků z aktuální čtečky a tato data zapíše do vyrovnávací paměti (začne u zadaného indexu).</summary>
      <returns>Počet přečtených znaků.</returns>
      <param name="buffer">Obsahuje zadané pole znaků s hodnotami mezi indexem a nahrazenými znaky přečtenými z aktuálního zdroje.</param>
      <param name="index">Pozice ve vyrovnávací paměti, u níž se má začít zapisovat.</param>
      <param name="count">Maximální počet znaků ke čtení.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Connection">
      <summary>Obsah zde nebude aktualizován. Žádné materiály sem prosím nepřidávejte.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.#ctor(Microsoft.AspNet.SignalR.Messaging.IMessageBus,Newtonsoft.Json.JsonSerializer,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IAckHandler,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Infrastructure.IProtectedData)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.Connection" />.</summary>
      <param name="newMessageBus">Nová sběrnice zpráv</param>
      <param name="jsonSerializer">Serializátor JSON</param>
      <param name="baseSignal">Základní signál</param>
      <param name="connectionId">ID připojení.</param>
      <param name="signals">Kolekce signálů</param>
      <param name="groups">Kolekce skupin</param>
      <param name="traceManager">Správce trasování</param>
      <param name="ackHandler">Obslužná rutina ACK</param>
      <param name="performanceCounterManager">Správce čítače výkonu.</param>
      <param name="protectedData">Chráněná data.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.DefaultSignal">
      <summary>Získá hlavní signál pro toto připojení.</summary>
      <returns>Hlavní signál pro toto připojení.</returns>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyAdded">
      <summary>Nastane, když událost přidá klíč.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyRemoved">
      <summary>Nastane, když událost odebere klíč.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Identity">
      <summary>Získá vlastnost identity pro toto připojení.</summary>
      <returns>Vlastnost identity pro toto připojení</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Microsoft#AspNet#SignalR#Messaging#ISubscriber#EventKeys">
      <summary>Získá seznam objektů, ke kterým může index individuálně získávat přístup.</summary>
      <returns>Seznam objektů, ke kterým může index individuálně získávat přístup</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Obdrží odpověď na zprávu pro metodu připojení.</summary>
      <returns>Odpověď na zprávu, kterou má obdržet metoda připojení</returns>
      <param name="messageId">ID zprávy</param>
      <param name="callback">Určí, zda připojení vytváří odpověď na zpětné volání.</param>
      <param name="maxMessages">Maximální počet zpráv</param>
      <param name="state">Stav připojení</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Odešle zprávu do jednoho či více připojení.</summary>
      <returns>Zpráva odeslaná do jednoho či více připojení.</returns>
      <param name="message">Připojení, kterým byla odeslána zpráva</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Subscription">
      <summary>Získá nebo nastaví odběr pro tuto vlastnost připojení.</summary>
      <returns>Odběr pro tuto vlastnost připojení</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.WriteCursor">
      <summary>Získá nebo nastaví kurzor pro zápis sekvenčních řad znaků.</summary>
      <returns>Kurzor pro zápis sekvenčních řad znaků</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager">
      <summary>Poskytuje výchozí implementaci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager" />.</summary>
      <param name="resolver">Objekt <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /></param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnection(System.Type)">
      <summary>Vrátí položku <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> pro objekt <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Položka <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> pro daný objekt <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="type">Typ připojení <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnectionContext``1">
      <summary>Vrátí položku <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> pro objekt <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Položka <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> pro daný objekt <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <typeparam name="T">Typ připojení <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext``1">
      <summary>Vrátí kontext rozbočovače pro toto připojení.</summary>
      <returns>Kontext rozbočovače pro toto připojení.</returns>
      <typeparam name="T">Typ rozbočovače.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext(System.String)">
      <summary>Vrátí kontext rozbočovače pro toto připojení se zadaným názvem.</summary>
      <returns>Kontext rozbočovače pro toto připojení.</returns>
      <param name="hubName">Název rozbočovače.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData">
      <summary>Poskytuje metody ochrany dat.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.#ctor(Microsoft.Owin.Security.DataProtection.IDataProtectionProvider)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData" />.</summary>
      <param name="provider">Zprostředkovatel ochrany dat</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Protect(System.String,System.String)">
      <summary>Chrání zadaná data.</summary>
      <returns>Chráněná data.</returns>
      <param name="data">Data určená k ochraně.</param>
      <param name="purpose">Účel ochrany.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Unprotect(System.String,System.String)">
      <summary>Zruší ochranu zadaných dat.</summary>
      <returns>Data, která již nejsou chráněna.</returns>
      <param name="protectedValue">Chráněná data.</param>
      <param name="purpose">Účel ochrany.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData">
      <summary>Poskytuje metody ochrany dat.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Protect(System.String,System.String)">
      <summary>Chrání zadaná data.</summary>
      <returns>Chráněná data.</returns>
      <param name="data">Data určená k ochraně.</param>
      <param name="purpose">Účel ochrany.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Unprotect(System.String,System.String)">
      <summary>Zruší ochranu zadaných dat.</summary>
      <returns>Data, která již nejsou chráněna.</returns>
      <param name="protectedValue">Chráněná data.</param>
      <param name="purpose">Účel ochrany.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler">
      <summary>Poskytuje rozhraní představující instanci, která zpracovává sadu ACK (App Certification Kit).</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.CreateAck(System.String)">
      <summary>Vytvoří nový objekt ACK.</summary>
      <returns>Vytvořený objekt ACK.</returns>
      <param name="id">Identifikátor.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.TriggerAck(System.String)">
      <summary>Aktivuje zadaný objekt ACK.</summary>
      <returns>Výsledek operace.</returns>
      <param name="id">Identifikátor objektu ACK.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter">
      <summary>Represents the base interface for class that has the ability to write raw binary data.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter.Write(System.ArraySegment{System.Byte})">
      <summary>Writes raw binary data to underlying stream.</summary>
      <param name="data">The raw binary data to write.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager">
      <summary>Poskytuje přístup k rozbočovačům a trvalým připojením a odkazům.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetConnectionContext``1">
      <summary>Vrátí položku <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> pro objekt <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Položka <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> pro daný objekt <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <typeparam name="T">Typ připojení <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext``1">
      <summary>Vrátí informace o rozbočovači přidružené k připojení.</summary>
      <returns>Informace o rozbočovači přidružené k připojení.</returns>
      <typeparam name="T">Typ rozbočovače.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext(System.String)">
      <summary>Vrátí informace o rozbočovači přidružené k připojení.</summary>
      <returns>Informace o rozbočovači přidružené k připojení.</returns>
      <param name="hubName">Název rozbočovače.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper">
      <summary>Představuje obslužnou rutinu pro atomické operací pro proměnné, které jsou sdíleny více vlákny.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper.CompareExchangeOr(System.Int32@,System.Int32,System.Int32,System.Int32)">
      <summary>Porovná dva objekty z hlediska referenční rovnosti a to, zda jsou stejné.</summary>
      <returns>Hodnota true, pokud jsou oba objekty stejné, jinak hodnota false</returns>
      <param name="location">Cílový objekt, který je porovnáván s operandem porovnávání a případně narhazen</param>
      <param name="value">Objekt, který nahrazuje cílový objekt, pokud je výsledkem porovnání rovnost</param>
      <param name="comparandA">První operand porovnávání</param>
      <param name="comparandB">Druhý operand porovnávání</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter">
      <summary>Obsah zde nebude aktualizován. Žádné materiály sem prosím nepřidávejte.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Close">
      <summary>Zavře čítač výkonu a uvolní všechny prostředky přidělené této instanci čítače výkonu.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.CounterName"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Decrement">
      <summary>Sníží hodnotu přidružených čítačů výkonu o jedna prostřednictvím efektivní atomické operace.</summary>
      <returns>Snížená hodnota čítače</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Increment">
      <summary>Zvýší hodnotu přidružených čítačů výkonu o jedna prostřednictvím efektivní atomické operace.</summary>
      <returns>Zvýšená hodnota čítače</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.IncrementBy(System.Int64)">
      <summary>Zvýší nebo sníží hodnotu přidružených čítačů výkonu o určenou hodnotu prostřednictvím efektivní atomické operace.</summary>
      <returns>Nová hodnota čítače</returns>
      <param name="value">Hodnota přírůstku</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.NextSample">
      <summary>Získá ukázku čítače a vrátí jeho nezpracovanou nebo nevypočítanou hodnotu.</summary>
      <returns>Ukázka čítače; vrátí jeho nezpracovanou nebo nevypočítanou hodnotu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RawValue">
      <summary>Získá nebo nastaví nezpracovanou nebo nevypočítanou hodnotu tohoto čítače.</summary>
      <returns>Nezpracovaná hodnota čítače</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RemoveInstance">
      <summary>Odstraní instanci kategorie určenou vlastností InstanceName objektu PerformanceCounter. </summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager">
      <summary>Poskytuje přístup k čítačům výkonu.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Získá čítač výkonu reprezentující počet zpráv, který připojení (serveru ke klientovi) přijmou za jednu sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet zpráv, který připojení (serveru ke klientovi) přijmou od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Získá čítač výkonu reprezentující počet zpráv, který připojení (klienta k serveru) odešlou za jednu sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet zpráv, který připojení (klienta k serveru) odešlou od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsConnected">
      <summary>Získá čítač výkonu reprezentující celkový počet událostí Connect daného připojení od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsCurrent">
      <summary>Získá čítač výkonu reprezentující počet aktuálně připojených připojení.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsDisconnected">
      <summary>Získá čítač výkonu reprezentující celkový počet událostí Disconnect daného připojení od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsReconnected">
      <summary>Získá čítač výkonu reprezentující celkový počet událostí Reconnect daného připojení od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllPerSec">
      <summary>Získá čítač výkonu reprezentující počet všech chyb zpracovaných za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet všech chyb od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Získá čítač výkonu reprezentující počet chyb volání rozbočovače za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet chyb volání rozbočovače zpracovaných od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Získá čítač výkonu reprezentující počet chyb překladu rozbočovače za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet chyb překladu rozbočovače zpracovaných od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Získá čítač výkonu reprezentující počet chyb přenosu za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet chyb přenosu zpracovaných od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Inicializuje čítače výkonu.</summary>
      <param name="instanceName">Název instance hostitele.</param>
      <param name="hostShutdownToken">Token zrušení reprezentující ukončení hostitele.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Načte čítač výkonu.</summary>
      <param name="categoryName">Název kategorie.</param>
      <param name="counterName">Název čítače.</param>
      <param name="instanceName">Název instance.</param>
      <param name="isReadOnly">Určuje, zda je čítač pouze pro čtení.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Získá čítač výkonu reprezentující počet pracovních procesů přidělených pro doručování zpráv ve sběrnici zpráv.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Získá čítač výkonu reprezentující počet pracovních procesů, které jsou v současné době zaneprázdněny doručováním zpráv ve sběrnici zpráv.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Získá čítač výkonu reprezentující počet zpráv publikovaných do sběrnice zpráv za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet zpráv publikovaných do sběrnice zpráv od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Získá čítač výkonu představující počet zpráv přijatých odběrateli za jednu sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Získá čítač výkonu představující celkový počet zpráv přijatých odběrateli od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Získá čítač výkonu reprezentující aktuální počet přihlášení k odběru sběrnice zpráv.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Získá čítač výkonu reprezentující počet nových přihlášení k odběru sběrnice zpráv za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet přihlášení k odběru sběrnice zpráv od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Získá čítač výkonu reprezentující aktuální počet témat ve sběrnici zpráv.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Získá čítač výkonu představující počet chyb škálování za jednu sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Získá čítač výkonu představující celkový počet chyb škálování od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Získá čítač výkonu představující počet zpráv přijatých do sběrnice zpráv o škálování za jednu sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Získá čítač výkonu představující aktuální délku fronty odesílání dat o škálování.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Získá čítač výkonu představující počet logických datových proudů u aktuálně konfigurovaného zprostředkovatele sběrnice zpráv o škálování, které jsou ukládány do vyrovnávací paměti.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Získá čítač výkonu představující počet logických datových proudů u aktuálně konfigurovaného zprostředkovatele sběrnice zpráv o škálování, které jsou v otevřeném stavu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Získá čítač výkonu představující počet logických datových proudů u aktuálně konfigurovaného zprostředkovatele sběrnice zpráv o škálování.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData">
      <summary>Představuje rozhraní poskytující metody šifrování a dešifrování dat přidružených k infrastruktuře SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Protect(System.String,System.String)">
      <summary>Chrání zadaná data.</summary>
      <returns>Chráněná data.</returns>
      <param name="data">Data určená k ochraně.</param>
      <param name="purpose">Účel ochrany.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Unprotect(System.String,System.String)">
      <summary>Zruší ochranu určitých dat.</summary>
      <returns>Data, která již nejsou chráněna.</returns>
      <param name="protectedValue">Chráněná hodnota, u níž má být zrušena ochrana.</param>
      <param name="purpose">Důvod zrušení ochrany.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager">
      <summary>Vygeneruje ID serveru.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager.ServerId">
      <summary>ID serveru.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier">
      <summary>Poskytuje rozhraní představující třídu, která snižuje velikost řetězce.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)">
      <summary>Minifikuje řetězec tak, aby jej tato instance objektu <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> mohla vrátit.</summary>
      <returns>Minifikovaná reprezentace hodnoty <paramref name="value" /> bez následujících znaků: ,|\</returns>
      <param name="value">Řetězec k minifikaci.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)">
      <summary>Volání této funkce znamená, že všechny budoucí pokusy o zrušení minifikace řetězců, které byly minifikovány z hodnoty <paramref name="value" />, se mohou setkat s návratovou hodnotou null.To představuje příležitost k vymazání interních datových struktur odkazujících na hodnotu <paramref name="value" />.</summary>
      <param name="value">Řetězec, který mohl být dříve minifikován.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)">
      <summary>Vrátí volání <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, které bylo v této instanci <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> minimálně jednou provedeno bez následných volání funkce <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> sdílející stejný argument jako volání <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, které vrátilo hodnotu <paramref name="value" />.</summary>
      <returns>Argument všech předchozích volání funkce <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, která vrátila hodnotu <paramref name="value" />.Pokud žádné z volání funkce <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> v této instanci <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> nikdy nevrátilo hodnotu <paramref name="value" /> nebo pokud po posledním volání funkce <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, které vrátilo hodnotu <paramref name="value" />, následovalo volání funkce <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> sdílející stejný argument, funkce <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)" /> může vrátit hodnotu null, ale ne generovat výjimku.</returns>
      <param name="value">Minifikovaný řetězec, který byl vrácen předchozím voláním funkce <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager">
      <summary>Spravuje čítače výkonu pomocí čítačů výkonu systému Windows.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.DefaultDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
      <param name="resolver">Výchozí překladač závislostí</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.CategoryName">
      <summary>Určuje název kategorie čítačů výkonu pro tento čítač výkonu.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Získá čítač výkonu reprezentující počet zpráv, který připojení (serveru ke klientovi) přijmou za jednu sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet zpráv, který připojení (serveru ke klientovi) přijmou od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Získá čítač výkonu reprezentující počet zpráv, který připojení (klienta k serveru) odešlou za jednu sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet zpráv, který připojení (klienta k serveru) odešlou od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsConnected">
      <summary>Získá čítač výkonu reprezentující celkový počet událostí Connect daného připojení od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsCurrent">
      <summary>Získá čítač výkonu reprezentující počet aktuálně připojených připojení.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsDisconnected">
      <summary>Získá čítač výkonu reprezentující celkový počet událostí Disconnect daného připojení od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsReconnected">
      <summary>Získá čítač výkonu reprezentující celkový počet událostí Reconnect daného připojení od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllPerSec">
      <summary>Získá čítač výkonu reprezentující počet všech chyb zpracovaných za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet všech chyb od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Získá čítač výkonu reprezentující počet chyb volání rozbočovače za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet chyb volání rozbočovače zpracovaných od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Získá čítač výkonu reprezentující počet chyb překladu rozbočovače za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet chyb překladu rozbočovače zpracovaných od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Získá čítač výkonu reprezentující počet chyb přenosu za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet chyb přenosu zpracovaných od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Inicializuje čítače výkonu.</summary>
      <param name="instanceName">Název instance hostitele.</param>
      <param name="hostShutdownToken">Token zrušení reprezentující ukončení hostitele.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Načte čítač výkonu.</summary>
      <param name="categoryName">Název kategorie.</param>
      <param name="counterName">Název čítače.</param>
      <param name="instanceName">Název instance</param>
      <param name="isReadOnly">Hodnota true, pokud se jedná o čítač jen pro čtení, jinak hodnota false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Získá čítač výkonu reprezentující počet pracovních procesů přidělených pro doručování zpráv ve sběrnici zpráv.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Získá čítač výkonu reprezentující počet pracovních procesů, které jsou v současné době zaneprázdněny doručováním zpráv ve sběrnici zpráv.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Získá čítač výkonu reprezentující počet zpráv publikovaných do sběrnice zpráv za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet zpráv publikovaných do sběrnice zpráv od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Získá čítač výkonu představující počet zpráv přijatých odběrateli za jednu sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Získá čítač výkonu představující celkový počet zpráv přijatých odběrateli od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Získá čítač výkonu reprezentující aktuální počet přihlášení k odběru sběrnice zpráv.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Získá čítač výkonu reprezentující počet nových přihlášení k odběru sběrnice zpráv za sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Získá čítač výkonu reprezentující celkový počet přihlášení k odběru sběrnice zpráv od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Získá čítač výkonu reprezentující aktuální počet témat ve sběrnici zpráv.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Získá čítač výkonu představující počet chyb škálování za jednu sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Získá čítač výkonu představující celkový počet chyb škálování od spuštění aplikace.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Získá čítač výkonu představující počet zpráv přijatých do sběrnice zpráv o škálování za jednu sekundu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Získá čítač výkonu představující aktuální délku fronty odesílání dat o škálování.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Získá čítač výkonu představující počet logických datových proudů u aktuálně konfigurovaného zprostředkovatele sběrnice zpráv o škálování, které jsou ukládány do vyrovnávací paměti.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Získá čítač výkonu představující počet logických datových proudů u aktuálně konfigurovaného zprostředkovatele sběrnice zpráv o škálování, které jsou v otevřeném stavu.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Získá čítač výkonu představující počet logických datových proudů u aktuálně konfigurovaného zprostředkovatele sběrnice zpráv o škálování.</summary>
      <returns>Vrací objekt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver">
      <summary>Provides method for resolving protocol.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor(System.Version,System.Version)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
      <param name="min">The minimum version of the protocol to resolve.</param>
      <param name="max">The maximum version of the protocol to resolve.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.Resolve(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Resolves the protocol in the specified SignalR request.</summary>
      <param name="request">The request to resolve.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Purposes">
      <summary>Určuje konstanty účelů.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.ConnectionToken">
      <summary>Konstanta ConnectionToken</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.Groups">
      <summary>Konstanta Groups</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType">
      <summary>Určuje příkazy serveru.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType.RemoveConnection">
      <summary>Příkaz RemoveConnection</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager">
      <summary>Výchozí implementace třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.ServerId">
      <summary>Získá nebo nastaví ID serveru.</summary>
      <returns>ID serveru.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonValue">
      <summary>Reprezentuje hodnotu formátu JSON.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.CanConvertTo(System.Type)">
      <summary>Převede hodnotu parametru na zadaný typ <see cref="T:System.Type" />.</summary>
      <returns>Převedená hodnota parametru.</returns>
      <param name="type">Typ <see cref="T:System.Type" />, na který má být parametr převeden.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.ConvertTo(System.Type)">
      <summary>Převede hodnotu parametru na zadaný typ <see cref="T:System.Type" />.</summary>
      <returns>Převedená hodnota parametru.</returns>
      <param name="type">Typ <see cref="T:System.Type" />, na který má být parametr převeden.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonWritable">
      <summary>Implementace samy zpracovávají svoji serializaci do formátu JSON.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonWritable.WriteJson(System.IO.TextWriter)">
      <summary>Probíhá vlastní serializace do formátu JSON prostřednictvím třídy <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Třída <see cref="T:System.IO.TextWriter" />, která přijme serializovaný objekt ve formátu JSON.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions">
      <summary> Rozšíření pro třídu <see cref="T:Newtonsoft.Json.JsonSerializer" />. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Deserializuje formát JSON na objekt .NET.</summary>
      <returns>Deserializovaný objekt z řetězce formátu JSON.</returns>
      <param name="serializer">Serializátor.</param>
      <param name="jsonBuffer">Vyrovnávací paměť JSON k deserializaci.</param>
      <param name="encoding">Kódování určené k použití.</param>
      <typeparam name="T">Typ <see cref="T:System.Type" /> deserializovaného objektu.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.String)">
      <summary>Deserializuje formát JSON na objekt .NET.</summary>
      <returns>Deserializovaný objekt z řetězce formátu JSON.</returns>
      <param name="serializer">Serializátor.</param>
      <param name="json">Formát JSON k deserializaci.</param>
      <typeparam name="T">Typ <see cref="T:System.Type" /> deserializovaného objektu.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Serialize(Newtonsoft.Json.JsonSerializer,System.Object,System.IO.TextWriter)">
      <summary>Serializuje zadaný objekt do třídy <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="serializer">Serializátor JSON.</param>
      <param name="value">Objekt určený k serializaci.</param>
      <param name="writer">Třída <see cref="T:System.IO.TextWriter" />, do které má být objekt serializován.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Stringify(Newtonsoft.Json.JsonSerializer,System.Object)">
      <summary>Serializuje zadaný objekt na řetězec formátu JSON.</summary>
      <returns>Reprezentace objektu ve formě řetězce formátu JSON.</returns>
      <param name="serializer">Serializátor.</param>
      <param name="value">Objekt určený k serializaci.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonUtility">
      <summary> Pomocná třída pro běžné operace formátu JSON. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CamelCase(System.String)">
      <summary>Převede zadaný název na formát CamelCase.</summary>
      <returns>Hodnota zadané položky <paramref name="name" /> ve formátu CamelCase</returns>
      <param name="name">Hodnota, která má být převedena</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializer">
      <summary>Vytvoří instanci <see cref="T:Newtonsoft.Json.JsonSerializer" /> s výchozím nastavením.</summary>
      <returns>Nově vytvořená položka <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializerSettings">
      <summary>Vytvoří výchozí instanci <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />.</summary>
      <returns>Nově vytvořená položka <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateJsonpCallback(System.String,System.String)">
      <summary>Vytvoří zpětné volání JSONP.</summary>
      <returns>Řetězec <see cref="T:System.String" /> představující zpětné volání</returns>
      <param name="callback">Zpětné volání, které má být vytvořeno</param>
      <param name="payload">Datová část</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JavaScriptMimeType">
      <summary>Získá typ MIME pro jazyk Javascript.</summary>
      <returns>Typ MIME pro jazyk Javascript</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JsonMimeType">
      <summary>Získá typ MIME tohoto obslužného nástroje JSON.</summary>
      <returns>Typ MIME tohoto obslužného nástroje JSON</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Command">
      <summary>Představuje příkazy používané pro zasílání zpráv SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Command.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.Command" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.CommandType">
      <summary>Získá nebo nastaví typ příkazů.</summary>
      <returns>Typ příkazů.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Id">
      <summary>Získá nebo nastaví identifikátor příkazu.</summary>
      <returns>Identifikátor příkazu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Value">
      <summary>Získá nebo nastaví hodnotu příkazu.</summary>
      <returns>Hodnota příkazu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.WaitForAck">
      <summary>Získá nebo nastaví hodnotu určující, zda příkaz bude čekat před spuštěním na certifikaci.</summary>
      <returns>Hodnota true, pokud příkaz bude čekat před spuštěním na certifikaci; jinak hodnota false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.CommandType">
      <summary>Podává výčet příkazů pro zprávy o připojení.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Abort">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.AddToGroup">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Disconnect">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Initializing">
      <summary>Určuje příkaz pro inicializaci připojení.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.RemoveFromGroup">
      <summary />
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.IMessageBus">
      <summary>Poskytuje metody používané k publikování a odběru zpráv ze sběrnice zpráv SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Určí odběr tématu pro odběratele na sběrnici zpráv.</summary>
      <returns>Stav odběru</returns>
      <param name="subscriber">Odběratel</param>
      <param name="cursor">Kurzor čtení, který určuje práci pro odběr</param>
      <param name="callback">Funkce zpětného volání.</param>
      <param name="maxMessages">Velikost vyrovnávací paměti zpráv</param>
      <param name="state">Stav operace zpětného volání</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscriber">
      <summary>Poskytuje podrobnosti o odběrateli sběrnice zpráv SignalR.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyAdded"></member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyRemoved"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Identity"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Subscription">
      <summary>Získá nebo nastaví odběr.</summary>
      <returns>Odběr</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.WriteCursor">
      <summary>Získá nebo nastaví kurzor zápisu.</summary>
      <returns>Kurzor zápisu</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscription">
      <summary>Poskytuje metody k provedení práce a řízení stavu odběru.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscription.Identity">
      <summary>Získá nebo nastaví identitu odběru.</summary>
      <returns>Identita odběru</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.SetQueued">
      <summary>Nastaví odběr do pracovního stavu.</summary>
      <returns>Hodnota true, pokud byl odběr nastaven do pracovního stavu; jinak hodnota false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.UnsetQueued">
      <summary>Nastaví odběr do nečinného stavu.</summary>
      <returns>Hodnota true, pokud byl odběr nastaven do nečinného stavu; jinak hodnota false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.Work">
      <summary>Provede práci na zprávě odebírané pomocí tohoto odběru.</summary>
      <returns>Úloha představující operaci s odebíranou zprávou</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo">
      <summary>Obsah zde nebude aktualizován. Žádné materiály sem prosím nepřidávejte.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.#ctor(System.String,System.UInt64,Microsoft.AspNet.SignalR.Messaging.MessageStore{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo" />.</summary>
      <param name="key">Klíč přidružený k místní události</param>
      <param name="id">Identifikátor přidružený k informacím o klíči</param>
      <param name="store">Úložiště zpráv přidružené ke klíči místní události</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Id">
      <summary>Získá nebo nastaví identifikátor přidružený k informacím o klíči.</summary>
      <returns>Identifikátor přidružený k informacím o klíči</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Key">
      <summary>Získá nebo nastaví klíč přidružený k místní události.</summary>
      <returns>Klíč přidružený k místní události</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.MessageStore">
      <summary>Získá zprávu pro klíč.</summary>
      <returns>Zpráva pro klíč</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Message">
      <summary>Obsah zde nebude aktualizován. Žádné materiály sem prosím nepřidávejte.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.ArraySegment{System.Byte})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />.</summary>
      <param name="source">Zdroj zprávy</param>
      <param name="key">Klíčová zpráva</param>
      <param name="value">Hodnota zprávy</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.CommandId">
      <summary>Získá nebo nastaví identifikátor příkazu zprávy.</summary>
      <returns>Identifikátor příkazu zprávy</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Encoding">
      <summary>Kódování zprávy.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Filter">
      <summary>Získá nebo nastaví filtr zpráv.</summary>
      <returns>Filtr zpráv</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.GetString"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsAck">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda zpráva je zprávou potvrzení.</summary>
      <returns>Hodnota true, pokud zpráva je zprávou potvrzení, jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsCommand">
      <summary>Získá hodnotu, která určuje, zda je zpráva je zprávou příkazu.</summary>
      <returns>Hodnota true, pokud zpráva je zprávou příkazu, jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Key">
      <summary>Získá nebo nastaví klíč pro zprávu.</summary>
      <returns>Klíč pro zprávu</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.MappingId">
      <summary>ID datové části.Používá se jen pro scénáře škálování.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.ReadFrom(System.IO.Stream)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Source">
      <summary>Získá nebo nastaví zdroj zprávy.</summary>
      <returns>Zdroj zprávy</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.StreamIndex">
      <summary>Index datového proudu, ze kterého přišla tato zpráva.Používá se jen pro scénáře škálování.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Value">
      <summary>Získá nebo nastaví hodnotu zprávy.</summary>
      <returns>Hodnota zprávy</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.WaitForAck">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda zpráva čeká na potvrzení.</summary>
      <returns>Hodnota true, pokud zpráva čeká na potvrzení, jinak hodnota false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.WriteTo(System.IO.Stream)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker">
      <summary>Plánuje práci, kterou je třeba udělat pro určitý odběr, a má algoritmus pro výběr počtu pracovních procesů (podprocesy z fondu podprocesů) zpracovávajících naplánovanou práci.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
      <param name="performanceCounterManager">Správce čítače výkonu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose">
      <summary>Uvolní všechny prostředky používané položkou <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose(System.Boolean)">
      <summary>Uvolní všechny prostředky používané položkou <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
      <param name="disposing">Hodnota true slouží k uvolnění spravovaných i nespravovaných prostředků; hodnota false slouží k uvolnění pouze nespravovaných prostředků.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Schedule(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Naplánuje práci pro zadaný odběr.</summary>
      <param name="subscription">Odběr k naplánování.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Trace">
      <summary>Získá nebo nastaví zdroj trasování zprostředkovatele.</summary>
      <returns>Zdroj trasování zprostředkovatele.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBus">
      <summary>Představuje sběrnici zpráv pro funkci SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager,System.Int32)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Counters"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Vytvoří nový odběr pro odběratele.</summary>
      <returns>Nově vytvořený odběr</returns>
      <param name="subscriber">Odběratel</param>
      <param name="cursor">Kurzor čtení, který určuje práci pro odběr</param>
      <param name="callback">Funkce zpětného volání.</param>
      <param name="messageBufferSize">Velikost vyrovnávací paměti zpráv</param>
      <param name="state">Stav operace zpětného volání</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateTopic(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Save(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.ScheduleEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Určí odběr tématu pro odběratele na sběrnici zpráv.</summary>
      <returns>Stav odběru</returns>
      <param name="subscriber">Odběratel</param>
      <param name="cursor">Kurzor čtení, který určuje práci pro odběr</param>
      <param name="callback">Funkce zpětného volání.</param>
      <param name="maxMessages">Velikost vyrovnávací paměti zpráv</param>
      <param name="state">Stav operace zpětného volání</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Topics"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Trace">
      <summary>Získá zdroj trasování použitý k trasování provádění kódu.</summary>
      <returns>Zdroj trasování použitý k trasování provádění kódu</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions">
      <summary>Poskytuje metody rozšíření pro sběrnici zpráv SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Action{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate``1(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{``0,Microsoft.AspNet.SignalR.Messaging.Message},``0)">
      <summary>Podává výčet zpráv.</summary>
      <param name="messages">Seznam obsahující zprávy pro výčet</param>
      <param name="filter">Metoda, která filtruje zprávu ve výčtu</param>
      <param name="onMessage">Metoda, která zpracovává všechny zprávy ve výčtu</param>
      <param name="state">Objekt představující stav operace</param>
      <typeparam name="T">Typ parametru <paramref name="state" /></typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Publish(Microsoft.AspNet.SignalR.Messaging.IMessageBus,System.String,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageResult">
      <summary>Představuje výsledek zprávy.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</summary>
      <param name="terminal">Hodnota true, pokud se jedná o konečný výsledek zprávy, jinak hodnota false.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</summary>
      <param name="messages">Pole zpráv přidružených k této struktuře <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</param>
      <param name="totalCount">Množství zpráv vložené do pole zpráv.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Messages">
      <summary>Získá objekt <see cref="T:System.Collections.Generic.IList`1" />, který je přidružen k výsledku.</summary>
      <returns>Objekt <see cref="T:System.Collections.Generic.IList`1" />, který je přidružen k výsledku</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Terminal">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda se jedná o konečný výsledek zprávy.</summary>
      <returns>Hodnota true, pokud se jedná o konečný výsledek zprávy, jinak hodnota false.</returns>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.MessageResult.TerminalMessage">
      <summary>Určuje, zda se jedná o konečný výsledek zprávy.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.TotalCount">
      <summary>Získá nebo nastaví množství zpráv vložené do pole zpráv.</summary>
      <returns>Množství zpráv vložené do pole zpráv.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1">
      <summary>Představuje úložiště zpráv, které je založeno na cyklické vyrovnávací paměti.</summary>
      <typeparam name="T">Typ elementů v úložišti</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" /> se zadanou kapacitou.</summary>
      <param name="capacity">Minimální kapacita úložiště</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32,System.UInt32)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" />.</summary>
      <param name="capacity">Minimální kapacita úložiště</param>
      <param name="offset">Posun první zprávy v úložišti</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.Add(`0)">
      <summary>Přidá zprávu do úložiště a vrátí ID nově přidané zprávy.</summary>
      <returns>ID nově přidané zprávy</returns>
      <param name="message">Zpráva, která má být přidána</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessageCount">
      <summary>Získá počet zpráv v úložišti.</summary>
      <returns>Počet zpráv v úložišti</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessages(System.UInt64,System.Int32)">
      <summary>Získá další dávku zpráv začínající určeným ID. </summary>
      <returns>Další dávka zpráv</returns>
      <param name="firstMessageId">ID první zprávy</param>
      <param name="maxMessages">Maximální počet vrácených zpráv</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1">
      <summary>Představuje výsledek přidružený k úložišti zpráv.</summary>
      <typeparam name="T">Typ výsledku</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.#ctor(System.UInt64,System.ArraySegment{`0},System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1" />.</summary>
      <param name="firstMessageId">Identifikátor první zprávy.</param>
      <param name="messages">Zpráva přidružená k výsledku.</param>
      <param name="hasMoreData">Hodnota true, pokud výsledek obsahuje více dat; jinak hodnota false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.FirstMessageId">
      <summary>Získá identifikátor první zprávy.</summary>
      <returns>Identifikátor první zprávy.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.HasMoreData">
      <summary>Zjistí, zda výsledek obsahuje více dat.</summary>
      <returns>Hodnota true, pokud výsledek obsahuje více dat; jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.Messages">
      <summary>Získá zprávu přidruženou k výsledku.</summary>
      <returns>Zpráva přidružená k výsledku.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration">
      <summary>Představuje obecné nastavení pro implementace sběrnice zpráv o škálování.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.DisableQueuing">
      <summary>Řazení do fronty je aktuálně zakázáno.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.MaxQueueLength">
      <summary>Získá nebo nastaví maximální délku fronty odchozích dat k odeslání.</summary>
      <returns>Maximální délka fronty odchozích dat k odeslání.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping">
      <summary>Obsah zde nebude aktualizován. Žádné materiály sem prosím nepřidávejte.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.Id"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.LocalKeyInfo"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.ServerCreationTime"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore">
      <summary>Represents a scale out mapping store on SignalR messaging.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.Add(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})">
      <summary>Adds a new scaleout mapping store.</summary>
      <param name="id">The identifier.</param>
      <param name="message">The message.</param>
      <param name="localKeyInfo">The local key information.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.GetEnumerator(System.UInt64)">
      <summary>Gets the enumerator for the mapping store.</summary>
      <returns>The enumerator for the mapping store.</returns>
      <param name="id">The identifier.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.MaxMapping">
      <summary>Gets the maximum numbers of mapping for this instance.</summary>
      <returns>The maximum numbers of mapping for this instance.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage">
      <summary>Represents a message to the scaleout backplane.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
      <param name="messages">The messages from SignalR.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.FromBytes(System.Byte[])">
      <summary>Creates a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class from the specified data in bytes.</summary>
      <returns>The created instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" />.</returns>
      <param name="data">The data in bytes.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.Messages">
      <summary>Gets or sets the messages from SignalR.</summary>
      <returns>The messages from SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ServerCreationTime">
      <summary>Gets or sets the time the message was created on the origin server.</summary>
      <returns>The time the message was created on the origin server.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ToBytes">
      <summary>Converts a <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</summary>
      <returns>The converted <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus">
      <summary>Představuje obecnou základní třídu pro implementace sběrnice zpráv horizontálního škálování.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Close(System.Int32)">
      <param name="streamIndex">Index datového proudu k zavření.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnError(System.Int32,System.Exception)">
      <summary>Zavře určitou frontu pro odesílání zpráv, takže všechna odesílání asynchronně selžou.</summary>
      <param name="streamIndex">Index datového proudu k zavření.</param>
      <param name="exception">Chyba, k níž došlo.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnReceived(System.Int32,System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)">
      <summary>Volá se při přijetí datové části z propojovacího rozhraní.V každé chvíli by mělo být aktivní pouze jedno volání.</summary>
      <param name="streamIndex">ID datového proudu.</param>
      <param name="id">ID datové části v rámci tohoto datového proudu.</param>
      <param name="message">Zpráva o škálování.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Open(System.Int32)">
      <param name="streamIndex">Index datového proudu k otevření</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)">
      <summary>Publikuje zprávu ze sběrnice zpráv horizontálního škálování.</summary>
      <returns>Úloha představující operaci publikování zprávy</returns>
      <param name="message">Zpráva, která se má publikovat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Odešle zprávy ze sběrnice zpráv horizontálního škálování SignalR.</summary>
      <returns>Úloha představující operaci odeslání zprávy</returns>
      <param name="messages">Zprávy, které mají být odeslány</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Int32,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.StreamCount">
      <summary>Počet datových proudů se po dobu trvání této instance nemůže změnit.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore">
      <summary>Represents a message store that is backed by a ring buffer.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.#ctor(System.UInt32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore" /> class.</summary>
      <param name="capacity">The minimum capacity of the store.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.Add(Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping)">
      <summary>Adds a message to the store and returns the ID of the newly added message.</summary>
      <returns>The ID of the newly added message.</returns>
      <param name="mapping">The mapping used in the store.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentCount">
      <summary>Gets or sets the number of message fragments in the store.</summary>
      <returns>The number of message fragments.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentSize">
      <summary>Gets or sets the size of the message fragment.</summary>
      <returns>The size of the message fragment.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessages(System.UInt64)">
      <summary>Gets the next batch of messages, beginning with the specified ID. </summary>
      <returns>The next batch of messages.</returns>
      <param name="firstMessageIdRequestedByClient">The first message ID requested by the client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessagesByMappingId(System.UInt64)">
      <summary>Gets the next batch of messages for the specified mapping ID.</summary>
      <returns>The next batch of messages.</returns>
      <param name="mappingId">The mapping ID.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.MaxMapping">
      <summary>Gets or sets the maximum mapping ID.</summary>
      <returns>The maximum mapping ID.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription">
      <summary>Představuje škálovaný odběr.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription" />.</summary>
      <param name="identity">Identita odběru</param>
      <param name="eventKeys">Klíče událostí pro odběr</param>
      <param name="cursor">Kurzor zápisu</param>
      <param name="streams">Streamy použité pro přidružení ke kurzorům zápisu</param>
      <param name="callback">Funkce zpětného volání, která se provede, když se změní stav odběru</param>
      <param name="maxMessages">Maximální počet zpráv přidělených tomuto odběru</param>
      <param name="counters">Objekt použitý pro přístup k čítačům výkonu odběru</param>
      <param name="state">Stav odběru</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.BeforeInvoke(System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.WriteCursor(System.IO.TextWriter)">
      <summary>Zapíše kurzor pomocí určeného zapisovače textu.</summary>
      <param name="textWriter">Zapisovač textu použitý k zápisu kurzoru</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Subscription">
      <summary>Představuje implementaci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.ISubscription" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.Subscription" />.</summary>
      <param name="identity">Identita odběru</param>
      <param name="eventKeys">Seznam obsahující klíče události pro odběr</param>
      <param name="callback">Funkce zpětného volání, která se provede, když se změní stav odběru</param>
      <param name="maxMessages">Maximální počet zpráv přidělených tomuto odběru</param>
      <param name="counters">Objekt použitý pro přístup k čítačům výkonu odběru</param>
      <param name="state">Stav odběru</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.AddEvent(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.BeforeInvoke(System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Disposable">
      <summary>Získá nebo nastaví metodu používanou k uvolnění prostředků odběru.</summary>
      <returns>Metoda používaná k uvolnění prostředků odběru</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose(System.Boolean)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Identity"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Invoke(Microsoft.AspNet.SignalR.Messaging.MessageResult)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.MaxMessages"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.RemoveEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetEventTopic(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.UnsetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Work"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.WriteCursor(System.IO.TextWriter)">
      <summary>Zapíše kurzor pomocí určeného zapisovače textu.</summary>
      <param name="textWriter">Zapisovač textu použitý k zápisu kurzoru</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Topic">
      <summary>Představuje téma na sběrnici zpráv SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.#ctor(System.UInt32,System.TimeSpan)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.Topic" />.</summary>
      <param name="storeSize">Velikost úložiště zpráv</param>
      <param name="lifespan">Životnost tématu</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.AddSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Přidá určený odběr do seznamu.</summary>
      <param name="subscription">Odběr k přidání</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.IsExpired">
      <summary>Získá hodnotu, která určuje, zda platnost tématu vypršela.</summary>
      <returns>Hodnota true, pokud platnost tématu vypršela, jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.LastUsed">
      <summary>Získá nebo nastaví čas posledního použití odběru.</summary>
      <returns>Čas posledního použití odběru</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.MarkUsed"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.RemoveSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Odstraní určený odběr ze seznamu.</summary>
      <param name="subscription">Odběr k odstranění</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Store">
      <summary>Získá nebo nastaví úložiště zpráv.</summary>
      <returns>Úložiště zpráv</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.SubscriptionLock">
      <summary>Získá nebo nastaví objekt použitý k uzamčení tématu.</summary>
      <returns>Objekt použitý k uzamčení tématu</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Subscriptions">
      <summary>Získá nebo nastaví seznam obsahující odběry tématu.</summary>
      <returns>Seznam obsahující odběry tématu</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup">
      <summary>Představuje kolekci témat, která se používá k vyhledávání.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Clear">
      <summary>Odebere všechna témata z kolekce.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.ContainsKey(System.String)">
      <summary>Určuje, zda je téma se zadaným klíčem obsaženo v kolekci.</summary>
      <returns>Hodnota true, pokud je téma se zadaným klíčem obsaženo v kolekci, jinak hodnota false.</returns>
      <param name="key">Klíč tématu</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Count">
      <summary>Získá počet všech témat (obecných a skupinových) v kolekci.</summary>
      <returns>Počet všech témat (obecných a skupinových) v kolekci</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetEnumerator">
      <summary>Získá enumerátor procházející kolekci.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetOrAdd(System.String,System.Func{System.String,Microsoft.AspNet.SignalR.Messaging.Topic})">
      <summary>Přidá téma do kolekce pomocí zadané funkce, pokud klíč ještě neexistuje.</summary>
      <returns>Generované téma pro zadaný klíč</returns>
      <param name="key">Klíč tématu, které chcete přidat</param>
      <param name="factory">Funkce použitá ke generování tématu pro klíč</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Item(System.String)">
      <summary>Získá téma se zadaným klíčem.</summary>
      <returns>Téma se zadaným klíčem, pokud je nalezeno. Pokud téma nalezeno není, bude hodnota null.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.System#Collections#IEnumerable#GetEnumerator">
      <summary>Získá enumerátor procházející kolekci.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryGetValue(System.String,Microsoft.AspNet.SignalR.Messaging.Topic@)">
      <summary>Pokusí se získat téma se zadaným klíčem v kolekci.</summary>
      <returns>Hodnota true, pokud byl klíč nalezen, jinak hodnota false.</returns>
      <param name="key">Klíč určený k získání.</param>
      <param name="topic">Po návratu metody obsahuje načtené téma.Tento parametr se předává neinicializovaný.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryRemove(System.String)">
      <summary>Pokusí se odebrat a vrátit téma z kolekce, které má zadaný klíč.</summary>
      <returns>Odebrané téma</returns>
      <param name="key">Klíč tématu, které chcete odebrat</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerRequest">
      <summary>Představuje žádost serveru.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerRequest" />.</summary>
      <param name="environment">Prostředí.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Cookies">
      <summary>Získá soubor cookie přidružený k serveru.</summary>
      <returns>Soubory cookie přidružené k serveru</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Environment"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Headers">
      <summary>Získá hlavičky přidružené k žádosti.</summary>
      <returns>Hlavičky přidružené k žádosti</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.LocalPath"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.QueryString">
      <summary>Získá kolekci proměnných řetězce dotazu serveru.</summary>
      <returns>Kolekce proměnných řetězce dotazu serveru</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.ReadForm"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Url">
      <summary>Získá informace o adrese URL aktuální žádosti.</summary>
      <returns>Objekt <see cref="T:System.Uri" /> obsahující informace týkající se adresy URL aktuální žádosti</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.User">
      <summary>Získá uživatele pro tento server.</summary>
      <returns>Uživatel pro tento server</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerResponse">
      <summary>Představuje zpětnou vazbu serveru v reakci na žádost.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerResponse" />.</summary>
      <param name="environment">Prostředí.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.CancellationToken">
      <summary>Získá token zrušení přidružený k odpovědi.</summary>
      <returns>Token zrušení přidružený k odpovědi.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.ContentType">
      <summary>Získá nebo nastaví typ obsahu přidruženého k odpovědi.</summary>
      <returns>Typ obsahu přidruženého k odpovědi.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Flush">
      <summary>Vyprázdní tuto instanci.</summary>
      <returns>Vyprázdněná instance.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Zapíše odpověď pomocí přidruženého segmentu pole.</summary>
      <param name="data">Segment pole.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware">
      <summary>Represents the middleware used by the hub dispatcher.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware">
      <summary>Představuje middleware pro trvalé připojení.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager">
      <summary>Představuje rozhraní, které poskytuje vlastnosti pro trasování provádění kódu.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Item(System.String)">
      <summary>Získá zdroj <see cref="T:System.Diagnostics.TraceSource" /> se zadaným názvem.</summary>
      <returns>Zdroj <see cref="T:System.Diagnostics.TraceSource" /> se zadaným názvem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Switch">
      <summary>Získá přepínač, který řídí trasování spuštění kódu a ladění výstupu.</summary>
      <returns>Objekt <see cref="T:System.Diagnostics.SourceSwitch" /></returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.TraceManager">
      <summary>Poskytuje vlastnosti umožňující trasování spuštění kódu.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Tracing.TraceManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor(System.Diagnostics.TextWriterTraceListener)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Item(System.String)">
      <summary>Získá zdroj <see cref="T:System.Diagnostics.TraceSource" /> se zadaným názvem.</summary>
      <returns>Zdroj <see cref="T:System.Diagnostics.TraceSource" /> se zadaným názvem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Switch">
      <summary>Získá přepínač, který řídí trasování spuštění kódu a ladění výstupu.</summary>
      <returns>Objekt <see cref="T:System.Diagnostics.SourceSwitch" /></returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport">
      <summary>Představuje přenos Forever Frame.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport" />.</summary>
      <param name="context">Kontext hostitele.</param>
      <param name="resolver">Překladač závislostí</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inicializuje objekt odpovědi.</summary>
      <returns>Položka <see cref="T:System.Threading.Tasks.Task" />, která představuje operaci inicializace odpovědi.</returns>
      <param name="connection">Připojení pro přenos.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.KeepAlive">
      <summary>Zachová připojení otevřené.</summary>
      <returns>Položka <see cref="T:System.Threading.Tasks.Task" />, která představuje operaci zachování připojení.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.OutputWriter">
      <summary>Získá zapisovač textu HTML, který zapíše odpověď kontextu do výstupního datového proudu.</summary>
      <returns>Zapisovač textu HTML, který zapíše odpověď kontextu do výstupního datového proudu.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Odešle zadanou odpověď kontextu.</summary>
      <returns>Položka <see cref="T:System.Threading.Tasks.Task" />, která představuje operaci odeslání.</returns>
      <param name="response">Odpověď k odeslání.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport">
      <summary>Obsah zde nebude aktualizován. Žádné materiály sem prosím nepřidávejte.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <param name="context">Kontext hostitele.</param>
      <param name="resolver">Překladač závislostí</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <param name="context">Kontext hostitele.</param>
      <param name="jsonSerializer">jsonSerializer</param>
      <param name="heartbeat">Prezenční signál přenosu</param>
      <param name="performanceCounterWriter">Zapisovač čítače výkonu</param>
      <param name="traceManager">Správce trasování</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Connected">
      <summary>Získá nebo nastaví funkci připojení pro přenos <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <returns>Funkce připojení pro přenos <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" /></returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Poskytuje operaci zařazení do fronty pro přenosy.</summary>
      <returns>Operace zařazení do fronty pro přenosy</returns>
      <param name="writeAsync">Zapisovat asynchronně</param>
      <param name="state">Objekt stavu</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializePersistentState">
      <summary>Inicializuje trvalý stav věčného přenosu.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inicializuje odpověď připojení pro věčný přenos.</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Připojení pro přenos.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.JsonSerializer">
      <summary>Získá serializátor JsonSerializer pro věčný přenos.</summary>
      <returns>Serializátor JsonSerializer pro věčný přenos</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.LastMessageId">
      <summary>Získá ID poslední zprávy pro věčný přenos.</summary>
      <returns>ID poslední zprávy pro věčný přenos</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSending(System.String)">
      <summary>Poskytuje datovou část pro odesílající přenos.</summary>
      <param name="payload">Řetězcová datová část</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSendingResponse(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Poskytuje odpověď pro odesílající metody.</summary>
      <param name="response">Odpověď na připojení</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Poskytuje připojení pro zpracování žádosti</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Připojení pro přenos.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequestCore(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Poskytuje žádost o zpracování připojení pro přenos.</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Připojení pro přenos.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Received">
      <summary>Získá nebo nastaví funkci pro příjem pro věčný přenos.</summary>
      <returns>Funkce pro příjem pro věčný přenos</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Reconnected">
      <summary>Získá nebo nastaví funkci opětovného připojení pro věčný přenos.</summary>
      <returns>Funkce opětovného připojení pro věčný přenos</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Odešle odpověď na připojení pro věčný přenos.</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="response">Trvalá odpověď.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(System.Object)">
      <summary>Odešle objekt věčnému přenosu.</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="value">Hodnota, která se má odeslat.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.TransportConnected">
      <summary>Získá nebo nastaví připojený přenos pro přenos <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <returns>Připojený přenos pro přenos <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" /></returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITrackingConnection">
      <summary> Reprezentuje připojení, které lze sledovat pomocí třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" />. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary> Použije nový stav na připojení. </summary>
      <param name="states">Jedna z hodnot výčtu <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates" />.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.CancellationToken"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectionId"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectTask"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Disconnect"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.DisconnectThreshold"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.End"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsTimedOut"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.KeepAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.SupportsKeepAlive"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Timeout"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Url"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransport">
      <summary>Reprezentuje komunikující přenos.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Connected">
      <summary>Získá nebo nastaví zpětné volání, které je voláno, když se počáteční připojení připojí k přenosu.</summary>
      <returns>Vrací objekt <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.ConnectionId">
      <summary>Získá nebo nastaví ID připojení pro daný přenos.</summary>
      <returns>Vrací objekt <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Disconnected">
      <summary>Získá nebo nastaví zpětné volání, které je voláno při odpojení přenosu.</summary>
      <returns>Vrací objekt <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Zpracuje zadané připojení <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" /> pro tento přenos.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která se dokončí, když přenos dokončí zpracování připojení.</returns>
      <param name="connection">Připojení <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />, které má být zpracováno.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Received">
      <summary>Získá nebo nastaví zpětné volání, které je voláno, když přenos obdrží data.</summary>
      <returns>Vrací objekt <see cref="T:System.Func`2" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Reconnected">
      <summary>Získá nebo nastaví zpětné volání, které je voláno, když se přenos znovu připojí.</summary>
      <returns>Vrací objekt <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.Send(System.Object)">
      <summary>Odešle data prostřednictvím přenosu.</summary>
      <returns>Úloha <see cref="T:System.Threading.Tasks.Task" />, která se dokončí při dokončení odesílání.</returns>
      <param name="value">Hodnota k odeslání.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.TransportConnected">
      <summary>Získá nebo nastaví zpětné volání, které je voláno, když se přenos připojí.</summary>
      <returns>Vrací objekt <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection">
      <summary>Představuje přenos pro připojení.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Obdrží data odběru z přenosu.</summary>
      <returns>Data odběru z přenosu</returns>
      <param name="messageId">ID zprávy pro odběr</param>
      <param name="callback">Metoda, která zpracovává přijatou zprávu</param>
      <param name="maxMessages">Velikost vyrovnávací paměti zpráv</param>
      <param name="state">Stav připojení přenosu</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat">
      <summary>Spravuje sledování stavu připojení.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Přidá do seznamu sledovaných připojení nové připojení.</summary>
      <returns>Nahrazované připojení (pokud je nějaké nahrazováno)</returns>
      <param name="connection">Připojení, které má být přidáno.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.GetConnections">
      <summary>Získá seznam sledovaných připojení.</summary>
      <returns>Seznam připojení.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Označí existující připojení jako aktivní.</summary>
      <param name="connection">Připojení, které se má označit.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Odebere připojení ze seznamu sledovaných připojení.</summary>
      <param name="connection">Připojení, které se má odebrat.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportManager">
      <summary>Spravuje přenosy pro připojení.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Získá zadaný přenos pro zadanou položku <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</summary>
      <returns>Objekt <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" /> pro danou položku <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</returns>
      <param name="hostContext">Položka <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> pro aktuální žádost.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.SupportsTransport(System.String)">
      <summary>Zjistí, zda je daný přenos podporován.</summary>
      <returns>Hodnota true, je-li přenos podporován, jinak hodnota false.</returns>
      <param name="transportName">Název přenosu, který je třeba otestovat.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport">
      <summary>Obsah zde nebude aktualizován. Žádné materiály sem prosím nepřidávejte.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport" />.</summary>
      <param name="context">Kontext hostitele.</param>
      <param name="resolver">Překladač závislostí</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Connected">
      <summary>Získá nebo nastaví připojenou funkci.</summary>
      <returns>Připojená funkce</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.DisconnectThreshold">
      <summary>Získá prahovou hodnotu odpojení.</summary>
      <returns>Prahová hodnota odpojení</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.IsConnectRequest">
      <summary>Získá hodnotu, která určuje, zda je přenos žádostí o připojení.</summary>
      <returns>Hodnota true, pokud je přenos žádostí o připojení, jinak hodnota false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Zpracuje žádost o připojení.</summary>
      <returns>Úloha představující operaci žádosti</returns>
      <param name="connection">Připojení, které se má zpracovat</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Received">
      <summary>Získá nebo nastaví přijatou funkci.</summary>
      <returns>Přijatá funkce</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Reconnected">
      <summary>Získá nebo nastaví znovu připojený přenos.</summary>
      <returns>Úloha, která znovu připojí přenos</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Odešle odpověď pro přenos.</summary>
      <returns>Úloha, která představuje operaci odeslání odpovědi</returns>
      <param name="response">Odpověď k odeslání.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(System.Object)">
      <summary>Odešle přenos s dlouhým dotazováním s danou hodnotou.</summary>
      <returns>Úloha, která představuje operaci odeslání přenosu s dlouhým dotazováním</returns>
      <param name="value">Hodnota.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.SupportsKeepAlive">
      <summary>Získá hodnotu, která určuje, zda přenos podporuje zachování připojení.</summary>
      <returns>Hodnota true, pokud přenos podporuje zachování připojení; jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.TransportConnected">
      <summary>Získá nebo nastaví připojený přenos.</summary>
      <returns>Úloha, která připojí přenos</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse">
      <summary> Reprezentuje odpověď na připojení. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor(System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{System.IO.TextWriter})">
      <summary>Vytvoří novou instanci položky <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
      <param name="exclude">Filtr, který určuje, zda mají být zprávy zapisovány do klienta.</param>
      <param name="writeCursor">Zapisovač kurzoru.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Aborted">
      <summary>Získá nebo nastaví hodnotu, která udává, zda bylo připojení nuceně uzavřeno.</summary>
      <returns>Hodnota true, pokud bylo připojení nuceně uzavřeno, jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Disconnect">
      <summary>Získá nebo nastaví hodnotu, která udává, zda má připojení obdržet příkaz k odpojení.</summary>
      <returns>Hodnota true, pokud má připojení obdržet příkaz k odpojení, jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.GroupsToken">
      <summary>Získá nebo nastaví podepsaný token reprezentující seznam skupin.</summary>
      <returns>Skupiny tokenu</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Initializing">
      <summary>Hodnota true, pokud se provádí inicializace připojení.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.LongPollDelay">
      <summary>Získá nebo nastaví dobu, po kterou by měl klient provádějící dlouhé dotazování vyčkat, než znovu vytvoří připojení, pokud neobdrží žádná data.</summary>
      <returns>Doba, po kterou by měl klient provádějící dlouhé dotazování vyčkat, než znovu vytvoří připojení, pokud neobdrží žádná data.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Messages">
      <summary>Získá nebo nastaví seznam zpráv k odeslání do přijímajícího připojení.</summary>
      <returns>Seznam zpráv k odeslání do přijímajícího připojení.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Microsoft#AspNet#SignalR#Json#IJsonWritable#WriteJson(System.IO.TextWriter)">
      <summary>Pomocí třídy JsonTextWriter technologie Json.NET serializuje do formátu JSON v zájmu zvýšení výkonu pouze nezbytné komponenty položky <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
      <param name="writer">Třída <see cref="T:System.IO.TextWriter" />, která přijme serializaci do formátu JSON.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Reconnect">
      <summary>Hodnota true, pokud má klient opakovat pokus o připojení</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Terminal"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.TotalCount">
      <summary>Získá nebo nastaví celkový počet zpráv odeslaných do přijímajícího připojení.</summary>
      <returns>Celkový počet zpráv odeslaných do přijímajícího připojení.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport">
      <summary>Poskytuje přenos pro odeslání událostí ze serveru funkce SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</summary>
      <param name="context">Kontext hostitele.</param>
      <param name="resolver">Překladač IDependency.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inicializuje odpověď pro položku <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />.</summary>
      <returns>Odpověď inicializace pro položku <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />.</returns>
      <param name="connection">Inicializace připojení přenosu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.KeepAlive">
      <summary>Vrátí metodu zachování připojení, která zajistí trvalé připojení k internetového zdroji.</summary>
      <returns>Metoda zachování připojení, která zajistí trvalé připojení k internetového zdroji.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Odešle trvalou odpověď pro položku <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</summary>
      <returns>Trvalá odpověď k odeslání do položky <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</returns>
      <param name="response">Trvalá odpověď.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates">
      <summary>Vytvoří výčet atributu TransportConnectionState.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Aborted">
      <summary>Přerušené připojení stavu.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Added">
      <summary>Přidané připojení stavu.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disconnected">
      <summary>Zrušené připojení stavu.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.DisconnectMessageReceived">
      <summary>Byla přijata zpráva o odpojení stavu.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disposed">
      <summary>Zrušené připojení stavu.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.HttpRequestEnded">
      <summary>Žádost HTTP skončila stavem připojení.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.None">
      <summary>Stav: žádné připojení.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.QueueDrained">
      <summary>Vyprázdněná fronta stavu připojení.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Removed">
      <summary>Odebrané připojení stavu.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Replaced">
      <summary>Nahrazené připojení stavu.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase">
      <summary>Obsah zde nebude aktualizován. Žádné materiály sem prosím nepřidávejte.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <param name="context">Kontext hostitele.</param>
      <param name="heartbeat">Prezenční signál přenosu</param>
      <param name="performanceCounterManager">Správce čítače výkonu.</param>
      <param name="traceManager">Správce trasování</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort">
      <summary>Zruší proces aktuální úlohy pro třídu <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <returns>Proces aktuální úlohy pro třídu <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />, který má být zrušen</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort(System.Boolean)">
      <summary>Zruší proces aktuální úlohy pro třídu <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <returns>Proces aktuální úlohy pro třídu <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />, který má být zrušen</returns>
      <param name="clean">Označuje, zda se mají vyčistit všechny úlohy ve zrušeném procesu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary>Použije stav připojení přenosu pro základ odpojení.</summary>
      <param name="states">Stavy připojení přenosu</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CancellationToken">
      <summary>Získá token zrušení reprezentující životnost připojení.</summary>
      <returns>Token zrušení reprezentující životnost připojení</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Connection">
      <summary>Získá nebo nastaví připojení přenosu pro základ odpojení přenosu.</summary>
      <returns>Připojení přenosu pro základ odpojení přenosu</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionEndToken">
      <summary>Získá připojení pro ukončení operace pro tento token.</summary>
      <returns>Připojení pro ukončení operace pro tento token</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionId">
      <summary>Získá nebo nastaví ID připojení.</summary>
      <returns>Řetězec obsahující ID připojení</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectTask"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Context">
      <summary>Získá kontext hostitele přidružený k základu odpojení přenosu.</summary>
      <returns>Kontext hostitele přidružený k základu odpojení přenosu</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CreateResponseWriter">
      <summary>Reprezentuje zapisovač pro vytvoření odpovědi pro základ odpojení přenosu.</summary>
      <returns>Zapisovač pro vytvoření odpovědi pro základ odpojení přenosu</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnect">
      <summary>Způsobí odpojení připojení.</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnected">
      <summary>Získá nebo nastaví vlastnost odpojení pro přenosy tohoto připojení.</summary>
      <returns>Vlastnost odpojení pro přenosy tohoto připojení</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.DisconnectThreshold">
      <summary>Získá časový interval čekání po ukončení připojení, než se ohlásí odpojení připojení.</summary>
      <returns>Vrací objekt <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose">
      <summary>Uvolní všechny prostředky používané aktuální instancí třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose(System.Boolean)">
      <summary>Uvolní nespravované prostředky využívané třídou <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> a volitelně také spravované prostředky.</summary>
      <param name="disposing">Hodnota true slouží k uvolnění spravovaných i nespravovaných prostředků; hodnota false slouží k uvolnění pouze nespravovaných prostředků.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.End">
      <summary>Ukončí připojení.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
      <summary>Představuje objekt pro ukončení operace fronty.</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="writeAsync">Zapisuje asynchronně.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Představuje objekt pro ukončení operace fronty.</summary>
      <returns>Objekt představující konec operace fronty</returns>
      <param name="writeAsync">Zapisuje asynchronně.</param>
      <param name="state">Stav</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Heartbeat">
      <summary>Získá prezenční signál připojení pro správu stavu sledování připojení.</summary>
      <returns>Prezenční signál připojení pro správu stavu sledování připojení</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.HostShutdownToken"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IncrementErrors">
      <summary>Zvětší počet chyb pro základ odpojení přenosu.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.InitializePersistentState">
      <summary>Inicializuje trvalý stav pro základ odpojení přenosu.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAbortRequest">
      <summary>Získá hodnotu, která představuje, že připojení vydalo požadavek na zrušení.</summary>
      <returns>Hodnota true, pokud připojení vydalo požadavek na zrušení, jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAlive">
      <summary>Získá hodnotu, která udává, zda je připojení aktivní.</summary>
      <returns>Hodnota true, pokud je připojení aktivní, jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsConnectRequest">
      <summary>Získá hodnotu, která představuje, že připojení vydala požadavek.</summary>
      <returns>Hodnota true, pokud připojení vydala požadavek, jinak hodnota false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsTimedOut">
      <summary>Získá hodnotu, která udává, zda vypršel časový limit připojení.</summary>
      <returns>Hodnota true, pokud vypršel časový limit připojení, jinak hodnota false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.KeepAlive">
      <summary>Pošle prostřednictvím připojení příkaz ping pro zachování připojení.</summary>
      <returns>Vrací objekt <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.OutputWriter">
      <summary>Získá výstupní zapisovač, který může zapisovat sekvenční řady znaků.</summary>
      <returns>Výstupní zapisovač, který může zapisovat sekvenční řady znaků</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.SupportsKeepAlive">
      <summary>Získá hodnotu, která udává, zda přenos podporuje zachování připojení.</summary>
      <returns>Hodnota true, pokud přenos podporuje zachování připojení; jinak hodnota false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Timeout">
      <summary>Způsobí vypršení časového limitu připojení.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Trace">
      <summary>Získá zdroj pro sledování spuštění kódu a přidružení zpráv sledování k jejich zdroji.</summary>
      <returns>Zdroj pro sledování spuštění kódu a přidružení zpráv sledování k jejich zdroji</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Url">
      <summary>Získá identifikátor URI připojení.</summary>
      <returns>Identifikátor URI připojení</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat">
      <summary>Představuje výchozí implementaci položky <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />.</summary>
      <param name="resolver">Objekt <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /></param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Přidá do seznamu sledovaných připojení nové připojení.</summary>
      <param name="connection">Připojení, které má být přidáno.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose">
      <summary>Uvolní všechny prostředky používané aktuální instancí třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose(System.Boolean)">
      <summary>Uvolní nespravované prostředky využívané třídou <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" /> a volitelně také spravované prostředky.</summary>
      <param name="disposing">Hodnota true slouží k uvolnění spravovaných i nespravovaných prostředků; hodnota false slouží k uvolnění pouze nespravovaných prostředků.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.GetConnections">
      <summary>Získá seznam sledovaných připojení.</summary>
      <returns>Seznam připojení.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Označí existující připojení jako aktivní.</summary>
      <param name="connection">Připojení, které se má označit.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Odebere připojení ze seznamu sledovaných připojení.</summary>
      <param name="connection">Připojení, které se má odebrat.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportManager">
      <summary>Výchozí implementace třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportManager" />.</summary>
      <param name="resolver">Výchozí objekt <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Získá zadaný přenos pro zadanou položku <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</summary>
      <returns>Objekt <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" /> pro danou položku <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</returns>
      <param name="hostContext">Položka <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> pro aktuální žádost.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Register(System.String,System.Func{Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransport})">
      <summary>Přidá do seznamu podporovaných přenosů nový přenos.</summary>
      <param name="transportName">Zadaný přenos.</param>
      <param name="transportFactory">Metoda objektu factory pro zadaný přenos.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Remove(System.String)">
      <summary>Odebere přenos ze seznamu podporovaných přenosů.</summary>
      <param name="transportName">Zadaný přenos.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.SupportsTransport(System.String)">
      <summary>Zjistí, zda je daný přenos podporován.</summary>
      <returns>Hodnota true, je-li přenos podporován, jinak hodnota false.</returns>
      <param name="transportName">Název přenosu, který je třeba otestovat.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport">
      <summary>Obsah zde nebude aktualizován. Žádné materiály sem prosím nepřidávejte.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport" />.</summary>
      <param name="context">Kontext hostitele.</param>
      <param name="resolver">Překladač závislostí</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CancellationToken">
      <summary>Získá token zrušení používaný pro přenos.</summary>
      <returns>Token zrušení používaný pro přenos</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CreateResponseWriter"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.IsAlive">
      <summary>Získá hodnotu, která určuje, zda je přenos aktivní.</summary>
      <returns>Hodnota true, pokud je přenos aktivní, jinak hodnota false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.KeepAlive">
      <summary>Zachová přenos aktivní.</summary>
      <returns>Úloha, která zachová přenos aktivní</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Zpracuje žádost o připojení.</summary>
      <returns>Úloha, která představuje operaci žádosti o připojení</returns>
      <param name="connection">Připojení.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Odešle odpověď objektu WebSocket.</summary>
      <returns>Úloha, která představuje operaci odeslání odpovědi</returns>
      <param name="response">Odpověď k odeslání.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(System.Object)">
      <summary>Odešle hodnotu přenosu.</summary>
      <returns>Úloha, která představuje operaci odeslání hodnoty přenosu</returns>
      <param name="value">Hodnota, která se má odeslat.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler">
      <summary>Představuje instanci spravující objekty WebSocket SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.#ctor(System.Nullable{System.Int32})"></member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Close">
      <summary>Uzavře tuto instanci.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Error">
      <summary>Získá nebo nastaví chybu během zpracování objektu WebSocket.</summary>
      <returns>Chyba během zpracování objektu WebSocket.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.MaxIncomingMessageSize">
      <summary>Získá maximální velikost příchozí zprávy.</summary>
      <returns>Maximální velikost příchozí zprávy.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnClose(System.Boolean)">
      <summary>Nastane při zavření této instance.</summary>
      <param name="clean">Hodnota true vyčistí trasování.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnError">
      <summary>Vyvolá událost, pokud došlo k chybě během operace obslužné rutiny.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.Byte[])">
      <summary>Vyvolá událost při příjmu zprávy.</summary>
      <param name="message">Zpráva</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.String)">
      <summary>Vyvolá událost při příjmu zprávy.</summary>
      <param name="message">Zpráva</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnOpen">
      <summary>Vyvolá událost při otevření této instance.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.ProcessWebSocketRequestAsync(System.Net.WebSockets.WebSocket,System.Threading.CancellationToken)">
      <summary>Asynchronně zpracuje žádost přijatou obslužnou rutinou.</summary>
      <returns>Výsledek operace.</returns>
      <param name="webSocket">Objekt WebSocket.</param>
      <param name="disconnectToken">Token odpojení.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Send(System.String)">
      <summary>Odešle zprávu přidruženou k obslužné rutině.</summary>
      <returns>Odeslaná zpráva.</returns>
      <param name="message">Zpráva k odeslání.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.WebSocket">
      <summary>Získá nebo nastaví objekt WebSocket.</summary>
      <returns>Objekt WebSocket.</returns>
    </member>
    <member name="T:Owin.ObsoleteOwinExtensions"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="T:Owin.OwinExtensions">
      <summary>Představuje připojení pro rozšíření Owin.</summary>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder)">
      <summary>Mapuje rozbočovače SignalR na kanál tvůrce aplikací v cestě /signalr.</summary>
      <returns>Vrací objekt <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Tvůrce aplikací.</param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Mapuje rozbočovače SignalR na kanál tvůrce aplikací v cestě /signalr.</summary>
      <returns>Vrací objekt <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Tvůrce aplikací.</param>
      <param name="configuration">Konfigurace <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />, která má být použita </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String)">
      <summary>Mapuje zadané připojení SignalR (<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />) na kanál tvůrce aplikací v zadané cestě. </summary>
      <returns>Vrací objekt <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Tvůrce aplikací.</param>
      <param name="path">  Cesta pro mapování trvalého připojení (<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />)</param>
      <typeparam name="TConnection">Typ připojení <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Mapuje zadané připojení SignalR (<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />) na kanál tvůrce aplikací v zadané cestě. </summary>
      <returns>Vrací objekt <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Tvůrce aplikací.</param>
      <param name="path">Cesta pro mapování trvalého připojení</param>
      <param name="configuration">Konfigurace <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />, která má být použita </param>
      <typeparam name="TConnection">Typ připojení <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Mapuje rozbočovače SignalR na kanál tvůrce aplikací v zadané cestě.</summary>
      <returns>Vrací objekt <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Tvůrce aplikací.</param>
      <param name="path">Cesta pro mapování rozbočovačů signalr</param>
      <param name="configuration">Konfigurace <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />, která má být použita </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Mapuje zadané trvalé připojení (<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />) na kanál tvůrce aplikací v zadané cestě. </summary>
      <returns>Vrací objekt <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Tvůrce aplikací.</param>
      <param name="path">Cesta pro mapování trvalého připojení</param>
      <param name="connectionType">Typ připojení <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></param>
      <param name="configuration">Konfigurace <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />, která má být použita </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder)">
      <summary>Přidá rozbočovače SignalR do kanálu tvůrce aplikací.</summary>
      <param name="builder">Tvůrce aplikací.</param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder)">
      <summary>Přidá zadané připojení SignalR (<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />) do tvůrce aplikací. </summary>
      <param name="builder">Tvůrce aplikací</param>
      <typeparam name="TConnection">Typ připojení <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <param name="builder">Tvůrce aplikací.</param>
      <param name="configuration">Konfigurace <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />, která má být použita</param>
      <typeparam name="TConnection">  Přidá zadané připojení SignalR (<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />) do tvůrce aplikací. </typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Přidá rozbočovače SignalR do kanálu tvůrce aplikací...</summary>
      <param name="builder">Tvůrce aplikací.</param>
      <param name="configuration">Konfigurace <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />, která má být použita </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Přidá zadané připojení SignalR (<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />) do tvůrce aplikací. </summary>
      <param name="builder">Tvůrce aplikací.</param>
      <param name="connectionType">Typ připojení <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></param>
      <param name="configuration">Konfigurace <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />, která má být použita </param>
    </member>
    <member name="T:System.Diagnostics.TraceSourceExtensions">
      <summary>Provides extension methods for used by SignalR.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace error message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace warning message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
  </members>
</doc>