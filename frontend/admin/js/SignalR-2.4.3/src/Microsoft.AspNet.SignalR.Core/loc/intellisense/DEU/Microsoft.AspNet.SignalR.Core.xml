<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.AspNet.SignalR.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.AspNet.SignalR.AuthorizeAttribute">
      <summary>Wird auf Hubs und Hubmethoden zum Autorisieren von Clientverbindungen mit Hubs und zum Autorisieren von Clientaufrufen von Hubmethoden angewendet.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.AuthorizeAttribute" />-Klasse.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.AuthorizeAttribute._requireOutgoing">
      <summary>Gibt an, ob Autorisierung nur auf die Aufrufe der serverseitigen Methoden des Hubs anzuwenden ist.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Bestimmt, ob der Client autorisiert ist, eine Verbindung mit <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> herzustellen.</summary>
      <returns>true, wenn der Aufrufer autorisiert ist, eine Verbindung mit dem Hub herzustellen, andernfalls false.</returns>
      <param name="hubDescriptor">Die Beschreibung des Hubclients, mit dem versucht wird, eine Verbindung herzustellen.</param>
      <param name="request">Die (erneute) Verbindungsanforderung vom Client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>Ermittelt, ob der Client autorisiert ist, die Methode <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufzurufen.</summary>
      <returns>true, wenn der Aufrufer autorisiert ist, die Methode <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufzurufen, andernfalls false.</returns>
      <param name="hubIncomingInvokerContext">Ein <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />-Objekt, das Details bezüglich des <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />-Methodenaufrufs bereitstellt.</param>
      <param name="appliesToMethod">true, um anzugeben, dass die Schnittstelleninstanz ein Attribut ist, das direkt auf eine Methode angewendet wird, andernfalls false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.RequireOutgoing">
      <summary>Wird auf false festgelegt, um Autorisierung nur auf die Aufrufe der serverseitigen Methoden des Hubs anzuwenden.Diese Eigenschaft wirkt sich nur auf Attribute aus, die auf die Hubklasse angewendet werden.Diese Eigenschaft kann nicht gelesen werden.</summary>
      <returns>false, wenn Autorisierung nur auf die Aufrufe der serverseitigen Methoden des Hubs anzuwenden ist.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Roles">
      <summary>Ruft die Benutzerrollen ab bzw. legt diese fest.</summary>
      <returns>Die Benutzerrollen.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.UserAuthorized(System.Security.Principal.IPrincipal)">
      <summary>Stellt beim Überschreiben einen Einstiegspunkt für benutzerdefinierte Autorisierungsprüfungen bereit.Wird von <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)" /> und <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)" /> aufgerufen.</summary>
      <returns>True, wenn der Benutzer autorisiert ist, andernfalls False.</returns>
      <param name="user">Das <see cref="T:System.Security.Principal.IPrincipal" />-Objekt für den Client, der autorisiert wird.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Users">
      <summary>Ruft die autorisierten Benutzer ab bzw. legt sie fest.</summary>
      <returns>Die autorisierten Benutzer.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionConfiguration">
      <summary>Stellt eine Verbindungskonfiguration dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionConfiguration.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.EnableJSONP">
      <summary>Gibt einen booleschen Wert zurück, der angibt, ob JSONP aktiviert ist, oder legt diesen Wert fest.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.Resolver">
      <summary>Ruft den Abhängigkeitskonfliktlöser ab, der für die Hubverbindung verwendet werden soll, oder legt ihn fest.</summary>
      <returns>Der Abhängigkeitskonfliktlöser, der für die Hubverbindung verwendet werden soll.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionExtensions">
      <summary>Stellt Erweiterungsmethoden zur Verfügung, die zum Senden einer Nachricht an alle Verbindungen verwendet wird, die ein bestimmtes Signal abonniert haben.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Broadcast(Microsoft.AspNet.SignalR.IConnection,System.Object,System.String[])">
      <summary>Überträgt einen Wert an alle Verbindungen mit Ausnahme der angegebenen Verbindungs-IDs.</summary>
      <returns>Ein Task, der den Abschluss des Übertragungsvorgangs darstellt.</returns>
      <param name="connection">Die Verbindung.</param>
      <param name="value">Der zu übertragende Wert.</param>
      <param name="excludeConnectionIds">Die Liste der von der Übertragung auszuschließenden Verbindungs-IDs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.Collections.Generic.IList{System.String},System.Object)">
      <summary>Sendet eine Nachricht an alle Verbindungen, die das angegebene Signal abonniert haben.Ein Beispiel für ein Signal kann eine bestimmte Verbindungs-ID sein.</summary>
      <returns>Ein Task, der den Abschluss des Übertragungsvorgangs darstellt.</returns>
      <param name="connection">Die Verbindung.</param>
      <param name="connectionIds">Die Verbindungs-ID, an die gesendet werden soll.</param>
      <param name="value">Der zu veröffentlichende Wert.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.String,System.Object)">
      <summary>Sendet eine Nachricht an alle Verbindungen, die das angegebene Signal abonniert haben.Ein Beispiel für ein Signal kann eine bestimmte Verbindungs-ID sein.</summary>
      <returns>Ein Task, der den Abschluss des Übertragungsvorgangs darstellt.</returns>
      <param name="connection">Die Verbindung.</param>
      <param name="connectionId">Die connectionId, an die gesendet werden soll.</param>
      <param name="value">Der zu veröffentlichende Wert.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionMessage">
      <summary>Eine Nachricht, die an mindestens eine Verbindung gesendet wird.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />-Klasse.</summary>
      <param name="signal">Das Signal.</param>
      <param name="value">Die Nutzlast der Nachricht.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object,System.Collections.Generic.IList{System.String})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />-Klasse.</summary>
      <param name="signal">Das Signal.</param>
      <param name="value">Die Nutzlast der Nachricht.</param>
      <param name="excludedSignals">Die Signale, die ausgeschlossen werden sollen.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.ExcludedSignals">
      <summary>Stellt eine Liste von Signalen dar, die zum Filtern der Verbindungen verwendet werden soll, die diese Nachricht empfangen sollen.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IList`1" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signal">
      <summary>Das Signal, an das diese Nachricht gesendet werden soll.Verbindungen, die dieses Signal abonniert haben, empfangen die Nachrichtennutzlast.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signals">
      <summary>Eine Liste der Signale, an die diese Nachricht übermittelt werden soll.Wenn diese Option verwendet wird, kann das Signal nicht verwendet werden.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Value">
      <summary>Die Nutzlast der Nachricht.</summary>
      <returns>Gibt <see cref="T:System.Object" /> zurück.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Cookie">
      <summary>Stellt das Cookie von SignalR dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Cookie" />-Klasse.</summary>
      <param name="name">Der Eigenschaftenname des Cookies.</param>
      <param name="value">Der Eigenschaftenwert des Cookies.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Cookie" />-Klasse.</summary>
      <param name="name">Der Eigenschaftenname des Cookies.</param>
      <param name="value">Der Eigenschaftenwert des Cookies.</param>
      <param name="domain">Der Domäneneigenschaft des Cookies.</param>
      <param name="path">Der Eigenschaftenpfad des Cookies.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Domain">
      <summary>Ruft die Domäne des Cookies ab oder legt sie fest.</summary>
      <returns>Die Domäne des Cookies.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Name">
      <summary>Ruft den Namen des Cookies ab oder legt diesen fest.</summary>
      <returns>Der Name des Cookies.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Path">
      <summary>Ruft den Pfad des Cookies ab oder legt ihn fest.</summary>
      <returns>Der Pfad des Cookies.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Value">
      <summary>Ruft den Wert des Cookies ab oder legt ihn fest.</summary>
      <returns>Der Wert des Cookies.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver">
      <summary>Stellt einen Abhängigkeitskonfliktlöser mit Standardverhalten dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose">
      <summary>Gibt die von der aktuellen Instanz der Klasse <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose(System.Boolean)">
      <summary>Gibt die von der aktuellen Instanz der Klasse <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" /> verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. false, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetService(System.Type)">
      <summary>Löst einzeln registrierte Dienste auf, die beliebige Objekterstellung unterstützen.</summary>
      <returns>Der angeforderte Dienst oder das angeforderte Objekt.</returns>
      <param name="serviceType">Der Typ des angeforderten Diensts oder Objekts.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetServices(System.Type)">
      <summary>Löst mehrfach registrierte Dienste auf.</summary>
      <returns>Der angeforderte Dienst.</returns>
      <param name="serviceType">Der Typ der angeforderten Dienste.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Registriert die angegebenen Dienste für den Abhängigkeitskonfliktlöser.</summary>
      <param name="serviceType">Der Typ der zu registrierenden Dienste.</param>
      <param name="activators">Die Dienste, die für den Abhängigkeitskonfliktlöser registriert werden sollen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Registriert den angegebenen Dienst für den Abhängigkeitskonfliktlöser.</summary>
      <param name="serviceType">Der Typ des zu registrierenden Diensts.</param>
      <param name="activator">Der Dienst, der für den Abhängigkeitskonfliktlöser registriert werden soll.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Löst den Typ der Erweiterungen auf.</summary>
      <returns>Gibt ein Objekt zurück, das den Typ der Erweiterungen auflösen soll.</returns>
      <param name="resolver">Der Abhängigkeitskonfliktlöser.</param>
      <typeparam name="T">Der aufzulösende Typ.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Löst den Typ der Erweiterungen auf.</summary>
      <returns>Gibt ein Objekt zurück, das den Typ der Erweiterungen auflösen soll.</returns>
      <param name="resolver">Der Abhängigkeitskonfliktlöser.</param>
      <param name="type">Der aufzulösende Typ.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Löst alle Typen von Erweiterungen auf.</summary>
      <returns>Gibt eine Auflistung der aufgelösten Typerweiterungen zurück.</returns>
      <param name="resolver">Der Abhängigkeitskonfliktlöser.</param>
      <typeparam name="T">Der aufzulösende Typ.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Löst alle Typen von Erweiterungen auf.</summary>
      <returns>Gibt eine Auflistung der aufgelösten Typerweiterungen zurück.</returns>
      <param name="resolver">Der Abhängigkeitskonfliktlöser.</param>
      <param name="type">Der aufzulösende Typ.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GlobalHost">
      <summary>Stellt Zugriff auf Standardhostinformationen zur Verfügung.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.Configuration">
      <summary>Ruft das <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" />-Standardobjekt ab.</summary>
      <returns>Das <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" />-Standardobjekt.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.ConnectionManager">
      <summary>Ruft das <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" />-Standardobjekt ab.</summary>
      <returns>Das <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" />-Standardobjekt.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.DependencyResolver">
      <summary>Ruft das <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />-Standardobjekt ab oder legt dieses fest.</summary>
      <returns>Das <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />-Standardobjekt.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.HubPipeline">
      <summary>Ruft das <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />-Standardobjekt ab.</summary>
      <returns>Das <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />-Standardobjekt.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.TraceManager">
      <summary>Ruft das <see cref="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager" />-Standardobjekt ab.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GroupManager">
      <summary>Verwaltet Gruppen für eine Verbindung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.#ctor(Microsoft.AspNet.SignalR.IConnection,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.GroupManager" />-Klasse.</summary>
      <param name="connection">Die <see cref="T:Microsoft.AspNet.SignalR.IConnection" />, in der sich diese Gruppe befindet.</param>
      <param name="groupPrefix">Das Präfix für diese Gruppe.Ein <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />-Name oder ein <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Typname.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Add(System.String,System.String)">
      <summary>Fügt der angegebenen Gruppe eine Verbindung hinzu.</summary>
      <returns>Ein Task, der das Hinzufügen der Verbindungs-ID zur Gruppe darstellt.</returns>
      <param name="connectionId">Die Verbindungs-ID, die der Gruppe hinzugefügt werden soll.</param>
      <param name="groupName">Der Name der Gruppe.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Remove(System.String,System.String)">
      <summary>Entfernt eine Verbindung aus der angegebenen Gruppe.</summary>
      <returns>Ein Task, der das Entfernen der Verbindungs-ID aus der Gruppe darstellt.</returns>
      <param name="connectionId">Die Verbindungs-ID, die aus der Gruppe entfernt werden soll.</param>
      <param name="groupName">Der Name der Gruppe.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Sendet einen Wert an die angegebene Gruppe.</summary>
      <returns>Ein Task, der den Abschluss des Sendevorgangs darstellt.</returns>
      <param name="groupNames">Die Namen der Gruppen.</param>
      <param name="value">Der zu sendende Wert.</param>
      <param name="excludeConnectionIds">Die Liste der auszuschließenden Verbindungs-IDs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Sendet einen Wert an die angegebene Gruppe.</summary>
      <returns>Ein Task, der den Abschluss des Sendevorgangs darstellt.</returns>
      <param name="groupName">Der Name der Gruppe.</param>
      <param name="value">Der zu sendende Wert.</param>
      <param name="excludeConnectionIds">Die Liste der auszuschließenden Verbindungs-IDs.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hub">
      <summary>Stellt Methoden für die Kommunikation mit SignalR-Verbindungen zur Verfügung, die eine Verbindung mit einem <see cref="T:Microsoft.AspNet.SignalR.Hub" /> hergestellt haben.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hub" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Clients">
      <summary>Ruft die Clients ab, die mit SignalR-Verbindungen kommunizieren, oder legt sie fest.</summary>
      <returns>Die Clients, die mit SignalR-Verbindungen kommunizieren.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Context">
      <summary>Ruft die Informationen zum aufrufenden Client ab oder legt diese fest.</summary>
      <returns>Die Informationen zum aufrufenden Client.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose">
      <summary>Gibt alle von dieser Instanz verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose(System.Boolean)">
      <summary>Gibt alle von dieser Instanz verwendeten Ressourcen frei.</summary>
      <param name="disposing">true, wenn verwaltete und nicht verwaltete Ressourcen freigegeben werden sollen, false, wenn nur die nicht verwalteten Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Groups">
      <summary>Ruft den Gruppen-Manager für diese Hubinstanz ab oder legt ihn fest.</summary>
      <returns>Der Gruppen-Manager für diese Hubinstanz.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnConnected">
      <summary>Tritt auf, wenn die Verbindung eine Verbindung mit dieser Hubinstanz herstellt.</summary>
      <returns>Das Ergebnis des Vorgangs.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnDisconnected">
      <summary>Tritt auf, wenn eine Verbindung die Verbindung mit dieser Hubinstanz trennt.</summary>
      <returns>Das Ergebnis des Vorgangs.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnReconnected">
      <summary>Tritt auf, wenn die Verbindung erneut eine Verbindung mit dieser Hubinstanz herstellt.</summary>
      <returns>Das Ergebnis des Vorgangs.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubConfiguration">
      <summary>Stellt eine Hubkonfiguration dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubConfiguration.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors">
      <summary>Ermittelt, ob ausführliche Ausnahmen, die in Hubmethoden ausgelöst werden, zurück an den aufrufenden Client gemeldet werden.Der Standardwert ist false.</summary>
      <returns>true, wenn ausführliche Ausnahmen, die in Hubmethoden ausgelöst werden, zurück an den aufrufenden Client gemeldet werden, andernfalls false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableJavaScriptProxies">
      <summary>Bestimmt, ob JavaScript-Proxys für die serverseitigen Hubs unter {Pfad}/hubs automatisch generiert werden sollen.Der Standardwert ist true.</summary>
      <returns>true, wenn JavaScript-Proxys für die serverseitigen Hubs unter {Pfad}/hubs automatisch generiert werden sollen, andernfalls false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubException"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String,System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.HubException.ErrorData"></member>
    <member name="T:Microsoft.AspNet.SignalR.HubPipelineExtensions">
      <summary>Stellt Erweiterungsmethoden zum Hinzufügen benutzerdefinierter Funktionen zu den Datentypen zur Verfügung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubPipelineExtensions.RequireAuthentication(Microsoft.AspNet.SignalR.Hubs.IHubPipeline)">
      <summary>Wenn Authentifizierung erforderlich ist, wird dem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />-Objekt ein <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> mit <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection" />- und <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation" />-Autorisierern hinzugefügt, die global auf alle Hubs und Hubmethoden angewendet werden.Diese Autorisierer erfordern, dass die <see cref="T:System.Security.Principal.IIdentity" /> von <see cref="T:System.Security.Principal.IPrincipal" /> den Wert IsAuthenticated für alle Clients aufweist, die serverseitige Hubmethoden aufrufen oder clientseitige Hubmethodenaufrufe empfangen.</summary>
      <param name="pipeline">Das <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />-Objekt, dem das <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> hinzugefügt wird.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnection">
      <summary>Ein Komunikationskanal für ein <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekt und seine Verbindungen.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IConnection.DefaultSignal">
      <summary>Das Hauptsignal für diese Verbindung.Dies ist das Haupt-SignalR für ein <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekt.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Sendet eine Nachricht an Verbindungen, die das Signal abonniert haben.</summary>
      <returns>Ein Task, dessen Rückgabewert erfolgt, nachdem die Nachricht gesendet wurde.</returns>
      <param name="message">Die zu sendende Nachricht.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnectionGroupManager">
      <summary>Verwaltet Gruppen für eine Verbindung und ermöglicht das Senden von Nachrichten an die Gruppe.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Sendet einen Wert an die angegebenen Gruppen.</summary>
      <returns>Ein Task, der den Abschluss des Sendevorgangs darstellt.</returns>
      <param name="groupNames">Die Namen der Gruppen.</param>
      <param name="value">Der zu sendende Wert.</param>
      <param name="excludeConnectionIds">Die Liste der auszuschließenden Verbindungs-IDs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Sendet einen Wert an die angegebene Gruppe.</summary>
      <returns>Ein Task, der den Abschluss des Sendevorgangs darstellt.</returns>
      <param name="groupName">Der Name der Gruppe.</param>
      <param name="value">Der zu sendende Wert.</param>
      <param name="excludeConnectionIds">Die Liste der auszuschließenden Verbindungs-IDs.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IDependencyResolver">
      <summary>Stellt eine Schnittstelle zur Verfügung, die den Abhängigkeitskonfliktlöser für SignalR darstellt.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetService(System.Type)">
      <summary>Gibt den Dienst für den angegebenen Typ zurück.</summary>
      <returns>Der zurückgegebene Dienst.</returns>
      <param name="serviceType">Der Typ des zurückzugebenden Diensts.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetServices(System.Type)">
      <summary>Gibt die Dienste für den angegebenen Typ zurück.</summary>
      <returns>Die zurückgegebenen Dienste.</returns>
      <param name="serviceType">Der Typ des zurückzugebenden Diensts.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Registriert eine Liste von Diensten für den angegebenen Typ.</summary>
      <param name="serviceType">Der Typ des zu registrierenden Diensts.</param>
      <param name="activators">Eine Liste der zu delegierenden Funktionen, die einen Parameter annimmt, der den zu aktivierenden Dienst darstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Registriert einen Dienst für den angegebenen Typ.</summary>
      <param name="serviceType">Der Typ des zu registrierenden Diensts.</param>
      <param name="activator">Eine zu delegierende Funktion, die einen Parameter annimmt, der den zu aktivierenden Dienst darstellt.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IGroupManager">
      <summary>Verwaltet Gruppen für eine Verbindung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Add(System.String,System.String)">
      <summary>Fügt der angegebenen Gruppe eine Verbindung hinzu.</summary>
      <returns>Ein Task, der das Hinzufügen der Verbindungs-ID zur Gruppe darstellt.</returns>
      <param name="connectionId">Die Verbindungs-ID, die der Gruppe hinzugefügt werden soll.</param>
      <param name="groupName">Der Name der Gruppe.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Remove(System.String,System.String)">
      <summary>Entfernt eine Verbindung aus der angegebenen Gruppe.</summary>
      <returns>Ein Task, der das Entfernen der Verbindungs-ID aus der Gruppe darstellt.</returns>
      <param name="connectionId">Die Verbindungs-ID, die aus der Gruppe entfernt werden soll.</param>
      <param name="groupName">Der Name der Gruppe.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IHubContext">
      <summary>Stellt Zugriff auf Informationen zu einem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />-Objekt zur Verfügung.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Clients">
      <summary>Kapselt alle Informationen zu einer SignalR-Verbindung mit einem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Groups">
      <summary>Ruft das <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" />-Objekt für den Hub ab.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" /> zurück.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext">
      <summary>Stellt Zugriff auf Informationen zu einem <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekt zur Verfügung.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Connection">
      <summary>Ruft das <see cref="T:Microsoft.AspNet.SignalR.IConnection" />-Objekt für die <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> ab.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Groups">
      <summary>Ruft das <see cref="T:Microsoft.AspNet.SignalR.IConnectionGroupManager" />-Objekt für die <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> ab.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IRequest">
      <summary>Stellt eine SignalR-Anforderung dar.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Cookies">
      <summary>Ruft die Cookies für die Clientverbindung ab.</summary>
      <returns>Die Cookies für die Clientverbindung.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Environment">
      <summary>Ruft die OWIN-Umgebung ab.</summary>
      <returns>Die OWIN-Umgebung.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Headers">
      <summary>Ruft die Header für die Anforderungen ab oder legt sie fest.</summary>
      <returns>Die Header für die Anforderungen.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.LocalPath">
      <summary>Ruft den lokalen Pfadanteil der URL ab.</summary>
      <returns>Der lokale Pfadanteil der URL.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.QueryString">
      <summary>Ruft die Auflistung der IRequest-Abfragezeichenfolgenvariablen ab.</summary>
      <returns>Die Auflistung von IRequest-Abfragezeichenfolgenvariablen.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IRequest.ReadForm">
      <summary>Liest das Formular HTTP-Anforderung.</summary>
      <returns>Das Formular der zu lesenden HTTP-Anforderung.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Url">
      <summary>Ruft den URI für IRequest ab.</summary>
      <returns>Der URI für IRequest.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.User">
      <summary>Ruft den Prinzipalbenutzer für IRequest ab.</summary>
      <returns>Der Prinzipalbenutzer für IRequest.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.IUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.PersistentConnection">
      <summary> Stellt eine Verbindung zwischen dem Client und dem Server dar. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.AckHandler">
      <summary>Ruft den ACK-Handler für diese Verbindung ab bzw. legt ihn fest.</summary>
      <returns>Der ACK-Handler dieser Verbindung.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Authorize(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Ermittelt, ob diese Verbindung autorisiert ist.</summary>
      <returns>True, wenn die Verbindung autorisiert ist, andernfalls False.</returns>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Ermittelt, ob die Anforderung für die Verbindung autorisiert ist.</summary>
      <returns>True, wenn die Anforderung für die Verbindung autorisiert ist, andernfalls False.</returns>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Connection">
      <summary>Ruft die Verbindung ab bzw. legt diese fest.</summary>
      <returns>Die Verbindung.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Counters">
      <summary>Ruft den Leistungsindikator-Manager ab bzw. legt ihn fest.</summary>
      <returns>Der Leistungsindikator-Manager.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.GetSignals(System.String,System.String)">
      <summary>Gibt die Signale zurück, die in <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> verwendet werden.</summary>
      <returns>Die für dieses <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekt verwendeten Signale.</returns>
      <param name="userId">Die Benutzer-ID für die aktuelle Verbindung.</param>
      <param name="connectionId">Die ID der eingehenden Verbindung.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Groups">
      <summary>Ruft die Verbindungsgruppen ab bzw. legt diese fest.</summary>
      <returns>Die Verbindungsgruppen.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.JsonSerializer">
      <summary>Ruft den JSON-Serialisierer ab bzw. legt ihn fest.</summary>
      <returns>Der JSON-Serialisierer.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.MessageBus">
      <summary>Ruft den Nachrichtenbus für die Verbindung ab  bzw. legt ihn fest.</summary>
      <returns>Der Nachrichtenbus für die Verbindung.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Wird aufgerufen, wenn eine neue Verbindung hergestellt wird.</summary>
      <returns>Ein <see cref="T:System.Threading.Tasks.Task" />-Objekt, das abgeschlossen wird, nachdem der Verbindungsvorgang abgeschlossen ist.</returns>
      <param name="request">Die Anforderung für die aktuelle Verbindung.</param>
      <param name="connectionId">Die ID des Clients, der erneut eine Verbindung herstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Wird aufgerufen, wenn eine Verbindung getrennt wird.</summary>
      <returns>Die <see cref="T:System.Threading.Tasks.Task" />, die abgeschlossen wird, nachdem der Trennungsvorgang abgeschlossen ist.</returns>
      <param name="request">Die Anforderung für die aktuelle Verbindung.</param>
      <param name="connectionId">Die ID des getrennten Clients.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Wird aufgerufen, wenn Daten von einer Verbindung empfangen werden.</summary>
      <returns>Ein <see cref="T:System.Threading.Tasks.Task" />-Objekt, das abgeschlossen wird, nachdem der Empfangsvorgang abgeschlossen ist.</returns>
      <param name="request">Die Anforderung für die aktuelle Verbindung.</param>
      <param name="connectionId">Die ID der Verbindung, die die Daten sendet.</param>
      <param name="data">Die an die Verbindung gesendete Nutzlast.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Wird aufgerufen, wenn eine Verbindung nach einem Timeout erneut hergestellt wird.</summary>
      <returns>Ein <see cref="T:System.Threading.Tasks.Task" />-Objekt, das abgeschlossen wird, nachdem der erneute Verbindungsvorgang abgeschlossen ist.</returns>
      <param name="request">Die Anforderung für die aktuelle Verbindung.</param>
      <param name="connectionId">Die ID des Clients, der erneut eine Verbindung herstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Wird aufgerufen, wenn eine Verbindung nach einem Timeout erneut hergestellt wird, um zu ermitteln, welche Gruppen erneut hinzugefügt werden sollen.</summary>
      <returns>Eine Auflistung von Gruppennamen, die beim erneuten Herstellen einer Verbindung hinzugefügt werden sollen.</returns>
      <param name="request">Die Anforderung für die aktuelle Verbindung.</param>
      <param name="groups">Die Gruppen, von denen die aufrufende Verbindung angibt, ein Teil zu sein.</param>
      <param name="connectionId">Die ID des Clients, der erneut eine Verbindung herstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Verarbeitet alle Anforderungen für <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekte.</summary>
      <returns>Ein <see cref="T:System.Threading.Tasks.Task" />-Objekt, das abgeschlossen wird, nachdem die <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Pipeline abgeschlossen ist.</returns>
      <param name="context">Der <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> für die aktuelle Anforderung.</param>
      <exception cref="InvalidOperationException">Wird ausgelöst, wenn die Verbindung nicht initialisiert wurde.Wird ausgelöst, wenn der Transport nicht angegeben wurde.Wird ausgelöst, wenn die Verbindungs-ID nicht angegeben wurde.</exception>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Der OWIN-Einstiegspunkt.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.ProtectedData">
      <summary>Ruft die geschützten Daten dieser Verbindung ab bzw. legt sie fest.</summary>
      <returns>Die geschützten Daten dieser Verbindung.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Trace">
      <summary>Ruft die Quelle der Verbindung ab.</summary>
      <returns>Die Quelle der Verbindung.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.TraceManager">
      <summary>Ruft den Ablaufverfolgungs-Manager ab bzw. legt ihn fest.</summary>
      <returns>Der Ablaufverfolgungs-Manager.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Transport">
      <summary>Ruft den Transport ab, der dieser Verbindung zugeordnet ist, bzw. legt ihn fest.</summary>
      <returns>Der Transport, der dieser Verbindung zugeordnet ist.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.UserIdProvider"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager">
      <summary>Bietet Zugriff auf den Manager für die Serverstandardkonfiguration.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.ConnectionTimeout">
      <summary>Ruft ein TimeSpan-Objekt ab, das die Zeitspanne darstellt, die eine Verbindung geöffnet bleiben darf, bevor ein Timeout auftritt, bzw. legt dieses Objekt fest.</summary>
      <returns>Ein TimeSpan-Objekt, das die Zeitspanne angibt, für die eine Verbindung geöffnet bleiben kann, bevor ein Timeout auftritt.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DefaultMessageBufferSize">
      <summary>Ruft die Anzahl der für ein bestimmtes Signal zu puffernden Nachrichten ab oder legt diese fest.</summary>
      <returns>Die Anzahl der für ein bestimmtes Signal zu puffernden Nachrichten.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DisconnectTimeout">
      <summary>Ruft ein TimeSpan-Objekt ab, das die Zeitspanne darstellt, die gewartet wird, nachdem eine Verbindung getrennt wurde, bevor das Trennungsereignis ausgelöst wird, bzw. legt dieses Objekt fest.</summary>
      <returns>Ein TimeSpan-Objekt, das die Zeitspanne darstellt, die gewartet wird, nachdem eine Verbindung getrennt wurde, bevor das Trennungsereignis ausgelöst wird.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.KeepAlive">
      <summary>Ruft ein TimeSpan-Objekt ab, das die Zeitspanne zwischen dem Senden von Keep-Alive-Nachrichten darstellt, bzw. legt dieses Objekt fest.Wenn diese Option aktiviert wird, muss dieser Wert mindestens zwei Sekunden betragen.Legen Sie den Wert zum Deaktivieren auf null fest.</summary>
      <returns>Ein TimeSpan-Objekt, das die Zeitspanne zwischen dem Senden von Keep-Alive-Nachrichten darstellt.Wenn diese Option aktiviert wird, muss dieser Wert mindestens zwei Sekunden betragen.Legen Sie den Wert zum Deaktivieren auf null fest.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.LongPollDelay"></member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.TransportConnectTimeout"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager">
      <summary>Bietet Zugriff auf die Serverkonfiguration.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.ConnectionTimeout">
      <summary>Ruft ein <see cref="T:System.TimeSpan" />-Objekt ab, das die Zeitspanne darstellt, die eine Verbindung geöffnet bleiben darf, bevor ein Timeout auftritt, bzw. legt diesen Wert fest.</summary>
      <returns>Ein <see cref="T:System.TimeSpan" />-Objekt, das die Zeitspanne angibt, für die eine Verbindung geöffnet bleiben kann, bevor ein Timeout auftritt.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DefaultMessageBufferSize">
      <summary>Ruft die Anzahl der für ein bestimmtes Signal zu puffernden Nachrichten ab oder legt diese fest.</summary>
      <returns>Die Anzahl der für ein bestimmtes Signal zu puffernden Nachrichten.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DisconnectTimeout">
      <summary>Ruft ein <see cref="T:System.TimeSpan" />-Objekt ab, das die Zeitspanne darstellt, die gewartet wird, nachdem eine Verbindung getrennt wurde, bevor das Trennungsereignis ausgelöst wird, bzw. legt diesen Wert fest.</summary>
      <returns>Ein <see cref="T:System.TimeSpan" />-Objekt, das die Zeitspanne darstellt, die gewartet wird, nachdem eine Verbindung getrennt wurde, bevor das Trennungsereignis ausgelöst wird.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.KeepAlive">
      <summary>Ruft ein <see cref="T:System.TimeSpan" />-Objekt ab, das die Zeitspanne zwischen dem Senden von Keep-Alive-Nachrichten darstellt, bzw. legt dieses Objekt fest.Wenn diese Option aktiviert wird, muss dieser Wert mindestens zwei Sekunden betragen.Legen Sie den Wert zum Deaktivieren auf null fest.</summary>
      <returns>Ein <see cref="T:System.TimeSpan" />-Objekt, das die Zeitspanne zwischen dem Senden von Keep-Alive-Nachrichten darstellt.Wenn diese Option aktiviert wird, muss dieser Wert mindestens zwei Sekunden betragen.Legen Sie den Wert zum Deaktivieren auf null fest.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.LongPollDelay">
      <summary>Ruft ein <see cref="T:System.TimeSpan" />-Objekt ab, das den Client informiert, wie lange er warten soll, bevor er eine Verbindung für eine lange Abfrage erneut hergestellt wird, nachdem Daten vom Server gesendet wurden, bzw. legt dieses Objekt fest.Der Standardwert ist 0.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.TransportConnectTimeout">
      <summary>Ruft ein <see cref="T:System.TimeSpan" />-Objekt ab, das die Zeitspanne darstellt, die der Client für das Herstellen einer Verbindung vorsieht, bevor ein Fallback auf einen anderen Transport bzw. ein Fehler auftritt, oder legt dieses Objekt fest.Der Standardwert beträgt 5 Sekunden.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostContext">
      <summary>Stellt den Kontext für den SignalR-Host dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(Microsoft.AspNet.SignalR.IRequest,Microsoft.AspNet.SignalR.Hosting.IResponse)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />-Klasse.</summary>
      <param name="environment">Die Umgebung des SignalR-Hosts.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Environment">
      <summary>Ruft die Umgebung des SignalR-Hosts ab.</summary>
      <returns>Die Umgebung des SignalR-Hosts.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Request"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Response"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions">
      <summary>Stellt den Host für die Erweiterungen des Abhängigkeitskonfliktlösers dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions.InitializeHost(Microsoft.AspNet.SignalR.IDependencyResolver,System.String,System.Threading.CancellationToken)">
      <summary>Initialisiert den Host für die Erweiterungen des Abhängigkeitskonfliktlösers.</summary>
      <param name="resolver">Der IDependencyResolver.</param>
      <param name="instanceName">Der Name der Instanz.</param>
      <param name="hostShutdownToken">Das Token zum Herunterfahren des Hosts.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.INameValueCollection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Get(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.GetValues(System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Item(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.IResponse">
      <summary>Stellt eine Verbindung mit dem Client dar.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.CancellationToken">
      <summary>Ruft ein Abbruchtoken ab, das die Lebensdauer des Clients darstellt.</summary>
      <returns>Ein Abbruchtoken, das die Lebensdauer des Clients darstellt.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.ContentType">
      <summary>Ruft den Inhaltstyp der Antwort ab bzw. legt diesen fest.</summary>
      <returns>Der Inhaltstyp der Antwort.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Flush">
      <summary>Überträgt die gepufferte Antwort an den Client.</summary>
      <returns>Ein Task, der den Übertragungsvorgang der Daten darstellt.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Schreibt gepufferte Daten.</summary>
      <param name="data">Die Daten, die in den Puffer geschrieben werden sollen.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory">
      <summary>Verantwortlich für das Erstellen von <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Instanzen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Erstellt eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory" />-Klasse.</summary>
      <param name="resolver">Der Abhängigkeitskonfliktlöser, der beim Erstellen des <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekts verwendet werden soll.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.CreateInstance(System.Type)">
      <summary>Erstellt mithilfe des Abhängigkeitskonfliktlösers oder des Standardkonstruktors des Typs eine Instanz des angegebenen Typs.</summary>
      <returns>Eine Instanz eines <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekts.</returns>
      <param name="connectionType">Der Typ von <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />, der erstellt werden soll.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions">
      <summary>Erweiterungsmethoden für <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions.End(Microsoft.AspNet.SignalR.Hosting.IResponse,System.String)">
      <summary>Schließt die Verbindung mit einem Client mit optionalen Daten.</summary>
      <returns>Ein Task, der den Schließvorgang der Verbindung darstellt.</returns>
      <param name="response">Das <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />-Objekt.</param>
      <param name="data">Die Daten, die in die Verbindung geschrieben werden sollen.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule">
      <summary>Wendet Autorisierungsattribute aus der Klasse <see cref="T:Microsoft.AspNet.SignalR.Hub" /> für die Ermittlung an, ob Clients vom Hub gesendete Nachrichten empfangen dürfen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor(Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection,Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />-Klasse.</summary>
      <param name="globalConnectionAuthorizer">Der globale Verbindungsautorisierer.</param>
      <param name="globalInvocationAuthorizer">Der globale Aufrufautorisierer.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die aufgerufen werden soll, bevor ein Client Signale abonniert, die zu dem durch <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> beschriebenen Hub gehören.Standardmäßig sucht <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> auf dem Hub nach Attributen, um zu ermitteln, ob der Client autorisiert ist, Methodenaufrufe für den beschriebenen Hub zu abonnieren.Die Funktion gibt true zurück, wenn der Client autorisiert ist, clientseitige Hubmethodenaufrufe zu abonnieren. Andernfalls wird false zurückgegeben.</summary>
      <returns>Eine Wrapperfunktion, die vorschreibt, ob der Client autorisiert ist, eine Verbindung mit dem beschriebenen Hub herzustellen.</returns>
      <param name="authorizeConnect">Eine Funktion, die vorschreibt, ob der Client autorisiert ist, eine Verbindung mit dem beschriebenen Hub herzustellen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die eine serverseitige Hubmethode aufruft.Selbst wenn ein Client nicht autorisiert wurde, eine Verbindung mit einem Hub herzustellen, ist er autorisiert, serverseitige Methoden auf einem Hub aufzurufen. Dies gilt nur dann nicht, wenn dies in <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> durch die Nichtausführung des Aufrufparameters verhindert wird.</summary>
      <returns>Eine Wrapperfunktion, die eine serverseitige Hubmethode aufruft.</returns>
      <param name="invoke">Eine Funktion, die eine serverseitige Hubmethode aufruft.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation">
      <summary>Beschreibt einen clientseitigen Hubmethodenaufruf.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Args">
      <summary>Ruft die Argumentliste ab, mit der die clientseitige Hubmethode aufgerufen wird, oder legt sie fest.</summary>
      <returns>Die Argumentliste, die der clientseitigen Hubmethode zugeordnet ist.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Hub">
      <summary>Ruft den Namen des Hubs ab, zu dem die aufgerufene Methode gehört, oder legt ihn fest.</summary>
      <returns>Der Name des Hubs, zu dem die aufgerufene Methode gehört.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Method">
      <summary>Ruft den Namen der aufzurufenden clientseitigen Hubmethode ab oder legt ihn fest.</summary>
      <returns>Der Name der aufzurufenden clientseitigen Hubmethode.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.State">
      <summary>Ruft einen Schlüsselwertspeicher ab, der den Hubstatus auf dem Server darstellt, der sich seit dem letzten Senden des Hubstatus an den Client geändert hat, oder legt ihn fest.</summary>
      <returns>Ein Schlüsselwertspeicher, der den Hubstatus auf dem Server darstellt.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy">
      <summary>Stellt einen serverseitigen Proxy für den clientseitigen Hub dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])">
      <summary>Ruft eine Methode für die durch die <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy" />-Instanz dargestellte(n) Verbindung(en) auf.</summary>
      <returns>Ein Task, der den abgeschlossenen Sendevorgang der Daten an den Client darstellt.</returns>
      <param name="method">Der Name der aufzurufenden Methode.</param>
      <param name="args">Die Argumente, die an den Client übergeben werden sollen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Führt die Methode <see cref="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])" /> aus.</summary>
      <returns>Immer true.</returns>
      <param name="binder">Die Informationen, die die Bindungssemantik und die Details des clientseitigen Hubvorgangs enthalten.</param>
      <param name="args">Die Argumente, die während des Aufrufvorgangs an das Objektelement übergeben werden.</param>
      <param name="result">Der Rückgabewert dieser Methode ist das Ergebnis des Elementaufrufs.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy">
      <summary>Stellt einen Verbindungs-ID-Proxy für den clientseitigen Hub dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String[])"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator">
      <summary>Stellt den Standardassemblylocator dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.GetAssemblies">
      <summary>Ruft die für die aktuelle Anwendungsdomäne geladenen Assemblys ab.</summary>
      <returns>Ein Array aus Assemblys in der aktuellen Anwendungsdomäne.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator">
      <summary>Stellt den Standardaktivator für SignalR-Hubs dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator" />-Klasse.</summary>
      <param name="resolver">Der Abhängigkeitskonfliktlöser.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Erstellt einen neuen Hubaktivator.</summary>
      <returns>Der erstellte Hubaktivator.</returns>
      <param name="descriptor">Der Deskriptor.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager">
      <summary>Stellt einen Hub-Standardmanager dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager" />-Klasse.</summary>
      <param name="resolver">Der Hubkonfliktlöser.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHub(System.String)">
      <summary>Ruft einen einzelnen Hubdeskriptor ab.</summary>
      <returns>Der Hubdeskriptor, wenn ein solcher gefunden wurde, andernfalls null.</returns>
      <param name="hubName">Der Name des Hubs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Versucht, eine Methode mit einem angegebenen Namen für einen angegebenen Hub abzurufen.</summary>
      <returns>Der Deskriptor der Methode, wenn ein solcher gefunden wurde.Andernfalls null.</returns>
      <param name="hubName">Der Name des Hubs.</param>
      <param name="method">Der Name der zu suchenden Methode.</param>
      <param name="parameters">Der Methodenparameter, mit dem verglichen werden soll.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Ruft alle verfügbaren Methoden ab, die für einen angegebenen Hub aufgerufen werden können.</summary>
      <returns>Die Liste der verfügbaren Methoden.</returns>
      <param name="hubName">Der Name des Hubs.</param>
      <param name="predicate">Ein optionales Prädikat zum Filtern der Ergebnisse.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Ruft alle verfügbaren Hubs ab, die mit dem angegebenen Prädikat übereinstimmen.</summary>
      <returns>Die Liste der Hubdeskriptoren.</returns>
      <param name="predicate">Das Prädikat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHub(System.String)">
      <summary>Löst einen angegebenen Hubnamen in ein konkretes Objekt auf.</summary>
      <returns>Die Hubimplementierungsinstanz, wenn eine solche gefunden wurde.Andernfalls null.</returns>
      <param name="hubName">Der Name des Hubs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHubs">
      <summary>Löst alle verfügbaren Hubs in ihre konkreten Objekte auf.</summary>
      <returns>Die Liste der Hubinstanzen.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator">
      <summary>Stellt einen Generator für JavaScript-Standardproxys dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubManager,Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />-Klasse.</summary>
      <param name="manager">Der Hub-Manager.</param>
      <param name="javaScriptMinifier">Der JavaScript-Minifier.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />-Klasse.</summary>
      <param name="resolver">Der Abhängigkeitskonfliktlöser.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Erstellt einen angegebenen Proxy.</summary>
      <returns>Der erstellte Proxy.</returns>
      <param name="serviceUrl">Die Dienst-URL.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String,System.Boolean)">
      <summary>Erstellt einen angegebenen Proxy.</summary>
      <returns>Der erstellte Proxy.</returns>
      <param name="serviceUrl">Die Dienst-URL.</param>
      <param name="includeDocComments">True, wenn Dokumentkommentare eingeschlossen sind, andernfalls False.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver">
      <summary>Stellt den Standardkonfliktlöser für den Hubparameter dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Löst Methodenparameterwerte basierend auf den bereitgestellten Objekten auf.</summary>
      <returns>Das Array der Parameterwerte.</returns>
      <param name="method">Der Methodendeskriptor.</param>
      <param name="values">Die Liste der Werte, anhand derer Parameterwerte aufgelöst werden sollen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveParameter(Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor,Microsoft.AspNet.SignalR.Json.IJsonValue)">
      <summary>Löst einen Parameterwert basierend auf dem bereitgestellten Objekt auf.</summary>
      <returns>Der Parameterwert.</returns>
      <param name="descriptor">Der Parameterdeskriptor.</param>
      <param name="value">Der Wert, aus dem der Parameterwert aufgelöst werden soll.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.Descriptor">
      <summary>Beschreibt die Informationen des Hubs.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.Descriptor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.Descriptor" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.Name">
      <summary>Ruft den Hubnamen ab oder legt diesen fest.</summary>
      <returns>Der Hubname.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.NameSpecified">
      <summary>Ruft einen Wert ab, der angibt, ob ein Hubattributname angegeben wurde, oder legt ihn fest.</summary>
      <returns>true, wenn ein Hubattributname angegeben wurde, andernfalls false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary">
      <summary>Enthält ein Objekt des Wörterbuchs zum Speichern der Schlüssel-Wert-Paare und setzt die Methoden TrySetMember und TryGetMember außer Kraft, um die neue Syntax zu unterstützen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary" />-Klasse.</summary>
      <param name="obj">Das Wörterbuchobjekt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Fügt dem Wörterbuch ein angegebenes Schlüssel-Wert-Paar-Objekt hinzu.</summary>
      <param name="item">Das hinzuzufügende Schlüssel-Wert-Paar-Objekt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.String,System.Object)">
      <summary>Fügt dem Wörterbuch den angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des hinzuzufügenden Elements.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Clear">
      <summary>Entfernt alle Schlüssel und Werte aus dem Wörterbuch.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Bestimmt, ob das Wörterbuch ein bestimmtes Schlüssel-Wert-Paar-Element enthält.</summary>
      <returns>true, wenn das Wörterbuch ein Element mit dem angegebenen Wert enthält, andernfalls false.</returns>
      <param name="item">Das Schlüssel-Wert-Paar-Element, das im Wörterbuch gesucht werden soll.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.ContainsKey(System.String)">
      <summary>Bestimmt, ob das Wörterbuch den angegebenen Schlüssel enthält.</summary>
      <returns>true, wenn das Wörterbuch den angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel, der im Wörterbuch gesucht werden soll.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Kopiert die Elemente der Schlüssel-Wert-Paare ab dem angegebenen Arrayindex in ein vorhandenes eindimensionales Array.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der Elemente ist, die auf dem Wörterbuch kopiert werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im Array, an dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Count">
      <summary>Ruft die Anzahl der Elemente im Wörterbuch ab.</summary>
      <returns>Die Anzahl der Elemente im Wörterbuch.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der das Wörterbuch durchläuft.</summary>
      <returns>Der Enumerator, der das Wörterbuch durchläuft.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.IsReadOnly">
      <summary>Ruft ab, ob das dynamische Wörterbuch schreibgeschützt ist.</summary>
      <returns>true, wenn das dynamische Wörterbuch schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Item(System.String)">
      <summary>Ruft das Element mit dem angegebenen Schlüssel im Wörterbuch ab oder legt es fest.</summary>
      <returns>Das Element mit dem angegebenen Schlüssel im Wörterbuch.</returns>
      <param name="key">Der Schlüssel des Elements.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Keys">
      <summary>Ruft eine Auflistung von im Wörterbuch enthaltenen Schlüsseln ab.</summary>
      <returns>Eine Auflistung von im Wörterbuch enthaltenen Schlüsseln.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Entfernt ein bestimmtes Element des Schlüssel-Wert-Paars aus dem Wörterbuch.</summary>
      <returns>Das Wörterbuch mit dem entfernten Element.</returns>
      <param name="item">Das zu entfernende Element.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.String)">
      <summary>Entfernt einen bestimmten Schlüssel aus dem Wörterbuch.</summary>
      <returns>Das Wörterbuch mit dem entfernten Schlüssel.</returns>
      <param name="key">Der zu entfernende Schlüssel.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Der Enumerator, der eine Auflistung durchläuft.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Stellt die Implementierung für Vorgänge zur Verfügung, die Elementwerte abrufen.</summary>
      <returns>true, wenn der Vorgang erfolgreich ist, andernfalls false.</returns>
      <param name="binder">Stellt Informationen zum Objekt zur Verfügung, das den dynamischen Vorgang aufgerufen hat.</param>
      <param name="result">Das Ergebnis Abrufvorgangs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist.</summary>
      <returns>true, wenn das Wörterbuch ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel des abzurufenden Werts.</param>
      <param name="value">Bei Rückgabe dieser Methode enthält sie den dem angegebenen Schlüssel zugeordneten Wert, wenn der Schlüssel gefunden wurde, andernfalls enthält sie den Standardwert für den Typ des Wertparameters.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Stellt die Implementierung für Vorgänge zur Verfügung, die Elementwerte festlegen.</summary>
      <returns>true, wenn der Vorgang erfolgreich ist, andernfalls false.</returns>
      <param name="binder">Stellt Informationen zum Objekt zur Verfügung, das den dynamischen Vorgang aufgerufen hat.</param>
      <param name="value">Der Wert, auf den das Element festgelegt werden soll.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Unwrap(System.Object)">
      <summary>Entfernt den Wrapper eines angegebenen Werts, der dem Wörterbuch zugeordnet ist.</summary>
      <returns>Der Wert, dessen Wrapper entfernt wurde.</returns>
      <param name="value">Der Wert, dessen Wrapper entfernt werden soll.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Values">
      <summary>Ruft eine Auflistung von im Wörterbuch enthaltenen Werten ab.</summary>
      <returns>Eine Auflistung von im Wörterbuch enthaltenen Werten.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Wrap(System.Object)">
      <summary>Versieht einen angegebenen Wert, der dem Wörterbuch zugeordnet ist, mit einem Wrapper.</summary>
      <returns>Der mit einem Wrapper versehene Wert.</returns>
      <param name="value">Der zu umschließende Wert.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator">
      <summary>Stellt einen Generator für leere JavaScript-Proxys dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Erstellt einen Proxy mit der angegebenen URL.</summary>
      <returns>Der erstellte Proxy.</returns>
      <param name="serviceUrl">Die Dienst-URL.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator">
      <summary>Stellt das aufzählbare Objekt dar, das dem Assemblylocator zugeordnet ist.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator" />-Klasse.</summary>
      <param name="assemblies">Die Assemblys.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.GetAssemblies">
      <summary>Gibt die Liste der Assemblys zurück.</summary>
      <returns>Die Liste der Assemblys.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ExceptionContext"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.#ctor(System.Exception)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Error">
      <summary>Die Ausnahme, die an den aufrufenden Client gesendet werden soll.Dieser Wert wird nur dann nicht von einer generischen Ausnahme außer Kraft gesetzt, wenn der Fehler eine <see cref="T:Microsoft.AspNet.SignalR.HubException" /> oder <see cref="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors" /> auf true festgelegt ist.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Result">
      <summary>Der Wert, der zurückgegeben werden soll, anstatt einen Fehler auszulösen.Wenn Result festgelegt ist, wird Error auf null festgelegt.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.GroupProxy">
      <summary>Stellt eine Gruppe von Signalproxys dar, die vom Hub verwendet werden.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.GroupProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext">
      <summary>Stellt den aufrufenden Kontext des Clients dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.#ctor(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" />-Klasse.</summary>
      <param name="request">Die aktuelle HTTP-Anforderung.</param>
      <param name="connectionId">Die Verbindungs-ID.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.ConnectionId">
      <summary>Ruft die Verbindungs-ID des aufrufenden Clients ab.</summary>
      <returns>Die Verbindungs-ID des aufrufenden Clients.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Headers">
      <summary>Ruft die Header für die Anforderung ab.</summary>
      <returns>Die Header für die Anforderung.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.QueryString">
      <summary>Ruft die Abfragezeichenfolge für die Anforderung ab.</summary>
      <returns>Die Abfragezeichenfolge für die Anforderung.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Request">
      <summary>Ruft das <see cref="T:Microsoft.AspNet.SignalR.IRequest" />-Objekt für die aktuelle HTTP-Anforderung ab.</summary>
      <returns>Das <see cref="T:Microsoft.AspNet.SignalR.IRequest" />-Objekt für die aktuelle HTTP-Anforderung.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.RequestCookies">
      <summary>Ruft die Cookies für die Anforderung ab.</summary>
      <returns>Die Cookies für die Anforderung.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.User">
      <summary>Ruft das <see cref="T:System.Security.Principal.IPrincipal" />-Objekt für die Anforderung ab.</summary>
      <returns>Das <see cref="T:System.Security.Principal.IPrincipal" />-Objekt für die Anforderung.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext">
      <summary>Kapselt alle Informationen zu einer einzelnen SignalR-Verbindung mit einem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,Microsoft.AspNet.SignalR.IConnection,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />-Klasse.</summary>
      <param name="pipelineInvoker">Die aufrufende Pipelineinstanz.</param>
      <param name="connection">Die Schnittstellenverbindung.</param>
      <param name="hubName">Der Name des Hubs.</param>
      <param name="connectionId">Die Verbindungs-ID.</param>
      <param name="tracker">Die Nachverfolgung der Statusänderung.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Caller">
      <summary>Ruft den aufrufenden Client ab oder legt ihn fest.</summary>
      <returns>Der aufrufende Client.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Others">
      <summary>Ruft alle verbundenen Clients mit Ausnahme des aufrufenden Clients ab oder legt sie fest.</summary>
      <returns>Alle verbundenen Clients mit Ausnahme des aufrufenden Clients.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroup(System.String)">
      <summary>Gibt eine dynamische Darstellung aller Clients in einer Gruppe mit Ausnahme des aufrufenden Clients zurück.</summary>
      <returns>Eine dynamische Darstellung aller Clients in einer Gruppe mit Ausnahme des aufrufenden Clients.</returns>
      <param name="groupName">Der Name der Gruppe.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})">
      <summary>Gibt eine dynamische Darstellung aller Clients in den angegebenen Gruppen mit Ausnahme des aufrufenden Clients zurück.</summary>
      <returns>Eine dynamische Darstellung aller Clients in einer Gruppe mit Ausnahme des aufrufenden Clients.</returns>
      <param name="groupNames">Der Name der Gruppen.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.All"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.AllExcept(System.String[])">
      <summary>Gibt eine dynamische Darstellung aller Clients mit Ausnahme der angegebenen aufrufenden Clients zurück.</summary>
      <returns>Eine dynamische Darstellung aller Clients mit Ausnahme der angegebenen aufrufenden Clients.</returns>
      <param name="excludeConnectionIds">Die Liste der auszuschließenden Verbindungs-IDs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Client(System.String)">
      <summary>Gibt eine dynamische Darstellung der Verbindung mit der angegebenen Verbindungs-ID zurück.</summary>
      <returns>Eine dynamische Darstellung des angegebenen Clients.</returns>
      <param name="connectionId">Die Verbindungs-ID.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Clients(System.Collections.Generic.IList{System.String})">
      <summary>Gibt eine dynamische Darstellung der Verbindungen mit den angegebenen Verbindungs-IDs zurück.</summary>
      <returns>Eine dynamische Darstellung der angegebenen Clients.</returns>
      <param name="connectionIds">Die Verbindungs-IDs.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Group(System.String,System.String[])">
      <summary>Gibt eine dynamische Darstellung der angegebenen Gruppe zurück.</summary>
      <returns>Eine dynamische Darstellung der angegebenen Gruppe.</returns>
      <param name="groupName">Der Name der Gruppe.</param>
      <param name="excludeConnectionIds">Die Liste der auszuschließenden Verbindungs-IDs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Groups(System.Collections.Generic.IList{System.String},System.String[])">
      <summary>Gibt eine dynamische Darstellung der angegebenen Gruppen zurück.</summary>
      <returns>Eine dynamische Darstellung der angegebenen Gruppen.</returns>
      <param name="groupNames">Die Namen der Gruppen.</param>
      <param name="excludeConnectionIds">Die Liste der auszuschließenden Verbindungs-IDs.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.HubName"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Invoker"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor">
      <summary>Stellt die Informationen zu einem einzelnen Hub dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.CreateQualifiedName(System.String)">
      <summary>Erstellt einen qualifizierten Hubnamen für den Hub mithilfe des angegebenen nicht qualifizierten Namens.</summary>
      <returns>Der erstellte qualifizierte Name.</returns>
      <param name="unqualifiedName">Der nicht qualifizierte Name.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.HubType">
      <summary>Ruft den Hubtyp ab oder legt ihn fest.</summary>
      <returns>Der Hubtyp.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher">
      <summary>Verarbeitet die gesamte Kommunikation über die dauerhafte Hubverbindung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.#ctor(Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />-Klasse.</summary>
      <param name="configuration">Die Konfigurationseinstellungen, die festlegen, ob JS-Proxys aktiviert und ausführliche Hubfehler für Clients bereitgestellt werden.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Erstellt eine Liste von Hubs, die für die angegebene Verbindungsanforderung autorisiert sind.</summary>
      <returns>True, wenn autorisierte Hubs vorhanden sind, andernfalls False.</returns>
      <param name="request">Die Anforderung für die aktuelle Verbindung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.GetSignals(System.String,System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Wird vom Host zum Initialisieren der Hubabfertigung für IDependencyResolver aufgerufen.</summary>
      <param name="resolver">Der IDependency-Konfliktlöser.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Wird aufgerufen, wenn die Verbindung eine Verbindung mit dieser Hubinstanz herstellt.</summary>
      <returns>Ein Task, der aufgerufen wird, wenn die Verbindung eine Verbindung mit dieser Hubinstanz herstellt.</returns>
      <param name="request">Die IRequest für die aktuelle Verbindung.</param>
      <param name="connectionId">Die ID des Clients, der erneut eine Verbindung herstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Wird aufgerufen, wenn eine Verbindung die Verbindung mit dieser Hubinstanz trennt.</summary>
      <returns>Ein Task, der aufgerufen wird, wenn eine Verbindung die Verbindung mit dieser Hubinstanz trennt.</returns>
      <param name="request">Die IRequest für die aktuelle Verbindung.</param>
      <param name="connectionId">Die ID des Clients, der erneut eine Verbindung herstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Verarbeitet die eingehenden Methodenaufrufe des Hubs.</summary>
      <returns>Ein Task, der aufgerufen wird, wenn die Daten von dieser Hubinstanz empfangen werden.</returns>
      <param name="request">Die IRequest für die aktuelle Verbindung.</param>
      <param name="connectionId">Die ID des Clients, der erneut eine Verbindung herstellt.</param>
      <param name="data">Die empfangenen Daten.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Wird aufgerufen, wenn die erneut Verbindung eine Verbindung mit dieser Hubinstanz herstellt.</summary>
      <returns>Ein Task, der aufgerufen wird, wenn die Verbindung erneut eine Verbindung mit dieser Hubinstanz herstellt.</returns>
      <param name="request">Die IRequest für die aktuelle Verbindung.</param>
      <param name="connectionId">Die ID des Clients, der erneut eine Verbindung herstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Wird aufgerufen, wenn eine Verbindung nach einem Timeout erneut hergestellt wird, um zu ermitteln, welche Gruppen erneut hinzugefügt werden sollen.</summary>
      <returns>Eine Liste der Verbindungen, die für erneute Verbindungsherstellungen nach einem Timeout verwendet werden, um zu ermitteln, welche Gruppen erneut hinzugefügt werden sollen.</returns>
      <param name="request">Die IRequest für die aktuelle Verbindung.</param>
      <param name="groups">Die Gruppen, von denen die aufrufende Verbindung angibt, ein Teil zu sein.</param>
      <param name="connectionId">Die ID des Clients, der erneut eine Verbindung herstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Verarbeitet alle Anforderungen für HostContext.</summary>
      <returns>Ein Task, der alle Anforderungen für den HostContext verarbeitet.</returns>
      <param name="context">Der Hostkontext.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Trace">
      <summary>Ruft die Hubverbindungen ab, die Anwendungen die Ablaufverfolgung der Ausführung des Codes und das Zuordnen von Ablaufverfolgungsnachrichten zu ihrer Quelle ermöglichen.</summary>
      <returns>Die Hubverbindungen, die Anwendungen die Ablaufverfolgung der Ausführung des Codes und das Zuordnen von Ablaufverfolgungsnachrichten zu ihrer Quelle ermöglichen.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions">
      <summary>Stellt eine Erweiterung des Hub-Managers für den gesamten Hubprozess zur Verfügung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.EnsureHub(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter[])">
      <summary>Stellt alle Informationen zum Hubdeskriptor sicher.</summary>
      <returns>Der Hubdeskriptor zum Sicherstellen aller Informationen.</returns>
      <param name="hubManager">Der Hub-Manager.</param>
      <param name="hubName">Der Name des Hubs.</param>
      <param name="counters">Die Leistungsindikatoren.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubMethods(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String)">
      <summary>Ruft alle verfügbaren Methoden ab, die für einen angegebenen Hub aufgerufen werden können.</summary>
      <returns>Die Auflistung der Methoden, die für einen angegebenen Hub aufgerufen werden können.</returns>
      <param name="hubManager">Der Hub-Manager.</param>
      <param name="hubName">Der Name des Hubs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubs(Microsoft.AspNet.SignalR.Hubs.IHubManager)">
      <summary>Ruft alle verfügbaren Hubs ab.</summary>
      <returns>Der Abruf aller verfügbaren Hubs.</returns>
      <param name="hubManager">Der Hub-Manager.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute">
      <summary>Stellt die Methodennamenattribute für den Hub dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute" />-Klasse.</summary>
      <param name="methodName">Der Name der Methode.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.MethodName">
      <summary>Ruft den Methodennamen ab oder legt ihn fest.</summary>
      <returns>Der Methodenname.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute">
      <summary>Stellt die Attribute für den Hubnamen dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute" />-Klasse.</summary>
      <param name="hubName">Der Name des Hubs.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.HubName">
      <summary>Ruft den Namen des Hubs ab oder legt ihn fest.</summary>
      <returns>Der Name des Hubs.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule">
      <summary>Die allgemeine Basisklasse zum Vereinfachen der Implementierung von IHubPipelineModules.Ein Modul kann verschiedene Phasen der Hubverarbeitung abfangen und anpassen, z. B. die Verbindungsherstellung, die erneute Verbindungsherstellung, die Verbindungstrennung, den Aufruf serverseitiger Hubmethoden, den Aufruf clientseitiger Hubmethoden, die Autorisierung von Hubclients und das erneute Hinzufügen von Hubgruppen.Ein Modul kann durch den Aufruf von <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" /> aktiviert werden.Die kombinierten Module, die der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, werden über die <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />-Schnittstelle aufgerufen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die aufgerufen werden soll, bevor ein Client Signale abonniert, die zu dem durch <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> beschriebenen Hub gehören.Standardmäßig sucht <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> auf dem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> nach Attributen, um zu ermitteln, ob der Client autorisiert ist, Methodenaufrufe für den beschriebenen Hub zu abonnieren.Die Funktion gibt true zurück, wenn der Client autorisiert ist, clientseitige Hubmethodenaufrufe zu abonnieren. Andernfalls wird false zurückgegeben.</summary>
      <returns>Eine Wrapperfunktion, die vorschreibt, ob der Client autorisiert ist, eine Verbindung mit dem beschriebenen Hub herzustellen.</returns>
      <param name="authorizeConnect">Eine Funktion, die vorschreibt, ob der Client autorisiert ist, eine Verbindung mit dem beschriebenen Hub herzustellen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die aufgerufen wird, wenn ein Client eine Verbindung mit <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> für jeden <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> herstellt, mit dem der Client eine Verbindung herstellt.Standardmäßig führt dies dazu, dass die Methode OnConnected von <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufgerufen wird.</summary>
      <returns>Eine Wrapperfunktion, die aufgerufen wird, wenn ein Client eine Verbindung mit einem Hub herstellt.</returns>
      <param name="connect">Eine Funktion, die aufgerufen wird, wenn ein Client eine Verbindung mit einem Hub herstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die aufgerufen wird, wenn ein Client eine Verbindung mit <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> für jeden <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> trennt, mit dem der Client verbunden war.Standardmäßig führt dies dazu, dass die Methode OnDisconnected von <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufgerufen wird.</summary>
      <returns>Eine Wrapperfunktion, die aufgerufen wird, wenn ein Client eine Verbindung mit einem Hub trennt.</returns>
      <param name="disconnect">Eine Funktion, die aufgerufen wird, wenn ein Client eine Verbindung mit einem Hub trennt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die eine serverseitige Hubmethode aufruft.Selbst wenn ein Client nicht autorisiert wurde, eine Verbindung mit einem Hub herzustellen, ist er autorisiert, serverseitige Methoden auf einem Hub aufzurufen. Dies gilt nur dann nicht, wenn dies in <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> durch die Nichtausführung des Aufrufparameters verhindert wird.</summary>
      <returns>Eine Wrapperfunktion, die eine serverseitige Hubmethode aufruft.</returns>
      <param name="invoke">Eine Funktion, die eine serverseitige Hubmethode aufruft.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die eine clientseitige Hubmethode aufruft.</summary>
      <returns>Eine Wrapperfunktion, die eine clientseitige Hubmethode aufruft.</returns>
      <param name="send">Eine Funktion, die eine clientseitige Hubmethode aufruft.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die aufgerufen wird, wenn ein Client erneut eine Verbindung mit <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> für jeden <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> herstellt, mit dem der Client eine Verbindung herstellt.Standardmäßig führt dies dazu, dass die Methode OnReconnected von <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufgerufen wird.</summary>
      <returns>Eine Wrapperfunktion, die aufgerufen wird, wenn ein Client erneut eine Verbindung mit einem Hub herstellt.</returns>
      <param name="reconnect">Eine Funktion, die aufgerufen wird, wenn ein Client erneut eine Verbindung mit einem Hub herstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die ermittelt, welchen Gruppen, die zum durch <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> beschriebenen Hub gehören, der Client erneut beitreten darf.Standardmäßig werden Clients, die eine erneute Verbindung mit dem Server herstellen, aus allen Gruppen entfernt, in denen sie zuvor Mitglied waren, weil nicht vertrauenswürdige Clients ggf. die Mitgliedschaft in Gruppen fordern könnten, zu deren Beitritt sie niemals berechtigt waren.</summary>
      <returns>Eine Wrapperfunktion, die bestimmt, welchen Gruppen der Client erneut beitreten darf.</returns>
      <param name="rejoiningGroups">Eine Funktion, die bestimmt, welchen Gruppen der Client erneut beitreten darf.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Diese Methode wird aufgerufen, nachdem die Verbindungskomponenten der Module, die später der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, ausgeführt wurden, und nachdem <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> ausgeführt wurde (wenn zutreffend).</summary>
      <param name="hub">Der Hub, mit dem der Client eine Verbindung hergestellt hat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Diese Methode wird aufgerufen, nachdem die Verbindungstrennungskomponenten der Module, die später der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, ausgeführt wurden, und nachdem <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> ausgeführt wurde (wenn zutreffend).</summary>
      <param name="hub">Der Hub, mit dem der Client eine Verbindung getrennt hat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterIncoming(System.Object,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Diese Methode wird aufgerufen, nachdem die eingehenden Komponenten der Module, die später der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, und die serverseitige Hubmethode ihre Ausführung abgeschlossen haben.</summary>
      <returns>Der möglicherweise neue oder aktualisierte Rückgabewert der serverseitigen Hubmethode.</returns>
      <param name="result">Der Rückgabewert der serverseitigen Hubmethode.</param>
      <param name="context">Eine Beschreibung des Aufrufs der serverseitigen Hubmethode.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Diese Methode wird aufgerufen, nachdem die ausgehenden Komponenten der Module, die später der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, ausgeführt wurden.Dies bedeutet nicht, dass alle Clients den Aufruf der Hubmethode empfangen haben. Es zeigt jedoch an, dass eine Hubaufrufnachricht erfolgreich für einen Nachrichtenbus veröffentlicht wurde.</summary>
      <param name="context">Eine Beschreibung des Aufrufs der clientseitigen Hubmethode.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Diese Methode wird aufgerufen, nachdem die Komponenten für eine erneute Verbindung der Module, die später der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, ausgeführt wurden, und nachdem <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> ausgeführt wurde (wenn zutreffend).</summary>
      <param name="hub">Der Hub, mit dem der Client erneut eine Verbindung hergestellt hat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeAuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Diese Methode wird aufgerufen, bevor die AuthorizeConnect-Komponenten der Module, die später der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, ausgeführt wurden.Wenn der Rückgabewert false ist, werden diese später hinzugefügten Module nicht ausgeführt, und der Client darf keine clientseitigen Aufrufe von Methoden abonnieren, die dem Hub gehören, der von <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> definiert wird.</summary>
      <returns>true, wenn der Client autorisiert ist, eine Verbindung mit dem Hub herzustellen, andernfalls false.</returns>
      <param name="hubDescriptor">Eine Beschreibung des Hubs, den der Client zu abonnieren versucht.</param>
      <param name="request">Die Verbindungsanforderung des Clients, der den Hub abonnieren möchte.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Diese Methode wird aufgerufen, bevor die Verbindungskomponenten der Module, die später der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, ausgeführt wurden.Wenn der Rückgabewert false ist, werden diese später hinzugefügten Module und die Methode <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> nicht ausgeführt.</summary>
      <returns>true, wenn die Verbindungskomponenten der später hinzugefügten Module und die Methode <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> ausgeführt werden sollen, andernfalls false.</returns>
      <param name="hub">Der Hub, mit dem der Client eine Verbindung hergestellt hat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Diese Methode wird aufgerufen, bevor die Verbindungstrennungskomponenten der Module, die später der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, ausgeführt wurden.Wenn der Rückgabewert false ist, werden diese später hinzugefügten Module und die Methode <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> nicht ausgeführt.</summary>
      <returns>true, wenn die Trennungskomponenten der später hinzugefügten Module und die Methode <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> ausgeführt werden sollen, andernfalls false.</returns>
      <param name="hub">Der Hub, mit dem der Client eine Verbindung getrennt hat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Diese Methode wird aufgerufen, bevor die eingehenden Komponenten der Module, die später der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, ausgeführt wurden.Wenn der Rückgabewert false ist, werden diese später hinzugefügten Module und der Aufruf der serverseitigen Hubmethode nicht ausgeführt.Selbst wenn ein Client nicht autorisiert wurde, eine Verbindung mit einem Hub herzustellen, ist er autorisiert, serverseitige Methoden auf einem Hub aufzurufen. Dies gilt nur dann nicht, wenn dies in <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> durch die Nichtausführung des Aufrufparameters oder in <see cref="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)" /> durch die Rückgabe von false verhindert wird.</summary>
      <returns>true, wenn die eingehenden Komponenten der später hinzugefügten Module und der Aufruf der serverseitigen Hubmethode ausgeführt werden sollen, andernfalls false.</returns>
      <param name="context">Eine Beschreibung des Aufrufs der serverseitigen Hubmethode.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Diese Methode wird aufgerufen, bevor die ausgehenden Komponenten der Module, die später der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, ausgeführt wurden.Wenn der Rückgabewert false ist, werden diese später hinzugefügten Module und der Aufruf bzw. die Aufrufe der clientseitigen Hubmethode nicht ausgeführt.</summary>
      <returns>true, wenn die ausgehenden Komponenten der später hinzugefügten Module und der Aufruf der clientseitigen Hubmethode ausgeführt werden sollen, andernfalls false.</returns>
      <param name="context">Eine Beschreibung des Aufrufs der clientseitigen Hubmethode.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Diese Methode wird aufgerufen, bevor die Komponenten für eine erneute Verbindung der Module, die später der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, ausgeführt wurden.Wenn der Rückgabewert false ist, werden diese später hinzugefügten Module und die Methode <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> nicht ausgeführt.</summary>
      <returns>true, wenn die Komponenten für erneute Verbindungen der später hinzugefügten Module und die Methode <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> ausgeführt werden sollen, andernfalls false.</returns>
      <param name="hub">Der Hub, mit dem der Client erneut eine Verbindung hergestellt hat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnIncomingError(Microsoft.AspNet.SignalR.Hubs.ExceptionContext,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Dieser Aufruf erfolgt, wenn ein unerwarteter Ausnahmefehler von einer serverseitigen Hubmethode oder der eingehenden Komponente eines später dem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />-Objekt hinzugefügten Moduls ausgelöst wird.Wenn diese Ausnahme mithilfe dieser Methode berücksichtigt wird, wird nicht verhindert, dass die Ausnahme auf andere Module überspringt.</summary>
      <param name="exceptionContext">Stellt die Ausnahme dar, die während des serverseitigen Aufrufs ausgelöst wurde.Es ist möglich, mithilfe dieses Kontexts den Fehler zu ändern oder ein Ergebnis festzulegen.</param>
      <param name="invokerContext">Eine Beschreibung des Aufrufs der serverseitigen Hubmethode.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubRequest">
      <summary>Stellt Methoden für die Kommunikation mit einer SignalR-Verbindungsanforderung zur Verfügung, die eine Verbindung mit einem Hub hergestellt hat.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubRequest.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Hub">
      <summary>Ruft den Verbindungswert des Hubs ab oder legt ihn fest.</summary>
      <returns>Der Verbindungswert eines Hubs.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Id">
      <summary>Ruft die Verbindungs-ID ab oder legt sie fest.</summary>
      <returns>Die Verbindungs-ID.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Method">
      <summary>Ruft die Anforderungsmethode ab oder legt diese fest.</summary>
      <returns>Der Anforderungsmethode.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.ParameterValues">
      <summary>Ruft die Parameterwerte ab oder legt sie fest.</summary>
      <returns>Die Parameterwerte.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.State">
      <summary>Ruft den aktuellen Status der Anforderung ab oder legt diesen fest.</summary>
      <returns>Der aktuelle Status der Anforderung.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubResponse">
      <summary>Stellt die Antwort dar, die von einer eingehenden Hubanforderung zurückgegeben wird.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubResponse.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubResponse" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Error">
      <summary>Ruft die Ausnahme ab, die als Ergebnis des Aufrufs der Hubmethode auftritt, oder legt sie fest.</summary>
      <returns>Die Ausnahme, die als Ergebnis des Aufrufs der Hubmethode auftritt.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.ErrorData">
      <summary>Zusätzliche Fehlerdaten, die in <see cref="T:Microsoft.AspNet.SignalR.HubException" /> enthalten sind.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Id">
      <summary>Ruft die ID des Vorgangs ab oder legt sie fest.</summary>
      <returns>Die ID des Vorgangs.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.IsHubException">
      <summary>Gibt an, ob der Fehler eine <see cref="T:Microsoft.AspNet.SignalR.HubException" /> ist.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Result">
      <summary>Ruft das Ergebnis des Aufrufs ab oder legt es fest.</summary>
      <returns>Das Ergebnis des Aufrufs.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.StackTrace">
      <summary>Ruft die Stapelüberwachung der Ausnahme ab, die als Ergebnis des Aufrufs der Hubmethode auftritt, oder legt sie fest.</summary>
      <returns>Die Stapelüberwachung der Ausnahme, die als Ergebnis des Aufrufs der Hubmethode auftritt.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.State">
      <summary>Ruft die Änderungen ab, die am Status nach dem Roundtrip vorgenommen werden, oder legt sie fest.</summary>
      <returns>Die Änderungen, die am Status nach dem Roundtrip vorgenommen werden.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator">
      <summary>Ermittelt eine Assembly und gibt Informationen zu ihren Modulen zurück.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator.GetAssemblies">
      <summary>Gibt eine Liste der Assemblys zurück, auf die durch das Modul verwiesen wird.</summary>
      <returns>Eine Liste der Assemblys, auf die durch das Modul verwiesen wird.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection">
      <summary>Eine Schnittstelle, die von <see cref="T:System.Attribute" />-Objekten implementiert wird und den Client für das Herstellen einer Verbindung mit einem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> autorisieren kann.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Stellt bei Angabe eines <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" />-Objekts fest, ob der Client autorisiert ist, eine Verbindung mit <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> herzustellen.</summary>
      <returns>true, wenn der Aufrufer autorisiert ist, eine Verbindung mit dem Hub herzustellen, andernfalls false.</returns>
      <param name="hubDescriptor">Die Beschreibung des Hubclients, mit dem versucht wird, eine Verbindung herzustellen.</param>
      <param name="request">Die Verbindungsanforderung vom Client.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation">
      <summary>Eine Schnittstelle, die von <see cref="T:System.Attribute" />-Objekten implementiert wird und den Aufruf von <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />-Methoden autorisieren kann.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>Stellt bei Angabe eines <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />-Objekts fest, ob der Client autorisiert ist, die Methode <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufzurufen.</summary>
      <returns>true, wenn der Aufrufer autorisiert ist, die Methode <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufzurufen, andernfalls false.</returns>
      <param name="hubIncomingInvokerContext">Ein <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />-Objekt, das Details bezüglich des <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />-Methodenaufrufs bereitstellt.</param>
      <param name="appliesToMethod">Gibt an, ob die Schnittstelleninstanz ein Attribut ist, das direkt auf eine Methode angewendet wird.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy">
      <summary>Ein serverseitiger Proxy für einen clientseitigen Hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IClientProxy.Invoke(System.String,System.Object[])">
      <summary>Ruft eine Methode für die durch die <see cref="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy" />-Instanz dargestellte(n) Verbindung(en) auf.</summary>
      <returns>Ein Task, der den abgeschlossenen Sendevorgang der Daten an den Client darstellt.</returns>
      <param name="method">Der Name der aufzurufenden Methode.</param>
      <param name="args">Die Argumente, die an den Client übergeben werden sollen.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHub">
      <summary>Stellt eine Schnittstelle zur Verfügung, die die Methoden darstellt, die mit SignalR-Verbindungen kommunizieren, die eine Verbindung mit einem Hub hergestellt haben.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Clients">
      <summary>Ruft die Clients ab, die aktuell mit dem Hub verbunden sind, oder legt diese fest.</summary>
      <returns>Die Clients, die aktuell mit dem Hub verbunden sind.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Context">
      <summary>Ruft die Informationen zum aufrufenden Client ab oder legt diese fest.</summary>
      <returns>Die Informationen zum aufrufenden Client.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Groups">
      <summary>Ruft den Gruppen-Manager für diese Hubinstanz ab oder legt ihn fest.</summary>
      <returns>Der Gruppen-Manager für diese Hubinstanz.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected">
      <summary>Wird aufgerufen, wenn die Verbindung eine Verbindung mit dieser Hubinstanz herstellt.</summary>
      <returns>Das Aufgabenobjekt, das den Verbindungsvorgang darstellt.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected">
      <summary>Wird aufgerufen, wenn eine Verbindung die Verbindung mit dieser Hubinstanz trennt.</summary>
      <returns>Das Aufgabenobjekt, das den Trennungsvorgang darstellt.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected">
      <summary>Wird aufgerufen, wenn die erneut Verbindung eine Verbindung mit dieser Hubinstanz herstellt.</summary>
      <returns>Das Aufgabenobjekt, das den erneuten Verbindungsvorgang darstellt.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubActivator">
      <summary>Stellt eine Methode zum Erstellen einer Hubinstanz zur Verfügung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Erstellt eine neue Hubinstanz.</summary>
      <returns>Der neu erstellte Hub.</returns>
      <param name="descriptor">Der Hubdeskriptor.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext">
      <summary>Kapselt alle Informationen zu einer einzelnen SignalR-Verbindung mit einem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Caller"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Others"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroup(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext">
      <summary>Kapselt alle Informationen zu einer SignalR-Verbindung mit einem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.All">
      <summary>Ruft alle verbundenen Clients ab oder legt sie fest.</summary>
      <returns>Alle verbundenen Clients.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.AllExcept(System.String[])">
      <summary>Gibt eine dynamische Darstellung aller Clients mit Ausnahme der angegebenen aufrufenden Clients zurück.</summary>
      <returns>Eine dynamische Darstellung aller Clients mit Ausnahme der angegebenen aufrufenden Clients.</returns>
      <param name="excludeConnectionIds">Eine Liste der auszuschließenden Verbindungs-IDs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Client(System.String)">
      <summary>Gibt eine dynamische Darstellung der Verbindung mit der angegebenen Verbindungs-ID zurück.</summary>
      <returns>Eine dynamische Darstellung des angegebenen Clients.</returns>
      <param name="connectionId">Die Verbindungs-ID.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Clients(System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Group(System.String,System.String[])">
      <summary>Gibt eine dynamische Darstellung der angegebenen Gruppe zurück.</summary>
      <returns>Eine dynamische Darstellung der angegebenen Gruppe.</returns>
      <param name="groupName">Der Name der Gruppe.</param>
      <param name="excludeConnectionIds">Eine Liste der auszuschließenden Verbindungs-IDs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Groups(System.Collections.Generic.IList{System.String},System.String[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider">
      <summary>Beschreibt den Hubdeskriptoranbieter, der Informationen zu den verfügbaren Hubs zur Verfügung stellt.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.GetHubs">
      <summary>Ruft alle verfügbaren Hubs ab.</summary>
      <returns>Die Auflistung der Hubdeskriptoren.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Versucht, einen Hub mit einem angegebenen Namen abzurufen.</summary>
      <returns>true, wenn der Hub gefunden wurde.</returns>
      <param name="hubName">Der Name des Hubs.</param>
      <param name="descriptor">Das abgerufene Deskriptorobjekt.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext">
      <summary>Eine Beschreibung eines serverseitigen Hubmethodenaufrufs, der von einem Client stammt.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Args">
      <summary>Ruft die Argumente ab, die an die aufgerufene Methode übergeben werden sollen.</summary>
      <returns>Die Argumente, die an die aufgerufene Methode übergeben werden sollen.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Hub">
      <summary>Ruft eine Hubinstanz ab, die die aufgerufene Methode als Element enthält.</summary>
      <returns>Eine Hubinstanz, die die aufgerufene Methode als Element enthält.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.MethodDescriptor">
      <summary>Ruft eine Beschreibung der Methode ab, die vom Client aufgerufen wird.</summary>
      <returns>Eine Beschreibung der Methode, die vom Client aufgerufen wird.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.StateTracker">
      <summary>Ruft einen Schlüssel-Wert-Speicher ab, der den Hubstatus auf dem Client zum Zeitpunkt des Aufrufs darstellt.</summary>
      <returns>Ein Schlüsselwertspeicher, der den Hubstatus auf dem Client zum Zeitpunkt des Aufrufs darstellt.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubManager">
      <summary>Beschreibt einen Hub-Manager – die Hauptkomponente des gesamten Hubs und des Methodenabrufvorgangs.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHub(System.String)">
      <summary>Ruft einen einzelnen Hubdeskriptor ab.</summary>
      <returns>Der Hubdeskriptor, wenn ein solcher gefunden wurde.Andernfalls null.</returns>
      <param name="hubName">Der Name des Hubs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Versucht, eine Methode mit einem angegebenen Namen für einen angegebenen Hub abzurufen.</summary>
      <returns>Der Deskriptor der Methode, wenn ein solcher gefunden wurde.Andernfalls null.</returns>
      <param name="hubName">Der Name des Hubs.</param>
      <param name="method">Der Name der zu suchenden Methode.</param>
      <param name="parameters">Der Methodenparameter, mit dem verglichen werden soll.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Ruft alle verfügbaren Methoden ab, die für einen angegebenen Hub aufgerufen werden können.</summary>
      <returns>Die Liste der verfügbaren Methoden.</returns>
      <param name="hubName">Der Name des Hubs.</param>
      <param name="predicate">Das optionale Prädikat zum Filtern der Ergebnisse.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Ruft alle verfügbaren Hubs ab, die mit dem angegebenen Prädikat übereinstimmen.</summary>
      <returns>Die Liste der Hubdeskriptoren.</returns>
      <param name="predicate">Das Prädikat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHub(System.String)">
      <summary>Löst einen angegebenen Hubnamen in ein konkretes Objekt auf.</summary>
      <returns>Die Hubimplementierungsinstanz, wenn eine solche gefunden wurde.Andernfalls null.</returns>
      <param name="hubName">Der Name des Hubs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHubs">
      <summary>Löst alle verfügbaren Hubs in ihre konkreten Objekte auf.</summary>
      <returns>Die Liste der Hubinstanzen.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext">
      <summary>Eine Beschreibung eines clientseitigen Hubmethodenaufrufs, der vom Server stammt.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Connection">
      <summary>Ruft das <see cref="T:Microsoft.AspNet.SignalR.IConnection" />-Objekt (wenn vorhanden) ab, das dem Client entspricht, der die serverseitige Hubmethode aufgerufen hat, die die clientseitige Hubmethode aufruft.</summary>
      <returns>Das <see cref="T:Microsoft.AspNet.SignalR.IConnection" />-Objekt (wenn vorhanden), das dem Client entspricht, der die serverseitige Hubmethode aufgerufen hat, die die clientseitige Hubmethode aufruft.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.ExcludedSignals">
      <summary>Ruft die Signale ab (ConnectionId, Hubtypname oder Hubtypname zuzüglich "." zuzüglich Gruppenname), die zu Clients gehören, die den Methodenaufruf unabhängig vom <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" />-Objekt nicht empfangen sollen.</summary>
      <returns>Die Signale (ConnectionId, Hubtypname oder Hubtypname zuzüglich "." zuzüglich Gruppenname), die zu Clients gehören, die den Methodenaufruf unabhängig vom <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" />-Objekt nicht empfangen sollen.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Invocation">
      <summary>Ruft eine Beschreibung des Methodenaufrufs ab, der auf dem Client vorgenommen werden soll.</summary>
      <returns>Eine Beschreibung des Methodenaufrufs, der auf dem Client vorgenommen werden soll.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal">
      <summary>Ruft das Signal ab (ConnectionId, Hubtypname oder Hubtypname zuzüglich "." zuzüglich Gruppenname), das zu Clients gehört, die den Methodenaufruf empfangen.</summary>
      <returns>Das Signal (ConnectionId, Hubtypname oder Hubtypname zuzüglich "." zuzüglich Gruppenname), das zu Clients gehört, die den Methodenaufruf empfangen.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signals">
      <summary>Die Signale (ConnectionId, Hubtypname oder Hubtypname zuzüglich "." zuzüglich Gruppenname), das zu Clients gehört, die den Methodenaufruf empfangen.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline">
      <summary>Eine Auflistung von Modulen, die verschiedene Phasen der Hubverarbeitung abfangen und anpassen können, z. B. die Verbindungsherstellung, die erneute Verbindungsherstellung, die Verbindungstrennung, den Aufruf serverseitiger Hubmethoden, den Aufruf clientseitiger Hubmethoden, die Autorisierung von Hubclients und das erneute Hinzufügen von Hubgruppen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)">
      <summary>Fügt der Hubpipeline ein <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" /> hinzu.Module, die der Pipeline hinzugefügt werden, schließen zuerst Module in einen Wrapper ein, die der Pipeline später hinzugefügt werden.Alle Module müssen der Pipeline hinzugefügt werden, bevor Methoden für das <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />-Objekt aufgerufen werden.</summary>
      <returns>Das <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />-Objekt selbst mit dem neu hinzugefügten Modul, das die Verkettung von <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />-Aufrufen ermöglicht.Diese Methode mutiert die Pipeline, für die sie aufgerufen wird, damit es nicht erforderlich ist, ihr Ergebnis zu speichern.</returns>
      <param name="pipelineModule">Ein Modul, das verschiedene Phasen der Hubverarbeitung abfangen und anpassen kann, z. B. die Verbindungsherstellung, die erneute Verbindungsherstellung, die Verbindungstrennung, den Aufruf serverseitiger Hubmethoden, den Aufruf clientseitiger Hubmethoden, die Autorisierung von Hubclients und das erneute Hinzufügen von Hubgruppen.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker">
      <summary>Implementierungen dieser Schnittstelle sind für die Ausführung des Vorgangs verantwortlich, der für den Abschluss verschiedener Phasen der Hubverarbeitung erforderlich ist, z. B. für die Verbindungsherstellung, die erneute Verbindungsherstellung, die Verbindungstrennung, den Aufruf serverseitiger Hubmethoden, den Aufruf clientseitiger Hubmethoden, die Autorisierung von Hubclients und das erneute Hinzufügen von Hubgruppen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.AuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Muss aufgerufen werden, bevor ein Client Signale abonniert, die zu dem durch <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> beschriebenen Hub gehören.Standardmäßig sucht <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> auf dem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> nach Attributen, um zu ermitteln, ob der Client autorisiert ist, Methodenaufrufe für den beschriebenen Hub zu abonnieren.</summary>
      <returns>true, wenn der Client autorisiert ist, clientseitige Hubmethodenaufrufe zu abonnieren, andernfalls false.</returns>
      <param name="hubDescriptor">Eine Beschreibung des Hubs, mit dem der Client versucht, eine Verbindung herzustellen.</param>
      <param name="request">Die vom Client vorgenommene Verbindungsanforderung, die den <see cref="T:System.Security.Principal.IPrincipal" />-Benutzer des Clients enthalten sollte.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Connect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Muss aufgerufen werden, wenn ein Client eine Verbindung mit dem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />-Objekt für jeden <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> herstellt, mit dem der Client eine Verbindung herstellt.Standardmäßig führt dies dazu, dass die Methode OnConnected von <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufgerufen wird.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="hub">Ein <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />-Objekt, mit dem der Client verbunden ist.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Disconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Muss aufgerufen werden, wenn ein Client eine Verbindung mit dem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />-Objekt für jeden <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> trennt, mit dem der Client verbunden war.Standardmäßig führt dies dazu, dass die Methode OnDisconnected von <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufgerufen wird.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="hub">Ein <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />-Objekt, von dem der Client getrennt wurde.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Invoke(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Ruft eine serverseitige Hubmethode auf.</summary>
      <returns>Ein asynchroner Vorgang, der den Rückgabewert des serverseitigen Aufrufs der Hubmethode ausgibt.</returns>
      <param name="context">Eine Beschreibung des Aufrufs der serverseitigen Hubmethode.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Reconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Muss aufgerufen werden, wenn ein Client erneut eine Verbindung mit dem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />-Objekt für jeden <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> herstellt, mit dem der Client eine Verbindung herstellt.Standardmäßig führt dies dazu, dass die Methode OnReconnected von <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufgerufen wird.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="hub">Ein <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />-Objekt, mit dem der Client erneut verbunden ist.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.RejoiningGroups(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String})">
      <summary>Diese Methode ermittelt, welchen Gruppen, die zum durch <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> beschriebenen Hub gehören, der Client erneut beitreten darf.Standardmäßig werden Clients, die eine erneute Verbindung mit dem Server herstellen, aus allen Gruppen entfernt, in denen sie zuvor Mitglied waren, weil nicht vertrauenswürdige Clients ggf. die Mitgliedschaft in Gruppen fordern könnten, zu deren Beitritt sie niemals berechtigt waren.</summary>
      <returns>Eine Liste der Gruppen, denen der Client erneut beitreten darf.</returns>
      <param name="hubDescriptor">Eine Beschreibung des Hubs, für den der Client versucht, Gruppen erneut hinzuzufügen.</param>
      <param name="request">Die Anforderung für eine erneute Verbindung, die durch den Client vorgenommen wird, der versucht, Gruppen erneut hinzuzufügen.</param>
      <param name="groups">Die Liste der Gruppen, die zu dem relevanten Hub gehören, von denen der Client angibt, vor der erneuten Verbindung Mitglied gewesen zu sein.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Send(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Ruft eine clientseitige Hubmethode auf.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="context">Eine Beschreibung des Aufrufs der clientseitigen Hubmethode.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule">
      <summary>Ein <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" /> kann verschiedene Phasen der Hubverarbeitung abfangen und anpassen, z. B. die Verbindungsherstellung, die erneute Verbindungsherstellung, die Verbindungstrennung, den Aufruf serverseitiger Hubmethoden, den Aufruf clientseitiger Hubmethoden, die Autorisierung von Hubclients und das erneute Hinzufügen von Hubgruppen.Module können durch den Aufruf von <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" /> aktiviert werden.Die kombinierten Module, die der <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> hinzugefügt werden, werden über die <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />-Schnittstelle aufgerufen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die aufgerufen werden soll, bevor ein Client Signale abonniert, die zu dem durch <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> beschriebenen Hub gehören.Standardmäßig sucht <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> auf dem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> nach Attributen, um zu ermitteln, ob der Client autorisiert ist, Methodenaufrufe für den beschriebenen Hub zu abonnieren.Die Funktion gibt true zurück, wenn der Client autorisiert ist, clientseitige Hubmethodenaufrufe zu abonnieren. Andernfalls wird false zurückgegeben.</summary>
      <returns>Eine Wrapperfunktion, die vorschreibt, ob der Client autorisiert ist, eine Verbindung mit dem beschriebenen Hub herzustellen.</returns>
      <param name="authorizeConnect">Eine Funktion, die vorschreibt, ob der Client autorisiert ist, eine Verbindung mit dem beschriebenen Hub herzustellen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die aufgerufen wird, wenn ein Client eine Verbindung mit <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> für jeden <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> herstellt, mit dem der Client eine Verbindung herstellt.Standardmäßig führt dies dazu, dass die Methode OnConnected von <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufgerufen wird.</summary>
      <returns>Eine Wrapperfunktion, die aufgerufen wird, wenn ein Client eine Verbindung mit einem Hub herstellt.</returns>
      <param name="connect">Eine Funktion, die aufgerufen wird, wenn ein Client eine Verbindung mit einem Hub herstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die aufgerufen wird, wenn ein Client eine Verbindung mit <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> für jeden <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> trennt, mit dem der Client verbunden war.Standardmäßig führt dies dazu, dass die Methode OnDisconnected von <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufgerufen wird.</summary>
      <returns>Eine Wrapperfunktion, die aufgerufen wird, wenn ein Client eine Verbindung mit einem Hub trennt.</returns>
      <param name="disconnect">Eine Funktion, die aufgerufen wird, wenn ein Client eine Verbindung mit einem Hub trennt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die eine serverseitige Hubmethode aufruft.Selbst wenn ein Client nicht autorisiert wurde, eine Verbindung mit einem Hub herzustellen, ist er autorisiert, serverseitige Methoden auf einem Hub aufzurufen. Dies gilt nur dann nicht, wenn dies in <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> durch die Nichtausführung des Aufrufparameters verhindert wird.</summary>
      <returns>Eine Wrapperfunktion, die eine serverseitige Hubmethode aufruft.</returns>
      <param name="invoke">Eine Funktion, die eine serverseitige Hubmethode aufruft.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die eine clientseitige Hubmethode aufruft.</summary>
      <returns>Eine Wrapperfunktion, die eine clientseitige Hubmethode aufruft.</returns>
      <param name="send">Eine Funktion, die eine clientseitige Hubmethode aufruft.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die aufgerufen wird, wenn ein Client erneut eine Verbindung mit <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> für jeden <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> herstellt, mit dem der Client eine Verbindung herstellt.Standardmäßig führt dies dazu, dass die Methode OnReconnected von <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> aufgerufen wird.</summary>
      <returns>Eine Wrapperfunktion, die aufgerufen wird, wenn ein Client erneut eine Verbindung mit einem Hub herstellt.</returns>
      <param name="reconnect">Eine Funktion, die aufgerufen wird, wenn ein Client erneut eine Verbindung mit einem Hub herstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Schließt eine Funktion in einen Wrapper ein, die ermittelt, welchen Gruppen, die zum durch <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> beschriebenen Hub gehören, der Client erneut beitreten darf.Standardmäßig werden Clients, die eine erneute Verbindung mit dem Server herstellen, aus allen Gruppen entfernt, in denen sie zuvor Mitglied waren, weil nicht vertrauenswürdige Clients ggf. die Mitgliedschaft in Gruppen fordern könnten, zu deren Beitritt sie niemals berechtigt waren.</summary>
      <returns>Eine Wrapperfunktion, die bestimmt, welchen Gruppen der Client erneut beitreten darf.</returns>
      <param name="rejoiningGroups">Eine Funktion, die bestimmt, welchen Gruppen der Client erneut beitreten darf.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser">
      <summary>Verarbeitet die Analyse eingehender Anforderungen durch das <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />-Objekt.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser.Parse(System.String,Newtonsoft.Json.JsonSerializer)">
      <summary>Analysiert die eingehende Hubnutzlast in ein <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />-Objekt.</summary>
      <returns>Das sich ergebende <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />-Objekt.</returns>
      <param name="data">Die Rohnutzlast des Hubs.</param>
      <param name="serializer">Der JsonSerializer, der zum Analysieren der Daten verwendet wird.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier">
      <summary>Kombiniert, verkleinert und speichert JavaScript des Hubs zwischen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier.Minify(System.String)">
      <summary>Verkleinert die angegebene Quelle des <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />-Objekts.</summary>
      <returns>Die angegebene Quelle des <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />-Objekts.</returns>
      <param name="source">Die verkleinerte Quelle.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator">
      <summary>Generiert den Proxydienst für die JavaScript-Schnittstelle.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Generiert einen Proxy für die Dienst-URL des <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />-Objekts.</summary>
      <returns>Ein Proxy zum Generieren der Dienst-URL für das <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />-Objekt.</returns>
      <param name="serviceUrl">Der Dienst der URL.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider">
      <summary>Beschreibt einen Hubmethodenanbieter, der eine Auflistung verfügbarer Methoden für einen angegebenen Hub erstellt.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Ruft Methoden für einen angegebenen Hub ab.</summary>
      <returns>Die verfügbaren Methoden.</returns>
      <param name="hub">Das Hubdeskriptorobjekt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Versucht, eine Methode abzurufen.</summary>
      <returns>true, wenn eine Methode gefunden wurde.</returns>
      <param name="hub">Das Hubdeskriptorobjekt.</param>
      <param name="method">Der Name der Methode.</param>
      <param name="descriptor">Der Deskriptor der Methode, wenn ein solcher gefunden wurde.Andernfalls null.</param>
      <param name="parameters">Die Methodenparameter, mit dem verglichen werden soll.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IParameterResolver">
      <summary>Beschreibt einen Parameterkonfliktlöser zum Auflösen von Parameterzuordnungswerten basierend auf den bereitgestellten Informationen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Löst Methodenparameterwerte basierend auf den bereitgestellten Objekten auf.</summary>
      <returns>Ein Array von Parameterwerten.</returns>
      <param name="method">Der Methodendeskriptor.</param>
      <param name="values">Die Liste der Werte, anhand derer Parameterwerte aufgelöst werden sollen.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor">
      <summary>Stellt die Informationen zu einer einzelnen Hubmethode dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Attributes">
      <summary>Ruft die Attribute ab, die an diese Methode angefügt sind, oder legt sie fest.</summary>
      <returns>Die an diese Methode angefügten Attribute.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Hub">
      <summary>Ruft das Hubdeskriptorobjekt ab, das Ziel dieser Methode ist.</summary>
      <returns>Das Hubdeskriptorobjekt, das Ziel dieser Methode ist.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Invoker">
      <summary>Ruft den Methodenaufrufdelegaten ab oder legt ihn fest.Nimmt einen Zielhub und ein Array von Aufrufargumenten als Argumente an.</summary>
      <returns>Der Methodenaufrufdelegat.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Parameters">
      <summary>Ruft die verfügbaren Methodenparameter ab oder legt diese fest.</summary>
      <returns>Die verfügbaren Methodenparameter.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.ReturnType">
      <summary>Ruft den Rückgabetyp dieser Methode ab oder legt ihn fest.</summary>
      <returns>Der Rückgabetyp dieser Methode.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodExtensions">
      <summary>Stellt die Erweiterung der Methoden für SignalR-Hubs dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodExtensions.Matches(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Gibt an, ob eine Methodenerweiterung mit einem anderen Methodendeskriptor übereinstimmt.</summary>
      <returns>true, eine Methodenerweiterung mit einem anderen Methodendeskriptor übereinstimmt, andernfalls false.</returns>
      <param name="methodDescriptor">Der Methodendeskriptor.</param>
      <param name="parameters">Die Liste der Parameter.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.GetInvocationData(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.Invoke(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException">
      <summary>Stellt eine Ausnahme dar, die ausgelöst wird, wenn ein Client nicht autorisiert ist, eine Verbindung mit einem Hub herzustellen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info">Die serialisierten Informationen zur Ausnahme.</param>
      <param name="context">Die Kontextinformationen zur Quelle oder zum Ziel.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" />-Klasse mit der Fehlermeldung.</summary>
      <param name="message">Die Nachricht hinsichtlich der Ausnahme.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" />-Klasse mit der Fehlermeldung und der internen Ausnahme.</summary>
      <param name="message">Die Nachricht hinsichtlich der Ausnahme.</param>
      <param name="inner">Der Fehler, der die Ausnahme verursacht hat.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier">
      <summary>Stellt einen Minifier für das Null-Javascript dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />-Klasse.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Instance">
      <summary>Gibt die <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />-Instanz an.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Minify(System.String)">
      <summary>Verkleinert die angegebene Quelle des Javascripts.</summary>
      <returns>Die verkleinerte Quelle.</returns>
      <param name="source">Die zu verkleinernde Quelle.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor">
      <summary>Provides details about the null method.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor" /> class.</summary>
      <param name="methodName">The name for this null method.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Attributes">
      <summary>Gets or sets the attributes attached to this method.</summary>
      <returns>The attributes attached to this method.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Invoker">
      <summary>Gets or sets the method invocation delegate. Takes a target hub and an array of invocation arguments as it's arguments.</summary>
      <returns>The method invocation delegate.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Parameters">
      <summary>Gets or sets the available method parameters.</summary>
      <returns>The available method parameters.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor">
      <summary>Stellt die Informationen zu einem einzelnen Hubmethodenparameter dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.Name">
      <summary>Ruft den Parameternamen ab oder legt ihn fest.</summary>
      <returns>Der Name des Parameters.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.ParameterType">
      <summary>Ruft den Parametertyp ab oder legt ihn fest.</summary>
      <returns>Der Parametertyp.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider">
      <summary>Beschreibt den Hubdeskriptoranbieter und stellt reflektierte Informationen zu den verfügbaren Hubs zur Verfügung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider" />-Klasse.</summary>
      <param name="resolver">Das <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />-Objekt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.BuildHubsCache">
      <summary>Ruft eine Auflistung von Verbindungen ab, um den Hubcache zu erstellen.</summary>
      <returns>Eine Auflistung von Verbindungen, um den Hubcache zu erstellen.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.GetHubs">
      <summary>Ruft alle verfügbaren Hubs ab. </summary>
      <returns>Die Auflistung der verfügbaren Hubs.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Versucht, einen Hub mit einem angegebenen Namen abzurufen.</summary>
      <returns>true, wenn der Hub gefunden wurde, andernfalls false.</returns>
      <param name="hubName">Der Name des abzurufenden Hubs.</param>
      <param name="descriptor">Der Rückgabewert dieser Methode enthält das abgerufene Deskriptorobjekt.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider">
      <summary>Stellt die reflektierte Methode für den Deskriptoranbieter dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Gibt eine Auflistung der Methoden für den Anbieter zurück.</summary>
      <returns>Eine Auflistung der Methoden für den Anbieter.</returns>
      <param name="hub">Der Hubdeskriptor.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Durchsucht das angegebene <paramref name="hub" />-Objekt nach der angegebenen <paramref name="method" />.</summary>
      <returns>true, wenn die Methode, die mit der Name-Parameter-Sammlung übereinstimmt, auf dem Hub gefunden wurde, andernfalls false.</returns>
      <param name="hub">Der Hub, auf dem nach der angegebenen <paramref name="method" /> gesucht werden soll.</param>
      <param name="method">Der Methodenname, nach dem gesucht werden soll.</param>
      <param name="descriptor">Bei Erfolg wird das <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" />-Objekt zurückgegeben, das aufgelöst wurde.</param>
      <param name="parameters">Die Sammlung der Parameter, die zum Ermitteln einer bestimmten Überladung der angegebenen <paramref name="method" /> verwendet werden.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper">
      <summary>Stellt ein Reflektionshilfsprogramm dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetAttributeValue``2(System.Reflection.ICustomAttributeProvider,System.Func{``0,``1})">
      <summary>Ruft den Attributwert für dieses Hilfsprogramm ab.</summary>
      <returns>Der Attributwert für dieses Hilfsprogramm.</returns>
      <param name="source">Die Quelle, aus der der Wert abgerufen werden soll.</param>
      <param name="valueGetter">Der Wertgetter.</param>
      <typeparam name="TAttribute">Der Typ des Attributs.</typeparam>
      <typeparam name="TResult">Der Typ des Ergebnisses.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetExportedHubMethods(System.Type)">
      <summary>Ruft eine Liste der exportierten Hubmethoden ab.</summary>
      <returns>Eine Liste der exportierten Hubmethoden.</returns>
      <param name="type">Der Typ der abzurufenden Methoden.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy">
      <summary>Stellt den Signalproxy dar, der vom Hub verwendet wird.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Ruft die Clienthub-Aufrufdaten ab, die dem Proxy zugeordnet sind.</summary>
      <returns>Die Clienthub-Aufrufdaten, die dem Proxy zugeordnet sind.</returns>
      <param name="method">Die Methode.</param>
      <param name="args">Die Argumente.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.HubName">
      <summary>Ruft den Namen des Hubs ab oder legt ihn fest.</summary>
      <returns>Der Name des Hubs.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoke(System.String,System.Object[])">
      <summary>Ruft eine Methode auf und gibt die Ergebnisse des Methodenaufrufs zurück.</summary>
      <returns>Das Ergebnis des Vorgangs.</returns>
      <param name="method">Die aufzurufende Methode.</param>
      <param name="args">Das Array der Argumente.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoker"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Signal">
      <summary>Ruft das Signal ab, das <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" /> zugeordnet ist, oder legt es fest.</summary>
      <returns>Das Signal, das <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" /> zugeordnet ist.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Stellt die Implementierung für Vorgänge zur Verfügung, die Elementwerte abrufen.</summary>
      <returns>true, wenn der Vorgang erfolgreich ist, andernfalls false.</returns>
      <param name="binder">Stellt Informationen zum Objekt zur Verfügung, das den dynamischen Vorgang aufgerufen hat.</param>
      <param name="result">Das Ergebnis des Abrufvorgangs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Stellt die Implementierung für Vorgänge zur Verfügung, die ein Element aufrufen.</summary>
      <returns>true, wenn der Vorgang erfolgreich ist, andernfalls false.</returns>
      <param name="binder">Stellt Informationen zum dynamischen Vorgang zur Verfügung.</param>
      <param name="args">Die Argumente, die während des Aufrufvorgangs an das Objektelement übergeben werden.</param>
      <param name="result">Das Ergebnis des Elementaufrufs.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker">
      <summary>Stellt ein Wörterbuch zur Änderungsnachverfolgung dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />-Klasse.</summary>
      <param name="values">Der Wörterbuchwert.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.GetChanges">
      <summary>Ruft die Änderungen ab, die der Nachverfolgung zugeordnet sind.</summary>
      <returns>Die Änderungen, die der Nachverfolgung zugeordnet sind.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.Item(System.String)">
      <summary>Ruft das Element ab, das mithilfe eines angegebenen Schlüssels der Nachverfolgung zugeordnet ist, oder legt dieses fest.</summary>
      <returns>Das Element, das mithilfe eines angegebenen Schlüssels der Nachverfolgung zugeordnet ist.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy">
      <summary>Stellt den statusbehafteten Signalproxy dar, der vom Hub verwendet wird.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Ruft die Clienthub-Aufrufdaten ab, die dem Proxy zugeordnet sind.</summary>
      <returns>Die Clienthub-Aufrufdaten, die dem Proxy zugeordnet sind.</returns>
      <param name="method">Die Methode.</param>
      <param name="args">Die Argumente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Stellt die Implementierung für Vorgänge zur Verfügung, die Elementwerte abrufen.</summary>
      <returns>true, wenn der Vorgang erfolgreich ist, andernfalls false.</returns>
      <param name="binder">Stellt Informationen zum Objekt zur Verfügung, das den dynamischen Vorgang aufgerufen hat.</param>
      <param name="result">Das Ergebnis des Abrufvorgangs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Stellt die Implementierung für Vorgänge zur Verfügung, die die Elementwerte festlegen.</summary>
      <returns>true, wenn der Vorgang erfolgreich ist, andernfalls false.</returns>
      <param name="binder">Stellt Informationen zum Objekt zur Verfügung, das den dynamischen Vorgang aufgerufen hat.</param>
      <param name="value">Das Ergebnis des Festlegungsvorgangs.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.UserProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.UserProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler">
      <summary>Stellt eine Instanz dar, die das ACK (App Certification Kit) verarbeitet.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor(System.Boolean,System.TimeSpan,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />-Klasse.</summary>
      <param name="completeAcksOnTimeout">true, wenn ACK beim Timeout abgeschlossen ist, andernfalls false.</param>
      <param name="ackThreshold">Der ACK-Schwellenwert.</param>
      <param name="ackInterval">Das ACK-Intervall.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.CreateAck(System.String)">
      <summary>Erstellt ein neues ACK-Objekt.</summary>
      <returns>Das erstellte ACK-Objekt.</returns>
      <param name="id">Der Bezeichner.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose">
      <summary>Gibt alle von <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose(System.Boolean)">
      <summary>Gibt alle von dieser Instanz verwendeten Ressourcen frei.</summary>
      <param name="disposing">true, wenn verwaltete und nicht verwaltete Ressourcen freigegeben werden sollen, false, wenn nur die nicht verwalteten Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.TriggerAck(System.String)">
      <summary>Löst ein angegebenes ACK-Objekt aus.</summary>
      <returns>Das Ergebnis des Vorgangs.</returns>
      <param name="id">Der ACK-Bezeichner.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader">
      <summary>Stellt den Textreader dar, der dem Arraysegment zugeordnet ist.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.#ctor(System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader" />-Klasse.</summary>
      <param name="buffer">Der Arraysegmentpuffer.</param>
      <param name="encoding">Die Codierung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Liest eine angegebene maximale Anzahl von Zeichen aus dem aktuellen Reader und schreibt die Daten beginnend am angegebenen Index in einen Puffer.</summary>
      <returns>Die Anzahl der Zeichen, die gelesen wurden.</returns>
      <param name="buffer">Enthält das angegebene Zeichenarray mit den Werten zwischen dem Index und ersetzt durch die Zeichen, die aus der aktuellen Quelle gelesen wurden.</param>
      <param name="index">Die Position im Puffer, an der der Schreibvorgang beginnen soll.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Zeichen.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Connection">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.#ctor(Microsoft.AspNet.SignalR.Messaging.IMessageBus,Newtonsoft.Json.JsonSerializer,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IAckHandler,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Infrastructure.IProtectedData)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.Connection" />-Klasse.</summary>
      <param name="newMessageBus">Der neue Nachrichtenbus.</param>
      <param name="jsonSerializer">Der JSON-Serialisierer.</param>
      <param name="baseSignal">Das Basissignal.</param>
      <param name="connectionId">Die Verbindungs-ID.</param>
      <param name="signals">Die Auflistung der Signale.</param>
      <param name="groups">Die Auflistung der Gruppen.</param>
      <param name="traceManager">Der Ablaufverfolgungs-Manager.</param>
      <param name="ackHandler">Der ACK-Handler.</param>
      <param name="performanceCounterManager">Der Leistungsindikator-Manager.</param>
      <param name="protectedData">Die geschützten Daten.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.DefaultSignal">
      <summary>Ruft das Hauptsignal für diese Verbindung ab.</summary>
      <returns>Das Hauptsignal für diese Verbindung.</returns>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyAdded">
      <summary>Tritt auf, wenn das Ereignis einen Schlüssel hinzufügte.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyRemoved">
      <summary>Tritt auf, wenn das Ereignis einen Schlüssel entfernte.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Identity">
      <summary>Ruft eine Identitätseigenschaft für diese Verbindung ab.</summary>
      <returns>Eine Identitätseigenschaft für diese Verbindung.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Microsoft#AspNet#SignalR#Messaging#ISubscriber#EventKeys">
      <summary>Ruft eine Liste der Objekte ab, auf die vom Index einzeln zugegriffen werden kann.</summary>
      <returns>Eine Liste der Objekte, auf die vom Index einzeln zugegriffen werden kann.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Empfängt eine Nachrichtenantwort auf die Verbindungsmethode.</summary>
      <returns>Eine zu empfangende Nachrichtenantwort auf die Verbindungsmethode.</returns>
      <param name="messageId">Die Nachrichten-ID.</param>
      <param name="callback">Ermittelt, ob die Verbindung eine Antwort auf Rückruf sendet.</param>
      <param name="maxMessages">Die maximale Anzahl der Nachrichten.</param>
      <param name="state">Der Verbindungsstatus.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Sendet eine Nachricht an mindestens eine Verbindung.</summary>
      <returns>Eine Nachricht, die an mindestens eine Verbindung gesendet wird.</returns>
      <param name="message">Die an die Verbindungen gesendete Nachricht.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Subscription">
      <summary>Ruft ein Abonnement für diese Verbindungseigenschaft ab bzw. legt es fest.</summary>
      <returns>Ein Abonnement für diese Verbindungseigenschaft.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.WriteCursor">
      <summary>Ruft den Cursor ab, der eine sequenzielle Reihe von Zeichen schreiben soll, bzw. legt ihn fest.</summary>
      <returns>Der Cursor, der eine sequenzielle Reihe von Zeichen schreiben soll.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager">
      <summary>Stellt eine <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" />-Standardimplementierung zur Verfügung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager" />-Klasse.</summary>
      <param name="resolver">Das <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />-Objekt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnection(System.Type)">
      <summary>Gibt einen <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> für das <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekt zurück.</summary>
      <returns>Ein <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> für das <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekt.</returns>
      <param name="type">Der Typ des <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekts.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnectionContext``1">
      <summary>Gibt einen <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> für das <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekt zurück.</summary>
      <returns>Ein <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> für das <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekt.</returns>
      <typeparam name="T">Der Typ des <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekts.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext``1">
      <summary>Gibt den Hubkontext für diese Verbindung zurück.</summary>
      <returns>Der Hubkontext für diese Verbindung.</returns>
      <typeparam name="T">Der Typ des Hubs.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext(System.String)">
      <summary>Gibt den Hubkontext für diese Verbindung mithilfe des angegebenen Namens zurück.</summary>
      <returns>Der Hubkontext für diese Verbindung.</returns>
      <param name="hubName">Der Name des Hubs.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData">
      <summary>Stellt Methoden zum Schützen von Daten bereit.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.#ctor(Microsoft.Owin.Security.DataProtection.IDataProtectionProvider)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData" />-Klasse.</summary>
      <param name="provider">Der Datenschutzanbieter.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Protect(System.String,System.String)">
      <summary>Schützt die angegebenen Daten.</summary>
      <returns>Die geschützten Daten.</returns>
      <param name="data">Die zu schützenden Daten.</param>
      <param name="purpose">Der Zweck des Schutzes.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Unprotect(System.String,System.String)">
      <summary>Entfernt den Schutz für die angegebenen Daten.</summary>
      <returns>Die ungeschützten Daten.</returns>
      <param name="protectedValue">Die geschützten Daten.</param>
      <param name="purpose">Der Zweck des Schutzes.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData">
      <summary>Stellt Methoden zum Schützen von Daten zur Verfügung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Protect(System.String,System.String)">
      <summary>Schützt die angegebenen Daten.</summary>
      <returns>Die geschützten Daten.</returns>
      <param name="data">Die zu schützenden Daten.</param>
      <param name="purpose">Der Zweck des Schutzes.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Unprotect(System.String,System.String)">
      <summary>Entfernt den Schutz für die angegebenen Daten.</summary>
      <returns>Die ungeschützten Daten.</returns>
      <param name="protectedValue">Die geschützten Daten.</param>
      <param name="purpose">Der Zweck des Schutzes.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler">
      <summary>Stellt eine Schnittstelle zur Verfügung, die die Instanz darstellt, die das ACK (App Certification Kit) verarbeitet.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.CreateAck(System.String)">
      <summary>Erstellt ein neues ACK-Objekt.</summary>
      <returns>Das erstellte ACK-Objekt.</returns>
      <param name="id">Der Bezeichner.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.TriggerAck(System.String)">
      <summary>Löst ein angegebenes ACK-Objekt aus.</summary>
      <returns>Das Ergebnis des Vorgangs.</returns>
      <param name="id">Der ACK-Bezeichner.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter">
      <summary>Represents the base interface for class that has the ability to write raw binary data.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter.Write(System.ArraySegment{System.Byte})">
      <summary>Writes raw binary data to underlying stream.</summary>
      <param name="data">The raw binary data to write.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager">
      <summary>Stellt Zugriff auf Hubs und dauerhafte Verbindungen und Verweise zur Verfügung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetConnectionContext``1">
      <summary>Gibt einen <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> für das <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekt zurück.</summary>
      <returns>Ein <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> für das <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekt.</returns>
      <typeparam name="T">Der Typ des <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekts.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext``1">
      <summary>Gibt die der Verbindung zugeordnete Hubinformationen zurück.</summary>
      <returns>Die der Verbindung zugeordnete Hubinformationen.</returns>
      <typeparam name="T">Der Typ des Hubs.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext(System.String)">
      <summary>Gibt die der Verbindung zugeordnete Hubinformationen zurück.</summary>
      <returns>Die der Verbindung zugeordnete Hubinformationen.</returns>
      <param name="hubName">Der Name des Hubs.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper">
      <summary>Stellt das Hilfsprogramm für die atomarischen Vorgänge für Variablen dar, die von mehreren Threads gemeinsam verwendet werden.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper.CompareExchangeOr(System.Int32@,System.Int32,System.Int32,System.Int32)">
      <summary>Vergleicht zwei Objekte für Vergleichsgleichheit und bestimmt, ob sie identisch sind.</summary>
      <returns>true, wenn die beiden Objekte gleich sind, andernfalls false.</returns>
      <param name="location">Das Zielobjekt, mit dem verglichen und das möglicherweise ersetzt wird. </param>
      <param name="value">Das Objekt, das das Zielobjekt ersetzt, wenn das Ergebnis des Vergleichs Gleichheit ist.</param>
      <param name="comparandA">Das erste zu vergleichende Objekt.</param>
      <param name="comparandB">Das zweite zu vergleichende Objekt.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Close">
      <summary>Schließt den Leistungsindikator und gibt alle Ressourcen frei, die von dieser PerformanceCounter-Instanz zugewiesen wurden.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.CounterName"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Decrement">
      <summary>Verringert die zugeordneten Leistungsindikatoren über eine effiziente atomare Operation um 1.</summary>
      <returns>Der verringerte Leistungsindikatorwert.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Increment">
      <summary>Erhöht die zugeordneten Leistungsindikatoren über eine effiziente atomare Operation um 1.</summary>
      <returns>Der erhöhte Leistungsindikatorwert.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.IncrementBy(System.Int64)">
      <summary>Erhöht oder verringert den Wert der zugeordneten Leistungsindikatoren über eine effiziente atomare Operation um einen angegebenen Wert.</summary>
      <returns>Der neue Leistungsindikatorwert.</returns>
      <param name="value">Der Wert, um den erhöht wird.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.NextSample">
      <summary>Ruft eine Indikatorprobe ab und gibt ihren Rohwert bzw. nicht berechneten Wert zurück.</summary>
      <returns>Eine Indikatorprobe. Gibt ihren Rohwert bzw. nicht berechneten Wert zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RawValue">
      <summary>Ruft den Rohwert bzw. nicht berechneten Wert dieses Indikators ab bzw. legt ihn fest.</summary>
      <returns>Der Rohwert des Indikators.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RemoveInstance">
      <summary>Löscht die Kategorieinstanz, die von der InstanceName-Eigenschaft des PerformanceCounter-Objekts angegeben wurde.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager">
      <summary>Stellt Zugriff auf Leistungsindikatoren zur Verfügung.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die pro Sekunde von Verbindungen (Server zu Client) empfangen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die seit dem Start der Anwendung von Verbindungen (Server zu Client) empfangen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die pro Sekunde von Verbindungen (Client zu Server) gesendet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Nachrichten darstellt, die seit dem Start der Anwendung von Verbindungen (Client zu Server) gesendet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsConnected">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Connect-Ereignisse der Verbindung seit dem Start der Anwendung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsCurrent">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der aktuell verbundenen Verbindungen darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsDisconnected">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Disconnect-Ereignisse der Verbindung seit dem Start der Anwendung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsReconnected">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Reconnect-Ereignisse der Verbindung seit dem Start der Anwendung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl aller Fehler darstellt, die pro Sekunde verarbeitet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl aller Fehler darstellt, die seit dem Start der Anwendung verarbeitet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Hubaufruffehler pro Sekunde darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl aller Hubaufruffehler darstellt, die seit dem Start der Anwendung verarbeitet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Hubauflösungsfehler pro Sekunde darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl aller Hubauflösungsfehler darstellt, die seit dem Start der Anwendung verarbeitet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Transportfehler pro Sekunde darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl aller Transportfehler darstellt, die seit dem Start der Anwendung verarbeitet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Initialisiert die Leistungsindikatoren.</summary>
      <param name="instanceName">Der Name der Hostinstanz.</param>
      <param name="hostShutdownToken">Das CancellationToken, das das Herunterfahren des Hosts darstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Lädt einen Leistungsindikator.</summary>
      <param name="categoryName">Der Kategoriename.</param>
      <param name="counterName">Der Name des Leistungsindikators.</param>
      <param name="instanceName">Der Name der Instanz.</param>
      <param name="isReadOnly">Gibt an, ob der Leistungsindikator schreibgeschützt ist.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Workerthreads darstellt, die für die Übermittlung von Nachrichten im Nachrichtenbus zugewiesen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Workerthreads darstellt, die aktuell mit der Übermittlung von Nachrichten im Nachrichtenbus beschäftigt sind.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die pro Sekunde für den Nachrichtenbus veröffentlicht werden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Nachrichten darstellt, die seit dem Start der Anwendung für den Nachrichtenbus veröffentlicht wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die pro Sekunde von Abonnenten empfangen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Nachrichten darstellt, die von Abonnenten seit dem Start der Anwendung empfangen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Ruft den Leistungsindikator ab, der die aktuelle Anzahl der Abonnenten des Nachrichtenbus darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der neuen Abonnenten des Nachrichtenbus pro Sekunde darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Abonnenten des Nachrichtenbus seit dem Start der Anwendung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Ruft den Leistungsindikator ab, der die aktuelle Anzahl der Themen im Nachrichtenbus darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der horizontalen Skalierungsfehler pro Sekunde darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der horizontalen Skalierungsfehler seit dem Start der Anwendung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die pro Sekunde vom Nachrichtenbus für horizontale Skalierung empfangen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Ruft den Leistungsindikator ab, der die aktuelle Länge der Sendewarteschlange für horizontale Skalierung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der logischen Datenströme im aktuell konfigurierten Nachrichtenbusanbieter für horizontale Skalierung darstellt, die sich im Pufferungsstatus befinden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der logischen Datenströme im aktuell konfigurierten Nachrichtenbusanbieter für horizontale Skalierung darstellt, die sich im geöffneten Status befinden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der logischen Datenströme im aktuell konfigurierten Nachrichtenbusanbieter für horizontale Skalierung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData">
      <summary>Stellt eine Schnittstelle dar, die Methoden zum Ver- und Entschlüsseln von Daten zur Verfügung stellt, die einer SignalR-Infrastruktur zugeordnet sind.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Protect(System.String,System.String)">
      <summary>Schützt die angegebenen Daten.</summary>
      <returns>Die geschützten Daten.</returns>
      <param name="data">Die zu schützenden Daten.</param>
      <param name="purpose">Der Zweck des Schutzes.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Unprotect(System.String,System.String)">
      <summary>Hebt den Schutz bestimmter Daten auf.</summary>
      <returns>Die ungeschützten Daten.</returns>
      <param name="protectedValue">Der geschützte Wert, dessen Schutz aufgehoben werden soll.</param>
      <param name="purpose">Der Zweck der Aufhebung des Schutzes.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager">
      <summary>Generiert eine Server-ID.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager.ServerId">
      <summary>Die ID des Servers.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier">
      <summary>Stellt eine Schnittstelle zur Verfügung, die eine Klasse darstellt, die die Größe einer Zeichenfolge verringert.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)">
      <summary>Verkleinert eine Zeichenfolge so, dass dieser Vorgang von dieser Instanz von <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> umgekehrt werden kann.</summary>
      <returns>Eine verkleinerte Darstellung von <paramref name="value" /> ohne die folgenden Zeichen: ,|\.</returns>
      <param name="value">Die zu verkleinernde Zeichenfolge.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)">
      <summary>Ein Aufruf dieser Funktion zeigt an, dass zukünftige Versuche, die Verkleinerung von Zeichenfolgen umzukehren, die zuvor aus <paramref name="value" /> verkleinert wurden, ggf. zu einem Rückgabewert von null führen kann.Dieser Vorgang bietet eine Möglichkeit zum Bereinigen interner Datenstrukturen, die auf <paramref name="value" /> verweisen.</summary>
      <param name="value">Die Zeichenfolge, die zuvor ggf. verkleinert war.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)">
      <summary>Kehrt einen <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />-Aufruf um, der zuvor mindestens ein Mal für diese Instanz von <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> ohne nachfolgende Aufrufe von <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> mit gemeinsamer Verwendung des gleichen Arguments wie für den Aufruf von <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> aufgerufen wurde, der <paramref name="value" /> zurückgegeben hat.</summary>
      <returns>Das Argument aller vorherigen Aufrufe von <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, die <paramref name="value" /> zurückgegeben haben.Wenn alle Aufrufe von <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> für diese Instanz von <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> niemals <paramref name="value" /> zurückgegeben haben oder der letzte Aufruf von <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, der <paramref name="value" /> zurückgegeben hat, von einem Aufruf von <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> mit dem gleichen Argument gefolgt wurde, gibt <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)" /> ggf. null zurück, muss jedoch nicht zwingend ausgelöst werden.</returns>
      <param name="value">Eine verkleinerte Zeichenfolge, die von einem vorherigen Aufruf von <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> zurückgegeben wurde.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager">
      <summary>Verwaltet Leistungsindikatoren mithilfe von Windows-Leistungsindikatoren.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.DefaultDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />-Klasse.</summary>
      <param name="resolver">Der Standard-Abhängigkeitskonfliktlöser.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />-Klasse.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.CategoryName">
      <summary>Gibt den Leistungsindikator-Kategorienamen für diesen Leistungsindikator an.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die pro Sekunde von Verbindungen (Server zu Client) empfangen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die seit dem Start der Anwendung von Verbindungen (Server zu Client) empfangen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die pro Sekunde von Verbindungen (Client zu Server) gesendet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Nachrichten darstellt, die seit dem Start der Anwendung von Verbindungen (Client zu Server) gesendet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsConnected">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Connect-Ereignisse der Verbindung seit dem Start der Anwendung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsCurrent">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der aktuell verbundenen Verbindungen darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsDisconnected">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Disconnect-Ereignisse der Verbindung seit dem Start der Anwendung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsReconnected">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Reconnect-Ereignisse der Verbindung seit dem Start der Anwendung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl aller Fehler darstellt, die pro Sekunde verarbeitet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl aller Fehler darstellt, die seit dem Start der Anwendung verarbeitet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Hubaufruffehler pro Sekunde darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl aller Hubaufruffehler darstellt, die seit dem Start der Anwendung verarbeitet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Hubauflösungsfehler pro Sekunde darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl aller Hubauflösungsfehler darstellt, die seit dem Start der Anwendung verarbeitet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Transportfehler pro Sekunde darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl aller Transportfehler darstellt, die seit dem Start der Anwendung verarbeitet wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Initialisiert die Leistungsindikatoren.</summary>
      <param name="instanceName">Der Name der Hostinstanz.</param>
      <param name="hostShutdownToken">Das CancellationToken, das das Herunterfahren des Hosts darstellt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Lädt den Leistungsindikator.</summary>
      <param name="categoryName">Der Kategoriename.</param>
      <param name="counterName">Der Name des Leistungsindikators.</param>
      <param name="instanceName">Ein Name der Instanz.</param>
      <param name="isReadOnly">True, wenn der Leistungsindikator schreibgeschützt ist, andernfalls False.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Workerthreads darstellt, die für die Übermittlung von Nachrichten im Nachrichtenbus zugewiesen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Workerthreads darstellt, die aktuell mit der Übermittlung von Nachrichten im Nachrichtenbus beschäftigt sind.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die pro Sekunde für den Nachrichtenbus veröffentlicht werden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Nachrichten darstellt, die seit dem Start der Anwendung für den Nachrichtenbus veröffentlicht wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die pro Sekunde von Abonnenten empfangen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Nachrichten darstellt, die von Abonnenten seit dem Start der Anwendung empfangen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Ruft den Leistungsindikator ab, der die aktuelle Anzahl der Abonnenten des Nachrichtenbus darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der neuen Abonnenten des Nachrichtenbus pro Sekunde darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der Abonnenten des Nachrichtenbus seit dem Start der Anwendung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Ruft den Leistungsindikator ab, der die aktuelle Anzahl der Themen im Nachrichtenbus darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der horizontalen Skalierungsfehler pro Sekunde darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Ruft den Leistungsindikator ab, der die Gesamtzahl der horizontalen Skalierungsfehler seit dem Start der Anwendung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der Nachrichten darstellt, die pro Sekunde vom Nachrichtenbus für horizontale Skalierung empfangen wurden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Ruft den Leistungsindikator ab, der die aktuelle Länge der Sendewarteschlange für horizontale Skalierung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der logischen Datenströme im aktuell konfigurierten Nachrichtenbusanbieter für horizontale Skalierung darstellt, die sich im Pufferungsstatus befinden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der logischen Datenströme im aktuell konfigurierten Nachrichtenbusanbieter für horizontale Skalierung darstellt, die sich im geöffneten Status befinden.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Ruft den Leistungsindikator ab, der die Anzahl der logischen Datenströme im aktuell konfigurierten Nachrichtenbusanbieter für horizontale Skalierung darstellt.</summary>
      <returns>Gibt <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" /> zurück.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver">
      <summary>Provides method for resolving protocol.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor(System.Version,System.Version)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
      <param name="min">The minimum version of the protocol to resolve.</param>
      <param name="max">The maximum version of the protocol to resolve.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.Resolve(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Resolves the protocol in the specified SignalR request.</summary>
      <param name="request">The request to resolve.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Purposes">
      <summary>Gibt die Zweckkonstanten an.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.ConnectionToken">
      <summary>Die Konstante ConnectionToken.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.Groups">
      <summary>Die Gruppenkonstante.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType">
      <summary>Gibt Serverbefehle an.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType.RemoveConnection">
      <summary>Der RemoveConnection-Befehl.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager">
      <summary>Die <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager" />-Standardimplementierung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.ServerId">
      <summary>Ruft die ID des Servers ab oder legt sie fest.</summary>
      <returns>Die ID des Servers.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonValue">
      <summary>Stellt einen JSON-Wert dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.CanConvertTo(System.Type)">
      <summary>Konvertiert den Parameter in den angegebenen <see cref="T:System.Type" />.</summary>
      <returns>Der konvertierte Parameterwert.</returns>
      <param name="type">Der <see cref="T:System.Type" />, in den der Parameter konvertiert werden soll.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.ConvertTo(System.Type)">
      <summary>Konvertiert den Parameter in den angegebenen <see cref="T:System.Type" />.</summary>
      <returns>Der konvertierte Parameterwert.</returns>
      <param name="type">Der <see cref="T:System.Type" />, in den der Parameter konvertiert werden soll.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonWritable">
      <summary>Implementierungen verarbeiten ihre eigene Serialisierung in JSON.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonWritable.WriteJson(System.IO.TextWriter)">
      <summary>Serialisiert sich selbst in JSON über ein <see cref="T:System.IO.TextWriter" />-Objekt.</summary>
      <param name="writer">Das <see cref="T:System.IO.TextWriter" />-Objekt, das das als JSON serialisierte Objekt empfängt.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions">
      <summary> Eine Erweiterung für <see cref="T:Newtonsoft.Json.JsonSerializer" />. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Deserialisiert JSON in ein .NET-Objekt.</summary>
      <returns>Das deserialisierte Objekt aus der JSON-Zeichenfolge.</returns>
      <param name="serializer">Der Serialisierer.</param>
      <param name="jsonBuffer">Der zu deserialisierende JSON-Puffer.</param>
      <param name="encoding">Die zu verwendende Codierung.</param>
      <typeparam name="T">Der <see cref="T:System.Type" /> des zu deserialisierenden Objekts.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.String)">
      <summary>Deserialisiert JSON in ein .NET-Objekt.</summary>
      <returns>Das deserialisierte Objekt aus der JSON-Zeichenfolge.</returns>
      <param name="serializer">Der Serialisierer.</param>
      <param name="json">Der zu deserialisierende JSON-Wert.</param>
      <typeparam name="T">Der <see cref="T:System.Type" /> des zu deserialisierenden Objekts.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Serialize(Newtonsoft.Json.JsonSerializer,System.Object,System.IO.TextWriter)">
      <summary>Serialisiert das angegebene Objekt in ein <see cref="T:System.IO.TextWriter" />-Objekt.</summary>
      <param name="serializer">Der JSON-Serialisierer.</param>
      <param name="value">Das zu serialisierende Objekt.</param>
      <param name="writer">Das <see cref="T:System.IO.TextWriter" />-Objekt, in das das Objekt serialisiert werden soll.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Stringify(Newtonsoft.Json.JsonSerializer,System.Object)">
      <summary>Serialisiert das angegebene Objekt in eine JSON-Zeichenfolge.</summary>
      <returns>Eine JSON-Zeichenfolgendarstellung des Objekts.</returns>
      <param name="serializer">Der Serialisierer.</param>
      <param name="value">Das zu serialisierende Objekt.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonUtility">
      <summary> Hilfsklasse für allgemeine JSON-Vorgänge. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CamelCase(System.String)">
      <summary>Konvertiert den angegebenen Namen in Camel-Case.</summary>
      <returns>Der CamelCase-Wert des angegebenen <paramref name="name" />.</returns>
      <param name="name">Der zu konvertierende Wert.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializer">
      <summary>Erstellt eine <see cref="T:Newtonsoft.Json.JsonSerializer" />-Instanz mit der Standardeinstellung.</summary>
      <returns>Das neu erstellte <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />-Objekt.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializerSettings">
      <summary>Erstellt eine <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />-Standardinstanz.</summary>
      <returns>Das neu erstellte <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />-Objekt.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateJsonpCallback(System.String,System.String)">
      <summary>Erstellt einen JSONP-Rückruf.</summary>
      <returns>Eine <see cref="T:System.String" />, die den Ruckruf darstellt.</returns>
      <param name="callback">Der zu erstellende Rüfruf.</param>
      <param name="payload">Die Nutzlast.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JavaScriptMimeType">
      <summary>Ruft den MIME-Typ für das JavaScript ab.</summary>
      <returns>Der MIME-Typ für das JavaScript.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JsonMimeType">
      <summary>Ruft den MIME-Typ dieser JSON-Hilfsmethode ab.</summary>
      <returns>Der MIME-Typ dieser JSON-Hilfsmethode.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Command">
      <summary>Stellt die Befehle dar, die mit SignalR-Messaging verwendet werden.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Command.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.Command" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.CommandType">
      <summary>Ruft den Typ der Befehle ab oder legt ihn fest.</summary>
      <returns>Der Typ der Befehle.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Id">
      <summary>Ruft den Befehlsbezeichner ab oder legt ihn fest.</summary>
      <returns>Der Befehlsbezeichner.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Value">
      <summary>Ruft einen Befehlswert ab oder legt ihn fest.</summary>
      <returns>Der Befehlswert.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.WaitForAck">
      <summary>Ruft ab, ob der Befehl auf die Zertifizierung vor der Ausführung wartet, oder legt dieses Verhalten fest.</summary>
      <returns>true, wenn der Befehl auf die Zertifizierung vor der Ausführung wartet, andernfalls false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.CommandType">
      <summary>Zählt die Befehle für die Verbindungsnachricht auf.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Abort">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.AddToGroup">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Disconnect">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Initializing">
      <summary>Gibt den Befehl zum Initialisieren der Verbindung dar.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.RemoveFromGroup">
      <summary />
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.IMessageBus">
      <summary>Stellt Methoden bereit, die zum Veröffentlichen und Abonnemieren von Nachrichten aus dem SignalR-Nachrichtenbus verwendet werden.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Richtet ein Themenabonnement für den Abonnent auf dem Nachrichtenbus ein.</summary>
      <returns>Der Status des Abonnements.</returns>
      <param name="subscriber">Der Abonnent.</param>
      <param name="cursor">Der Lese-Cursor, der die Arbeit für das Abonnement angibt.</param>
      <param name="callback">Die Rückruffunktion.</param>
      <param name="maxMessages">Die Größe des Nachrichtenpuffers.</param>
      <param name="state">Der Status des Rückrufvorgangs.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscriber">
      <summary>Stellt Details über den Abonnenten auf dem SignalR-Nachrichtenbus bereit.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyAdded"></member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyRemoved"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Identity"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Subscription">
      <summary>Ruft das Abonnement ab bzw. legt es fest.</summary>
      <returns>Das Abonnement.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.WriteCursor">
      <summary>Ruft den Schreib-Cursor ab bzw. legt diesen fest.</summary>
      <returns>Der Schreib-Cursor.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscription">
      <summary>Stellt Methoden zur Ausführung von Vorgängen und zur Steuerung des Status des Abonnements bereit.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscription.Identity">
      <summary>Ruft die Identität des Abonnements ab bzw. legt sie fest.</summary>
      <returns>Die Identität des Abonnements.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.SetQueued">
      <summary>Stellt das Abonnement auf den funktionsfähigen Status ein. </summary>
      <returns>True, wenn das Abonnement auf den funktionsfähigen Status eingestellt wurde, andernfalls False.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.UnsetQueued">
      <summary>Stellt das Abonnement auf den Leerlaufstatus ein. </summary>
      <returns>True, wenn das Abonnement auf den Leerlaufstatus eingestellt wurde, andernfalls False.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.Work">
      <summary>Führt Vorgänge auf der abonnierten Nachricht über dieses Abonnement aus</summary>
      <returns>Der Task, der den Vorgang auf der abonnierten Nachricht darstellt.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.#ctor(System.String,System.UInt64,Microsoft.AspNet.SignalR.Messaging.MessageStore{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo" />-Klasse.</summary>
      <param name="key">Der Schlüssel, der dem lokalen Ereignis zugeordnet ist.</param>
      <param name="id">Der Bezeichner, der den Schlüsselinformationen zugeordnet ist.</param>
      <param name="store">Der Nachrichtenspeicher, der dem lokalen Ereignisschlüssel zugeordnet ist.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Id">
      <summary>Ruft den Bezeichner ab, der den Schlüsselinformationen zugeordnet ist, bzw. legt ihn fest.</summary>
      <returns>Der Bezeichner, der den Schlüsselinformationen zugeordnet ist.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Key">
      <summary>Ruft den Schlüssel ab, der dem lokalen Ereignis zugeordnet ist, bzw. legt ihn fest.</summary>
      <returns>Der Schlüssel, der dem lokalen Ereignis zugeordnet ist.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.MessageStore">
      <summary>Ruft die Nachricht für den Schlüssel ab.</summary>
      <returns>Die Nachricht für den Schlüssel.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Message">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.ArraySegment{System.Byte})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />-Klasse.</summary>
      <param name="source">Die Quelle der Nachricht.</param>
      <param name="key">Die Schlüsselmeldung.</param>
      <param name="value">Der Wert der Nachricht.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.CommandId">
      <summary>Ruft den Befehlsbezeichner der Nachricht ab bzw. legt ihn fest.</summary>
      <returns>Der Befehlsbezeichner der Nachricht.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Encoding">
      <summary>Die Codierung der Nachricht.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Filter">
      <summary>Ruft den Nachrichtenfilter ab bzw. legt ihn fest.</summary>
      <returns>Der Nachrichtenfilter.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.GetString"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsAck">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob die Nachricht eine Bestätigungsmeldung ist.</summary>
      <returns>True, wenn die Nachricht eine Bestätigungsmeldung ist, andernfalls False.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsCommand">
      <summary>Ruft einen Wert ab, der angibt, ob die Nachricht eine Befehlsmeldung ist.</summary>
      <returns>True, wenn die Nachricht eine Befehlsmeldung ist, andernfalls False.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Key">
      <summary>Ruft den Schlüssel für die Nachricht ab bzw. legt ihn fest.</summary>
      <returns>Der Schlüssel für die Nachricht.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.MappingId">
      <summary>Die Nutzlast-ID.Wird nur in Szenarien mit horizontaler Skalierung verwendet.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.ReadFrom(System.IO.Stream)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Source">
      <summary>Ruft die Quelle der Nachricht ab bzw. legt diese fest.</summary>
      <returns>Die Quelle der Nachricht.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.StreamIndex">
      <summary>Der Datenstromindex, aus dem diese Nachricht stammt.Wird nur in Szenarien mit horizontaler Skalierung verwendet.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Value">
      <summary>Ruft den Wert der Nachricht ab bzw. legt ihn fest.</summary>
      <returns>Der Wert der Nachricht.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.WaitForAck">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob die Nachricht auf eine Bestätigung wartet.</summary>
      <returns>True, wenn die Nachricht auf eine Bestätigung wartet, andernfalls False.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.WriteTo(System.IO.Stream)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker">
      <summary>Plant die für ein bestimmtes Abonnement auszuführenden Aufgaben und verfügt über einen Algorithmus zum Auswählen einer Anzahl von Workern (Threadpoolthreads) zum Verarbeiten der geplanten Aufgaben.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />-Klasse.</summary>
      <param name="performanceCounterManager">Der Leistungsindikator-Manager.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose">
      <summary>Gibt alle von der <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose(System.Boolean)">
      <summary>Gibt alle von der <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" /> verwendeten Ressourcen frei.</summary>
      <param name="disposing">true, wenn verwaltete und nicht verwaltete Ressourcen freigegeben werden sollen, false, wenn nur die nicht verwalteten Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Schedule(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Plant Vorgänge für das angegebene Abonnement.</summary>
      <param name="subscription">Das zu planende Abonnement.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Trace">
      <summary>Ruft die Ablaufverfolgungsquelle des Brokers ab oder legt sie fest.</summary>
      <returns>Die Ablaufverfolgungsquelle des Brokers.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBus">
      <summary>Stellt den Nachrichtenbus für SignalR dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager,System.Int32)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Counters"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Erstellt ein neues Abonnement für den Abonnent.</summary>
      <returns>Das neu erstellte Abonnement.</returns>
      <param name="subscriber">Der Abonnent.</param>
      <param name="cursor">Der Lese-Cursor, der die Arbeit für das Abonnement angibt.</param>
      <param name="callback">Die Rückruffunktion.</param>
      <param name="messageBufferSize">Die Größe des Nachrichtenpuffers.</param>
      <param name="state">Der Status des Rückrufvorgangs.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateTopic(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Save(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.ScheduleEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Richtet ein Themenabonnement für den Abonnent auf dem Nachrichtenbus ein.</summary>
      <returns>Der Status des Abonnements.</returns>
      <param name="subscriber">Der Abonnent.</param>
      <param name="cursor">Der Lese-Cursor, der die Arbeit für das Abonnement angibt.</param>
      <param name="callback">Die Rückruffunktion.</param>
      <param name="maxMessages">Die Größe des Nachrichtenpuffers.</param>
      <param name="state">Der Status des Rückrufvorgangs.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Topics"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Trace">
      <summary>Ruft die Ablaufverfolgungsquelle ab, die zur Ablaufverfolgung der Codeausführung verwendet wird.</summary>
      <returns>Die Ablaufverfolgungsquelle, die zur Ablaufverfolgung der Codeausführung verwendet wird.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions">
      <summary>Stellt Erweiterungsmethoden für den SignalR-Nachrichtenbus bereit.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Action{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate``1(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{``0,Microsoft.AspNet.SignalR.Messaging.Message},``0)">
      <summary>Zählt die Nachrichten auf.</summary>
      <param name="messages">Die Liste, die die aufzuzählenden Nachrichten enthält.</param>
      <param name="filter">Die Methode, die die Nachrichten filtert, die aufgezählt werden.</param>
      <param name="onMessage">Die Methode, die jede Nachricht verarbeitet, die aufgezählt wird.</param>
      <param name="state">Das Objekt, das den Status des Vorgangs darstellt.</param>
      <typeparam name="T">Der Typ des <paramref name="state" />-Parameters.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Publish(Microsoft.AspNet.SignalR.Messaging.IMessageBus,System.String,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageResult">
      <summary>Stellt ein Meldungsergebnis dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />-Klasse.</summary>
      <param name="terminal">True, um anzugeben, dass dieses Meldungsergebnis beendend ist, andernfalls False.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />-Klasse.</summary>
      <param name="messages">Das Array der Nachrichten, die diesem <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" /> zugeordnet sind.</param>
      <param name="totalCount">Die Menge der Nachrichten, die im Nachrichtenarray mit Daten aufgefüllt werden.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Messages">
      <summary>Ruft ein <see cref="T:System.Collections.Generic.IList`1" />-Objekt ab, das dem Ergebnis zugeordnet ist.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.IList`1" />, die dem Ergebnis zugeordnet ist.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Terminal">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob dieses Meldungsergebnis beendend ist.</summary>
      <returns>True, wenn dieses Meldungsergebnis beendend ist, andernfalls False.</returns>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.MessageResult.TerminalMessage">
      <summary>Gibt an, ob dieses Meldungsergebnis beendend ist</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.TotalCount">
      <summary>Ruft die Anzahl der Nachrichten ab (bzw. legt diese fest), die im Nachrichtenarray mit Daten aufgefüllt werden.</summary>
      <returns>Die Menge der Nachrichten, die im Nachrichtenarray mit Daten aufgefüllt werden.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1">
      <summary>Stellt einen Nachrichtenspeicher dar, der von einem Ringpuffer gestützt wird.</summary>
      <typeparam name="T">Der Typ der Elemente im Speicher.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" />-Klasse mit der angegebenen Kapazität.</summary>
      <param name="capacity">Die Mindestkapazität des Speichers.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32,System.UInt32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" />-Klasse.</summary>
      <param name="capacity">Die Mindestkapazität des Speichers.</param>
      <param name="offset">Der Offset der ersten Nachricht im Speicher.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.Add(`0)">
      <summary>Fügt eine Nachricht zum Speicher hinzu und gibt die ID der neu hinzugefügten Nachricht zurück.</summary>
      <returns>Die ID der neu hinzugefügten Nachricht.</returns>
      <param name="message">Die hinzuzufügende Nachricht.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessageCount">
      <summary>Ruft die Anzahl der Nachrichten im Speicher ab.</summary>
      <returns>Die Anzahl der Nachrichten im Speicher.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessages(System.UInt64,System.Int32)">
      <summary>Ruft das nächste Batch von Nachrichten, angefangen mit der angegebenen ID, ab. </summary>
      <returns>Das nächste Batch von Nachrichten.</returns>
      <param name="firstMessageId">Die ID der ersten Nachricht..</param>
      <param name="maxMessages">Die maximale Anzahl der zurückzugebenden Nachrichten.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1">
      <summary>Stellt das dem Nachrichtenspeicher zugeordnete Ergebnis dar.</summary>
      <typeparam name="T">Der Typ des Ergebnisses.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.#ctor(System.UInt64,System.ArraySegment{`0},System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1" />-Klasse.</summary>
      <param name="firstMessageId">Der Bezeichner der ersten Nachricht.</param>
      <param name="messages">Die Nachricht, die dem Ergebnis zugeordnet ist.</param>
      <param name="hasMoreData">true, wenn das Ergebnis weitere Daten enthält, andernfalls false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.FirstMessageId">
      <summary>Ruft den Bezeichner der ersten Nachricht ab.</summary>
      <returns>Der Bezeichner der ersten Nachricht.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.HasMoreData">
      <summary>Ruft ab, ob das Ergebnis weitere Daten enthält.</summary>
      <returns>true, wenn das Ergebnis weitere Daten enthält, andernfalls false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.Messages">
      <summary>Ruft die Nachricht ab, die dem Ergebnis zugeordnet ist.</summary>
      <returns>Die Nachricht, die dem Ergebnis zugeordnet ist.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration">
      <summary>Stellt die allgemeinen Einstellungen für Nachrichtenbusimplementierung für horizontale Skalierung dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration" />-Klasse.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.DisableQueuing">
      <summary>Warteschlangen sind zurzeit deaktiviert.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.MaxQueueLength">
      <summary>Ruft die maximale Länge der ausgehenden Sendewarteschlange ab oder legt sie fest.</summary>
      <returns>Die maximale Länge der ausgehenden Sendewarteschlange.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.Id"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.LocalKeyInfo"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.ServerCreationTime"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore">
      <summary>Represents a scale out mapping store on SignalR messaging.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.Add(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})">
      <summary>Adds a new scaleout mapping store.</summary>
      <param name="id">The identifier.</param>
      <param name="message">The message.</param>
      <param name="localKeyInfo">The local key information.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.GetEnumerator(System.UInt64)">
      <summary>Gets the enumerator for the mapping store.</summary>
      <returns>The enumerator for the mapping store.</returns>
      <param name="id">The identifier.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.MaxMapping">
      <summary>Gets the maximum numbers of mapping for this instance.</summary>
      <returns>The maximum numbers of mapping for this instance.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage">
      <summary>Represents a message to the scaleout backplane.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
      <param name="messages">The messages from SignalR.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.FromBytes(System.Byte[])">
      <summary>Creates a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class from the specified data in bytes.</summary>
      <returns>The created instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" />.</returns>
      <param name="data">The data in bytes.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.Messages">
      <summary>Gets or sets the messages from SignalR.</summary>
      <returns>The messages from SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ServerCreationTime">
      <summary>Gets or sets the time the message was created on the origin server.</summary>
      <returns>The time the message was created on the origin server.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ToBytes">
      <summary>Converts a <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</summary>
      <returns>The converted <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus">
      <summary>Stellt eine allgemeine Basisklasse für Nachrichtenbusimplementierungen mit horizontaler Skalierung dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Close(System.Int32)">
      <param name="streamIndex">Der Index des zu schließenden Datenstroms.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnError(System.Int32,System.Exception)">
      <summary>Schließt die angegebene Warteschlange zum Senden von Nachrichten und bewirkt, dass ein asynchroner Fehler aller Sendevorgänge auftritt.</summary>
      <param name="streamIndex">Der Index des zu schließenden Datenstroms.</param>
      <param name="exception">Ein aufgetretene Fehler.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnReceived(System.Int32,System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)">
      <summary>Wird aufgerufen, wenn eine Nutzlast von der Backplane empfangen werden.Es sollte immer nur ein aktiver Aufruf vorhanden sein.</summary>
      <param name="streamIndex">Die ID des Datenstroms.</param>
      <param name="id">Die ID der Nutzlast in diesem Datenstrom.</param>
      <param name="message">Die Nachricht für horizontale Skalierung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Open(System.Int32)">
      <param name="streamIndex">Der Index des zu öffnenden Datenstroms.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)">
      <summary>Veröffentlicht eine Nachricht aus dem Nachrichtenbus mit horizontaler Skalierung.</summary>
      <returns>Ein Task, der den Vorgang zum Veröffentlichen einer Nachricht darstellt.</returns>
      <param name="message">Die zu veröffentlichende Nachricht.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Sendet Nachrichten aus dem SignalR-Nachrichtenbus mit horizontaler Skalierung.</summary>
      <returns>Ein Task, der den Vorgang zum Senden einer Nachricht darstellt.</returns>
      <param name="messages">Die zu sendenden Nachrichten.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Int32,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.StreamCount">
      <summary>Die Anzahl der Datenströme kann sich für die Lebensdauer dieser Instanz nicht ändern.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore">
      <summary>Represents a message store that is backed by a ring buffer.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.#ctor(System.UInt32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore" /> class.</summary>
      <param name="capacity">The minimum capacity of the store.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.Add(Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping)">
      <summary>Adds a message to the store and returns the ID of the newly added message.</summary>
      <returns>The ID of the newly added message.</returns>
      <param name="mapping">The mapping used in the store.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentCount">
      <summary>Gets or sets the number of message fragments in the store.</summary>
      <returns>The number of message fragments.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentSize">
      <summary>Gets or sets the size of the message fragment.</summary>
      <returns>The size of the message fragment.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessages(System.UInt64)">
      <summary>Gets the next batch of messages, beginning with the specified ID. </summary>
      <returns>The next batch of messages.</returns>
      <param name="firstMessageIdRequestedByClient">The first message ID requested by the client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessagesByMappingId(System.UInt64)">
      <summary>Gets the next batch of messages for the specified mapping ID.</summary>
      <returns>The next batch of messages.</returns>
      <param name="mappingId">The mapping ID.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.MaxMapping">
      <summary>Gets or sets the maximum mapping ID.</summary>
      <returns>The maximum mapping ID.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription">
      <summary>Stellt ein skaliertes Abonnement dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription" />-Klasse.</summary>
      <param name="identity">Die Identität des Abonnements.</param>
      <param name="eventKeys">Die Ereignisschlüssel für das Abonnement.</param>
      <param name="cursor">Der Schreib-Cursor.</param>
      <param name="streams">Die Datenströme, die zur Zuordnung der Schreib-Cursor verwendet werden.</param>
      <param name="callback">Die Rückruffunktion, die ausgeführt wird, wenn der Abonnementstatus geändert wird.</param>
      <param name="maxMessages">Die maximale Anzahl von Nachrichten, die für dieses Abonnement zugeordnet werden.</param>
      <param name="counters">Das Objekt, das verwendet wird, um auf die Leistungsindikatoren des Abonnements zuzugreifen.</param>
      <param name="state">Der Status des Abonnements.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.BeforeInvoke(System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.WriteCursor(System.IO.TextWriter)">
      <summary>Schreibt den Cursor mithilfe des angegebenen Textwriters.</summary>
      <param name="textWriter">Der Textwriter, der zum Schreiben des Cursors verwendet wird.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Subscription">
      <summary>Stellt eine Implementierung der <see cref="T:Microsoft.AspNet.SignalR.Messaging.ISubscription" />-Klasse dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.Subscription" />-Klasse.</summary>
      <param name="identity">Die Identität des Abonnements.</param>
      <param name="eventKeys">Die Liste, die die Ereignisschlüssel für das Abonnement enthält.</param>
      <param name="callback">Die Rückruffunktion, die ausgeführt wird, wenn der Abonnementstatus geändert wird.</param>
      <param name="maxMessages">Die maximale Anzahl von Nachrichten, die für dieses Abonnement zugeordnet werden.</param>
      <param name="counters">Das Objekt, das verwendet wird, um auf die Leistungsindikatoren des Abonnements zuzugreifen.</param>
      <param name="state">Der Status des Abonnements.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.AddEvent(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.BeforeInvoke(System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Disposable">
      <summary>Ruft die Methoden ab bzw. legt die Methoden fest, die zum Verwerfen der Ressourcen des Abonnements verwendet werden.</summary>
      <returns>Die Methoden, die zum Verwerfen der Ressourcen des Abonnements verwendet werden.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose(System.Boolean)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Identity"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Invoke(Microsoft.AspNet.SignalR.Messaging.MessageResult)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.MaxMessages"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.RemoveEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetEventTopic(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.UnsetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Work"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.WriteCursor(System.IO.TextWriter)">
      <summary>Schreibt den Cursor mithilfe des angegebenen Textwriters.</summary>
      <param name="textWriter">Der Textwriter, der zum Schreiben des Cursors verwendet wird.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Topic">
      <summary>Stellt das Thema auf dem SignalR-Nachrichtenbus dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.#ctor(System.UInt32,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.Topic" />-Klasse.</summary>
      <param name="storeSize">Die Größe des Nachrichtenspeichers.</param>
      <param name="lifespan">Das Lebensdauer des Themas.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.AddSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Fügt das angegebenen Abonnement zur Liste hinzu.</summary>
      <param name="subscription">Das hinzuzufügende Abonnement.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.IsExpired">
      <summary>Ruft einen Wert ab, der angibt, ob das Thema abgelaufen ist.</summary>
      <returns>True, wenn das Thema abgelaufen ist, andernfalls False.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.LastUsed">
      <summary>Ruft die späteste Zeit ab, zu der das Abonnement verwendet wurde.</summary>
      <returns>Die späteste Zeit, zu der das Abonnement verwendet wurde.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.MarkUsed"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.RemoveSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Löscht das angegebene Abonnement aus der Liste.</summary>
      <param name="subscription">Das zu löschende Abonnement.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Store">
      <summary>Ruft den Nachrichtenspeicher ab bzw. legt ihn fest.</summary>
      <returns>Der Nachrichtenspeicher.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.SubscriptionLock">
      <summary>Ruft das Objekt ab, das zum Sperren des Themas verwendet wird, bzw. legt es fest.</summary>
      <returns>Das Objekt, das zum Sperren des Themas verwendet wird.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Subscriptions">
      <summary>Ruft die Liste ab bzw. legt die Liste fest, die die Themenabonnements enthält.</summary>
      <returns>Die Liste, die die Themenabonnements enthält.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup">
      <summary>Stellt eine Auflistung von Themen dar, die zum Nachschlagen verwendet wird.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Clear">
      <summary>Entfernt alle Themen aus der Auflistung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.ContainsKey(System.String)">
      <summary>Bestimmt, ob das Thema mit dem angegebenen Schlüssel in der Auflistung enthalten ist.</summary>
      <returns>true, wenn das Thema mit dem angegebenen Schlüssel in der Auflistung enthalten ist, andernfalls false.</returns>
      <param name="key">Der Schlüssel des Themas.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Count">
      <summary>Ruft die Anzahl aller Themen (allgemeine und Gruppenthemen) in der Auflistung ab.</summary>
      <returns>Die Anzahl aller Themen (allgemeiner und Gruppenthemen) in der Auflistung.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetEnumerator">
      <summary>Ruft einen Enumerator ab, der die Auflistung durchläuft.</summary>
      <returns>Der Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetOrAdd(System.String,System.Func{System.String,Microsoft.AspNet.SignalR.Messaging.Topic})">
      <summary>Fügt der Auflistung ein Thema mithilfe der angegebenen Funktion hinzu, wenn der Schlüssel nicht bereits vorhanden ist.</summary>
      <returns>Das generierte Thema für den angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel des hinzuzufügenden Themas.</param>
      <param name="factory">Die Funktion, die zum Generieren des Themas für den Schlüssel verwendet wird.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Item(System.String)">
      <summary>Ruft das Thema mit dem angegebenen Schlüssel ab.</summary>
      <returns>Das ggf gefundene Thema mit dem angegebenen Schlüssel oder null, wenn das Thema nicht gefunden wurde.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ruft einen Enumerator ab, der die Auflistung durchläuft.</summary>
      <returns>Der Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryGetValue(System.String,Microsoft.AspNet.SignalR.Messaging.Topic@)">
      <summary>Versucht, das Thema mit dem angegebenen Schlüssel aus der Auflistung abzurufen.</summary>
      <returns>true, wenn der Schlüssel gefunden wurde, andernfalls false.</returns>
      <param name="key">Der abzurufende Schlüssel.</param>
      <param name="topic">Der Rückgabewert dieser Methode enthält das abgerufene Thema.Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryRemove(System.String)">
      <summary>Versucht, das Thema mit dem angegebenen Schlüssel aus der Auflistung zu entfernen und zurückzugeben.</summary>
      <returns>Das entfernte Thema.</returns>
      <param name="key">Der Schlüssel des zu entfernenden Themas.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerRequest">
      <summary>Stellt eine Server-Anforderung dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerRequest" />-Klasse.</summary>
      <param name="environment">Die Umgebung.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Cookies">
      <summary>Ruft die Cookies ab, die dem Server zugeordnet sind.</summary>
      <returns>Die Cookies, die den Server zugeordnet sind.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Environment"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Headers">
      <summary>Ruft die Header ab, die der Anforderung zugeordnet sind.</summary>
      <returns>Die Header, die der Anforderung zugeordnet sind.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.LocalPath"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.QueryString">
      <summary>Ruft die Auflistung der Server-Abfragezeichenfolgenvariablen ab.</summary>
      <returns>Die Auflistung von Server-Abfragezeichenfolgenvariablen.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.ReadForm"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Url">
      <summary>Ruft die Informationen zur URL der aktuellen Anforderung ab.</summary>
      <returns>Ein <see cref="T:System.Uri" />-Objekt, das Informationen über die URL der aktuellen Anforderung enthält.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.User">
      <summary>Ruft den Benutzer für diesen Server ab.</summary>
      <returns>Der Benutzer für diesen Server.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerResponse">
      <summary>Stellt ein Severfeedback als Antwort auf die Anforderung dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerResponse" />-Klasse.</summary>
      <param name="environment">Die Umgebung.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.CancellationToken">
      <summary>Ruft das Abbruchtoken ab, das der Antwort zugeordnet ist.</summary>
      <returns>Das der Antwort zugeordnete Abbruchtoken.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.ContentType">
      <summary>Ruft den Typ des Inhalts ab, der der Antwort zugeordnet ist oder legt diesen fest.</summary>
      <returns>Der Typ des Inhalts, der der Antwort zugeordnet ist.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Flush">
      <summary>Leert diese Instanz.</summary>
      <returns>Die geleerte Instanz.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Schreibt eine Antwort mithilfe des zugehörigen Arraysegments.</summary>
      <param name="data">Das Arraysegment.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware">
      <summary>Represents the middleware used by the hub dispatcher.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware">
      <summary>Stellt die Middleware für die dauerhafte Verbindung dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager">
      <summary>Stellt eine Schnittstelle dar, die Eigenschaften zur Verfügung stellt, die eine Ablaufverfolgung der Codeausführung ermöglichen.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Item(System.String)">
      <summary>Ruft das <see cref="T:System.Diagnostics.TraceSource" />-Objekt mit dem angegebenen Namen aus der Quelle ab.</summary>
      <returns>Ruft das <see cref="T:System.Diagnostics.TraceSource" />-Objekt mit dem angegebenen Namen für die Quelle ab.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Switch">
      <summary>Ruft den Schalter ab, der die Ablaufverfolgung der Codeausführung und die Debugausgabe steuert.</summary>
      <returns>Das <see cref="T:System.Diagnostics.SourceSwitch" />-Objekt.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.TraceManager">
      <summary>Stellt Eigenschaften zur Verfügung, die eine Ablaufverfolgung der Codeausführung ermöglichen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Tracing.TraceManager" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor(System.Diagnostics.TextWriterTraceListener)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Item(System.String)">
      <summary>Ruft das <see cref="T:System.Diagnostics.TraceSource" />-Objekt mit dem angegebenen Namen aus der Quelle ab.</summary>
      <returns>Ruft das <see cref="T:System.Diagnostics.TraceSource" />-Objekt mit dem angegebenen Namen für die Quelle ab.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Switch">
      <summary>Ruft den Schalter ab, der die Ablaufverfolgung der Codeausführung und die Debugausgabe steuert.</summary>
      <returns>Das <see cref="T:System.Diagnostics.SourceSwitch" />-Objekt.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport">
      <summary>Stellt einen Forever Frame-Transport dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport" />-Klasse.</summary>
      <param name="context">Der Hostkontext.</param>
      <param name="resolver">Der Abhängigkeitskonfliktlöser.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Initialisiert das Antwortobjekt.</summary>
      <returns>Das <see cref="T:System.Threading.Tasks.Task" />-Objekt, das den Initialisierungsantwortvorgang darstellt.</returns>
      <param name="connection">Die Transportverbindung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.KeepAlive">
      <summary>Hält die Verbindung aktiv.</summary>
      <returns>Das <see cref="T:System.Threading.Tasks.Task" />-Objekt, das den Keep-Alive-Vorgang darstellt.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.OutputWriter">
      <summary>Ruft den HTML-Textwriter ab, der die Kontextantwort in den Ausgabedatenstrom schreibt.</summary>
      <returns>Der HTML-Textwriter, der die Kontextantwort in den Ausgabedatenstrom schreibt.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Sendet die angegebene Kontextantwort.</summary>
      <returns>Das <see cref="T:System.Threading.Tasks.Task" />-Objekt, das den Sendevorgang darstellt.</returns>
      <param name="response">Die zu sendende Antwort.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />-Klasse.</summary>
      <param name="context">Der Hostkontext.</param>
      <param name="resolver">Der Abhängigkeitskonfliktlöser.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />-Klasse.</summary>
      <param name="context">Der Hostkontext.</param>
      <param name="jsonSerializer">Der JSON-Serialisierer.</param>
      <param name="heartbeat">Der Transporttakt.</param>
      <param name="performanceCounterWriter">Der Leistungsindikator-Writer.</param>
      <param name="traceManager">Der Ablaufverfolgungs-Manager.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Connected">
      <summary>Ruft die Verbindungsfunktion für den <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" /> ab bzw. legt sie fest.</summary>
      <returns>Die Verbindungsfunktion für den <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Stellt den Enqueue-Vorgang für die Transporte bereit.</summary>
      <returns>Der Enqueue-Vorgang für die Transporte.</returns>
      <param name="writeAsync">Schreibt asynchron.</param>
      <param name="state">Das Zustandsobjekt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializePersistentState">
      <summary>Initialisiert den dauerhaften Zustand des Forever-Transports.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Initialisiert die Verbindungsantwort für den Forever-Transport.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="connection">Die Transportverbindung.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.JsonSerializer">
      <summary>Ruft den JSON-Serialisierer für den Forever-Transport ab.</summary>
      <returns>Der JSON-Serialisierer für den Forever-Transport.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.LastMessageId">
      <summary>Ruft die letzte Nachrichten-ID für den Forever-Transport ab.</summary>
      <returns>Die letzte Nachrichten-ID für den Forever-Transport.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSending(System.String)">
      <summary>Stellt die Nutzlast für einen sendenden Transport bereit.</summary>
      <param name="payload">Die Zeichenfolgen-Nutzlast.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSendingResponse(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Stellt eine Antwort für die sendenden Methoden bereit.</summary>
      <param name="response">Die Antwort auf eine Verbindung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Stellt eine Verbindung zur Verarbeitung der Anforderung bereit.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="connection">Die Transportverbindung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequestCore(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Stellt eine Anforderung zur Verarbeitung der Verbindung für den Transport bereit.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="connection">Die Transportverbindung.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Received">
      <summary>Ruft eine Funktion zum Empfang für den Forever-Transport ab bzw. legt sie fest.</summary>
      <returns>Die Funktion, die für den Forever-Transport empfangen soll.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Reconnected">
      <summary>Ruft die erneut verbundene Funktion für den Forever-Transport ab bzw. legt sie fest.</summary>
      <returns>Die erneut verbundene Funktion für den Forever-Transport.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Sendet eine Antwort auf eine Verbindung für den Forever-Transport.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="response">Die dauerhafte Antwort.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(System.Object)">
      <summary>Sendet ein Objekt an den Forever-Transport.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="value">Der zu sendende Wert.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.TransportConnected">
      <summary>Ruft den verbundenen Transport für den <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" /> ab bzw. legt ihn fest.</summary>
      <returns>Der verbundene Transport für den <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITrackingConnection">
      <summary> Stellt eine Verbindung dar, die von einem <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" />-Objekt nachverfolgt werden kann. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary> Wendet den neuen Status auf die Verbindung an. </summary>
      <param name="states">Einer der Werte der Enumeration <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates" />.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.CancellationToken"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectionId"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectTask"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Disconnect"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.DisconnectThreshold"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.End"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsTimedOut"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.KeepAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.SupportsKeepAlive"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Timeout"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Url"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransport">
      <summary>Stellt einen Transport dar, der kommuniziert.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Connected">
      <summary>Ruft einen Rückruf ab, der aufgerufen wird, wenn die anfängliche Verbindung eine Verbindung mit dem Transport herstellt, oder legt diesen Rückruf fest.</summary>
      <returns>Gibt <see cref="T:System.Func`1" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.ConnectionId">
      <summary>Ruft die Verbindungs-ID für den Transport ab oder legt sie fest.</summary>
      <returns>Gibt <see cref="T:System.String" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Disconnected">
      <summary>Ruft einen Rückruf ab, der aufgerufen wird, wenn der Transport die Verbindung trennt, oder legt diesen Rückruf fest.</summary>
      <returns>Gibt <see cref="T:System.Func`1" /> zurück.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Verarbeitet das angegebene <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />-Objekt für diesen Transport.</summary>
      <returns>Ein <see cref="T:System.Threading.Tasks.Task" />, der abgeschlossen wird, nachdem der Transport die Verarbeitung der Verbindung abgeschlossen hat.</returns>
      <param name="connection">Das zu verarbeitende <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />-Objekt.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Received">
      <summary>Ruft einen Rückruf ab, der aufgerufen wird, wenn der Transport Daten empfängt, oder legt diesen Rückruf fest.</summary>
      <returns>Gibt <see cref="T:System.Func`2" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Reconnected">
      <summary>Ruft einen Rückruf ab, der aufgerufen wird, wenn der Transport erneut eine Verbindung herstellt, oder legt diesen Rückruf fest.</summary>
      <returns>Gibt <see cref="T:System.Func`1" /> zurück.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.Send(System.Object)">
      <summary>Sendet Daten über den Transport.</summary>
      <returns>Ein <see cref="T:System.Threading.Tasks.Task" />, der abgeschlossen wird, nachdem der Sendevorgang abgeschlossen ist.</returns>
      <param name="value">Der zu sendende Wert.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.TransportConnected">
      <summary>Ruft einen Rückruf ab, der aufgerufen wird, wenn der Transport eine Verbindung herstellt, oder legt diesen Rückruf fest.</summary>
      <returns>Gibt <see cref="T:System.Func`1" /> zurück.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection">
      <summary>Stellt den Transport für die Verbindung dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Empfängt Abonnementdaten vom Transport.</summary>
      <returns>Die Abonnementdaten vom Transport.</returns>
      <param name="messageId">Die Nachrichten-ID für das Abonnement.</param>
      <param name="callback">Die Methode, die die empfangene Nachricht verarbeitet.</param>
      <param name="maxMessages">Die Nachrichtenpuffergröße.</param>
      <param name="state">Der Status der Transportverbindung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat">
      <summary>Verwaltet die Nachverfolgung des Status von Verbindungen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Fügt der Liste der nachverfolgten Verbindungen eine neue Verbindung hinzu.</summary>
      <returns>Die ersetzte Verbindung, wenn vorhanden.</returns>
      <param name="connection">Die hinzuzufügende Verbindung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.GetConnections">
      <summary>Ruft eine Liste der nachverfolgten Verbindungen ab.</summary>
      <returns>Eine Liste der Verbindungen.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Markiert eine vorhandene Verbindung als aktiv.</summary>
      <param name="connection">Die zu markierende Verbindung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Entfernt eine Verbindung aus der Liste der nachverfolgten Verbindungen.</summary>
      <param name="connection">Die zu entfernende Verbindung.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportManager">
      <summary>Verwaltet die Transport für Verbindungen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Ruft den angegebenen Transport für das angegebene <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />-Objekt ab.</summary>
      <returns>Das <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" />-Objekt für den angegebenen <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</returns>
      <param name="hostContext">Der <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> für die aktuelle Anforderung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.SupportsTransport(System.String)">
      <summary>Bestimmt, ob der angegebene Transport unterstützt wird.</summary>
      <returns>true, wenn der Transport unterstützt wird, andernfalls false.</returns>
      <param name="transportName">Der Name der zu testenden Transports.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport" />-Klasse.</summary>
      <param name="context">Der Hostkontext.</param>
      <param name="resolver">Der Abhängigkeitskonfliktlöser.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Connected">
      <summary>Ruft die verbundene Funktion ab bzw. legt sie fest.</summary>
      <returns>Die verbundene Funktion.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.DisconnectThreshold">
      <summary>Ruft den Trennschwellenwert ab.</summary>
      <returns>Der Trennungschwellenwert.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.IsConnectRequest">
      <summary>Ruft einen Wert ab, der angibt, ob der Transport eine Verbindungsanforderung ist.</summary>
      <returns>True, wenn der Transport eine Verbindungsanforderung ist, andernfalls False.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Verarbeitet die Verbindungsanforderung.</summary>
      <returns>Der Task, der den Vorgang der Anforderung darstellt.</returns>
      <param name="connection">Die zu verarbeitende Verbindung.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Received">
      <summary>Ruft die empfangene Funktion ab bzw. legt sie fest.</summary>
      <returns>Die empfangene Funktion.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Reconnected">
      <summary>Ruft den erneut verbundenen Transport ab bzw. legt ihn fest.</summary>
      <returns>Der Task, der die Verbindung für den Transport erneut herstellt.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Sendet eine Antwort für den Transport.</summary>
      <returns>Der Task, der den Vorgang zum Senden einer Antwort darstellt.</returns>
      <param name="response">Die zu sendende Antwort.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(System.Object)">
      <summary>Sendet einen langen Abruftransport mit einem angegebenen Wert.</summary>
      <returns>Der Task, der den Vorgang zum Senden eines langen Abruftransports darstellt.</returns>
      <param name="value">Der Wert.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.SupportsKeepAlive">
      <summary>Ruft einen Wert ab, der angibt, ob der Transport Keep-Alive unterstützt.</summary>
      <returns>True, wenn der Transport Keep-Alive unterstützt, andernfalls False.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.TransportConnected">
      <summary>Ruft den verbundenen Transport ab bzw. legt ihn fest.</summary>
      <returns>Der Task, der die Verbindung für den Transport herstellt.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse">
      <summary> Stellt eine Antwort auf eine Verbindung dar. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor(System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{System.IO.TextWriter})">
      <summary>Erstellt eine neue Instanz von <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
      <param name="exclude">Ein Filter, der bestimmt, ob Nachrichten auf den Client geschrieben werden sollen.</param>
      <param name="writeCursor">Der Cursorwriter.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Aborted">
      <summary>Ruft einen Wert ab, der angibt, ob das Schließen der Verbindung erzwungen wurde, bzw. legt ihn fest.</summary>
      <returns>true, wenn das Schließen der Verbindung erzwungen wurde, andernfalls false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Disconnect">
      <summary>Ruft einen Wert ab, der angibt, ob die Verbindung einen Trennungsbefehl empfängt, der legt diesen Wert fest.</summary>
      <returns>true, wenn die Verbindung einen Trennungsbefehl empfängt, andernfalls false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.GroupsToken">
      <summary>Ruft ein signiertes Token ab bzw. legt ein signiertes Token fest, das die Liste der Gruppen darstellt.</summary>
      <returns>Die Gruppen der Token.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Initializing">
      <summary>true, wenn die Verbindung aktuell initialisiert wird.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.LongPollDelay">
      <summary>Ruft die Zeitspanne ab, die der lange abfragende Client warten soll, bevor eine Verbindung erneut hergestellt wird, wenn keine Daten empfangen werden, oder legt diese Zeitspanne fest.</summary>
      <returns>Die Zeitspanne, die der lange abfragende Client warten soll, bevor eine Verbindung erneut hergestellt wird, wenn keine Daten empfangen werden.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Messages">
      <summary>Ruft die Liste der Nachrichten ab, die an die empfangende Verbindung gesendet werden sollen, oder legt diese Liste fest.</summary>
      <returns>Die Liste der Nachrichten, die an die empfangende Verbindung gesendet werden sollen.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Microsoft#AspNet#SignalR#Json#IJsonWritable#WriteJson(System.IO.TextWriter)">
      <summary>Serialisiert nur die erforderlichen Komponenten der <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" /> in JSON mithilfe von JsonTextWriter von Json.NET, um die Leistung zu optimieren.</summary>
      <param name="writer">Das <see cref="T:System.IO.TextWriter" />-Objekt, das die JSON-Serialisierung empfängt.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Reconnect">
      <summary>true, wenn der Client einen erneuten Verbindungsversuch ausführen soll.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Terminal"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.TotalCount">
      <summary>Ruft die Gesamtzahl der Nachrichten ab, die an die empfangende Verbindung gesendet wurden, bzw. legt diese Anzahl fest.</summary>
      <returns>Die Gesamtzahl der Nachrichten, die an die empfangende Verbindung gesendet wurden.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport">
      <summary>Stellt den Transport zum Senden von Ereignissen vom SignalR-Server zur Verfügung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />-Klasse.</summary>
      <param name="context">Der Hostkontext.</param>
      <param name="resolver">Der IDependency-Konfliktlöser.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Initialisiert eine Antwort auf das <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />-Objekt.</summary>
      <returns>Die Initialisierungsantwort für das <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />-Objekt.</returns>
      <param name="connection">Die Initialisierung der Transportverbindung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.KeepAlive">
      <summary>Gibt eine Keep-Alive-Methode zurück, um eine dauerhafte Verbindung mit der Internetressource herzustellen.</summary>
      <returns>Eine Keep-Alive-Methode, um eine dauerhafte Verbindung mit der Internetressource herzustellen.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Sendet eine dauerhafte Antwort an das <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />-Objekt.</summary>
      <returns>Eine dauerhafte Antwort, die an das <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />-Objekt gesendet werden soll.</returns>
      <param name="response">Die dauerhafte Antwort.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates">
      <summary>Zählt die Attribute von TransportConnectionState auf.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Aborted">
      <summary>Die abgebrochene Verbindung des Status.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Added">
      <summary>Die hinzugefügte Verbindung des Status.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disconnected">
      <summary>Die getrennte Verbindung des Status.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.DisconnectMessageReceived">
      <summary>Die empfangene Trennungsnachricht des Status.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disposed">
      <summary>Die verworfene Verbindung des Status.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.HttpRequestEnded">
      <summary>Die beendete HTTP-Anforderung des Verbindungsstatus.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.None">
      <summary>Der Status Keine Verbindung.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.QueueDrained">
      <summary>Die geleerte Warteschlange des Verbindungsstatus.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Removed">
      <summary>Die entfernte Verbindung des Status.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Replaced">
      <summary>Die ersetzte Verbindung des Status.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />-Klasse.</summary>
      <param name="context">Der Hostkontext.</param>
      <param name="heartbeat">Der Transporttakt.</param>
      <param name="performanceCounterManager">Der Leistungsindikator-Manager.</param>
      <param name="traceManager">Der Ablaufverfolgungs-Manager.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort">
      <summary>Bricht den aktuellen Taskvorgang für die <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> ab.</summary>
      <returns>Der aktuelle Taskvorgang, der für die <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> abgebrochen werden soll.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort(System.Boolean)">
      <summary>Bricht den aktuellen Taskvorgang für die <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> ab.</summary>
      <returns>Der aktuelle Taskvorgang, der für die <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> abgebrochen werden soll.</returns>
      <param name="clean">Gibt an, ob alle Tasks im abgebrochenen Vorgang bereinigt werden sollen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary>Wendet den Transportverbindungsstatus für die Trennungsbasis an.</summary>
      <param name="states">Die Transportverbindungsstatus.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CancellationToken">
      <summary>Ruft ein Abbruchtoken ab, das die Lebensdauer der Verbindung darstellt.</summary>
      <returns>Ein Abbruchtoken, das die Lebensdauer der Verbindung darstellt.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Connection">
      <summary>Ruft die Transportverbindung für die Transporttrennungsbasis ab bzw. legt sie fest.</summary>
      <returns>Die Transportverbindung für die Transporttrennungsbasis.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionEndToken">
      <summary>Ruft die Verbindung ab, die den Vorgang für dieses Token beenden soll.</summary>
      <returns>Die Verbindung, die den Vorgang für dieses Token beenden soll.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionId">
      <summary>Ruft die ID der Verbindung ab bzw. legt sie fest.</summary>
      <returns>Eine Zeichenfolge, die die ID der Verbindung enthält.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectTask"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Context">
      <summary>Ruft den Hostkontext ab, der der Transporttrennungsbasis zugeordnet ist.</summary>
      <returns>Der Hostkontext, der der Transporttrennungsbasis zugeordnet ist.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CreateResponseWriter">
      <summary>Stellt einen Writer zum Erstellen einer Antwort für die Transporttrennungsbasis dar.</summary>
      <returns>Ein Writer zum Erstellen einer Antwort für die Transporttrennungsbasis.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnect">
      <summary>Bewirkt, dass die Verbindung getrennt wird.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnected">
      <summary>Ruft die Disconnected-Eigenschaft für die Verbindungstransporte ab bzw. legt sie fest.</summary>
      <returns>Die Disconnected-Eigenschaft für die Verbindungstransporte.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.DisconnectThreshold">
      <summary>Ruft die Zeitspanne ab, die nach Trennung der Verbindung gewartet werden muss, bevor das Trennungsereignis der Verbindung ausgelöst wird.</summary>
      <returns>Gibt <see cref="T:System.TimeSpan" /> zurück.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der Klasse <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose(System.Boolean)">
      <summary>Gibt die von der <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />-Klasse verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">True, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. False, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.End">
      <summary>Beendet die Verbindung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
      <summary>Stellt das Objekt zum Beenden des Warteschlangenvorgangs dar.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
      <param name="writeAsync">Schreibt asynchron.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Stellt das Objekt zum Beenden des Warteschlangenvorgangs dar.</summary>
      <returns>Das Objekt, das das Ende des Warteschlangenvorgangs darstellt.</returns>
      <param name="writeAsync">Schreibt asynchron.</param>
      <param name="state">Der Zustand.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Heartbeat">
      <summary>Ruft den Transporttakt zur Verwaltung des Nachverfolgungsstatus der Verbindungen ab.</summary>
      <returns>Der Transporttakt zur Verwaltung des Nachverfolgungsstatus der Verbindungen.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.HostShutdownToken"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IncrementErrors">
      <summary>Erhöht die Fehler zur Transporttrennungsbasis.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.InitializePersistentState">
      <summary>Initialisiert den dauerhaften Status für die Transporttrennungsbasis.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAbortRequest">
      <summary>Ruft einen Wert ab, der die Verbindung darstellt, die eine Abbruchanforderung vornimmt.</summary>
      <returns>True, wenn die Verbindung eine Abbruchanforderung vornimmt, andernfalls False.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAlive">
      <summary>Ruft einen Wert ab, der angibt, ob die Verbindung aktiv ist.</summary>
      <returns>True, wenn die Verbindung aktiv ist, andernfalls False.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsConnectRequest">
      <summary>Ruft einen Wert ab, der angibt, ob die Verbindungen eine Anforderung vorgenehmen.</summary>
      <returns>True, wenn die Verbindungen eine Anforderung vornehmen, andernfalls False.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsTimedOut">
      <summary>Ruft einen Wert ab, der angibt, ob für die Verbindung ein Timeout aufgetreten ist.</summary>
      <returns>True, wenn ein Verbindungstimeout aufgetreten ist, andernfalls False.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.KeepAlive">
      <summary>Sendet einen Keep-Alive-Ping über die Verbindung.</summary>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task" /> zurück.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.OutputWriter">
      <summary>Ruft den Ausgabeschreiber ab, der eine sequenzielle Reihe von Zeichen schreiben kann.</summary>
      <returns>Der Ausgabeschreiber, der eine sequenzielle Reihe von Zeichen schreiben kann.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.SupportsKeepAlive">
      <summary>Ruft einen Wert ab, der angibt, ob der Transport Keep-Alive unterstützt.</summary>
      <returns>True, wenn der Transport Keep-Alive unterstützt, andernfalls False.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Timeout">
      <summary>Bewirkt, dass für die Verbindung ein Timeout auftritt.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Trace">
      <summary>Ruft die Quelle zur Ablaufverfolgung der Codeausführung ab und zur Zuordnung der Ablaufverfolgungsnachrichten zu ihrer Quelle.</summary>
      <returns>Die Quelle zur Ablaufverfolgung der Codeausführung und zur Zuordnung der Ablaufverfolgungsnachrichten zu ihrer Quelle.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Url">
      <summary>Ruft das URI der Verbindung ab.</summary>
      <returns>Das URI der Verbindung.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat">
      <summary>Stellt die Standardimplementierung von <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" /> dar.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />-Klasse.</summary>
      <param name="resolver">Das <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />-Objekt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Fügt der Liste der nachverfolgten Verbindungen eine neue Verbindung hinzu.</summary>
      <param name="connection">Die hinzuzufügende Verbindung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der Klasse <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose(System.Boolean)">
      <summary>Gibt die von der <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />-Klasse verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. false, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.GetConnections">
      <summary>Ruft eine Liste der nachverfolgten Verbindungen ab.</summary>
      <returns>Eine Liste der Verbindungen.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Markiert eine vorhandene Verbindung als aktiv.</summary>
      <param name="connection">Die zu markierende Verbindung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Entfernt eine Verbindung aus der Liste der nachverfolgten Verbindungen.</summary>
      <param name="connection">Die zu entfernende Verbindung.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportManager">
      <summary>Die <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportManager" />-Standardimplementierung.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportManager" />-Klasse.</summary>
      <param name="resolver">Das <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />-Standardobjekt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Ruft den angegebenen Transport für das angegebene <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />-Objekt ab.</summary>
      <returns>Das <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" />-Objekt für den angegebenen <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</returns>
      <param name="hostContext">Der <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> für die aktuelle Anforderung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Register(System.String,System.Func{Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransport})">
      <summary>Fügt der Liste der unterstützten Transporte einen neuen Transport hinzu.</summary>
      <param name="transportName">Der angegebene Transport.</param>
      <param name="transportFactory">Die Factorymethode für den angegebenen Transport.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Remove(System.String)">
      <summary>Entfernt einen Transport aus der Liste der unterstützten Transporte.</summary>
      <param name="transportName">Der angegebene Transport.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.SupportsTransport(System.String)">
      <summary>Bestimmt, ob der angegebene Transport unterstützt wird.</summary>
      <returns>true, wenn der Transport unterstützt wird, andernfalls false.</returns>
      <param name="transportName">Der Name der zu testenden Transports.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport" />-Klasse.</summary>
      <param name="context">Der Hostkontext.</param>
      <param name="resolver">Der Abhängigkeitskonfliktlöser.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CancellationToken">
      <summary>Ruft das Abbruchtoken ab, das für den Transport verwendet wird.</summary>
      <returns>Das Abbruchtoken, das für den Transport verwendet wird.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CreateResponseWriter"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.IsAlive">
      <summary>Ruft einen Wert ab, der angibt, ob der Transport aktiv ist.</summary>
      <returns>True, wenn der Transport aktiv ist, andernfalls False.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.KeepAlive">
      <summary>Hält den Transport aktiv.</summary>
      <returns>Der Task, der den Transport aktiv hält.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Verarbeitet eine Verbindungsanforderung.</summary>
      <returns>Der Task, der den Vorgang zur Anforderung einer Verbindung darstellt.</returns>
      <param name="connection">Die Verbindung.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Sendet eine Websocketantwort.</summary>
      <returns>Der Task, der den Vorgang zum Senden einer Antwort darstellt.</returns>
      <param name="response">Die zu sendende Antwort.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(System.Object)">
      <summary>Sendet einen Wert des Transports.</summary>
      <returns>Der Task, der den Vorgang zum Senden eines Werts des Transports darstellt.</returns>
      <param name="value">Der zu sendende Wert.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler">
      <summary>Stellt eine Instanz dar, die SignalR-Websockets verwaltet.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.#ctor(System.Nullable{System.Int32})"></member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Close">
      <summary>Schließt diese Instanz.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Error">
      <summary>Ruft den Fehler während der Verarbeitung des Websockets ab oder legt ihn fest.</summary>
      <returns>Der Fehler während der Verarbeitung des Websockets.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.MaxIncomingMessageSize">
      <summary>Ruft die maximale Größe eingehender Nachrichten ab.</summary>
      <returns>Die maximale Größe eingehender Nachrichten.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnClose(System.Boolean)">
      <summary>Tritt auf, wenn diese Instanz geschlossen wird.</summary>
      <param name="clean">true, um die Ablaufverfolgungen zu bereinigen.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnError">
      <summary>Löst ein Ereignis aus, wenn während des Handlervorgangs ein Fehler auftritt.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.Byte[])">
      <summary>Löst ein Ereignis aus, wenn eine Nachricht empfangen wird.</summary>
      <param name="message">Die Nachricht.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.String)">
      <summary>Löst ein Ereignis aus, wenn eine Nachricht empfangen wird.</summary>
      <param name="message">Die Nachricht.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnOpen">
      <summary>Löst ein Ereignis aus, wenn diese Instanz geöffnet wird.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.ProcessWebSocketRequestAsync(System.Net.WebSockets.WebSocket,System.Threading.CancellationToken)">
      <summary>Verarbeitet die vom Handler empfangene Anforderung asynchron.</summary>
      <returns>Das Ergebnis des Vorgangs.</returns>
      <param name="webSocket">Der Websocket.</param>
      <param name="disconnectToken">Das Trennungstoken.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Send(System.String)">
      <summary>Sendet eine Nachricht, die dem Handler zugeordnet ist.</summary>
      <returns>Die gesendete Nachricht.</returns>
      <param name="message">Die zu sendende Nachricht.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.WebSocket">
      <summary>Ruft den Websocket ab oder legt ihn fest.</summary>
      <returns>Der Websocket.</returns>
    </member>
    <member name="T:Owin.ObsoleteOwinExtensions"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="T:Owin.OwinExtensions">
      <summary>Stellt die Verbindung für die Owin-Erweiterungen dar.</summary>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder)">
      <summary>Ordnet SignalR-Hubs einer Anwendungsgeneratorpipeline unter /signalr zu.</summary>
      <returns>Gibt <see cref="T:Owin.IAppBuilder" /> zurück.</returns>
      <param name="builder">Der Anwendungsgenerator.</param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Ordnet SignalR-Hubs einer Anwendungsgeneratorpipeline unter /signalr zu.</summary>
      <returns>Gibt <see cref="T:Owin.IAppBuilder" /> zurück.</returns>
      <param name="builder">Der Anwendungsgenerator.</param>
      <param name="configuration">Die zu verwendende <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />. </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String)">
      <summary>Ordnet die angegebene SignalR-<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> der Anwendungsgeneratorpipeline im angegebenen Pfad zu. </summary>
      <returns>Gibt <see cref="T:Owin.IAppBuilder" /> zurück.</returns>
      <param name="builder">Der Anwendungsgenerator.</param>
      <param name="path"> Der Pfad, dem <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> zugeordnet werden soll.</param>
      <typeparam name="TConnection">Der Typ des <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekts.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Ordnet die angegebene SignalR-<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> der Anwendungsgeneratorpipeline im angegebenen Pfad zu. </summary>
      <returns>Gibt <see cref="T:Owin.IAppBuilder" /> zurück.</returns>
      <param name="builder">Der Anwendungsgenerator.</param>
      <param name="path">Der Pfad, der die dauerhafte Verbindung zugeordnet werden soll.</param>
      <param name="configuration">Die zu verwendende <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />. </param>
      <typeparam name="TConnection">Der Typ des <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekts.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Ordnet SignalR-Hubs einer Anwendungsgeneratorpipeline im angegebenen Pfad zu.</summary>
      <returns>Gibt <see cref="T:Owin.IAppBuilder" /> zurück.</returns>
      <param name="builder">Der Anwendungsgenerator.</param>
      <param name="path">Der Pfad, dem SignalR-Hubs zugeordnet werden sollen.</param>
      <param name="configuration">Die zu verwendende <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />. </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Ordnet die angegebene <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> der Anwendungsgeneratorpipeline im angegebenen Pfad zu. </summary>
      <returns>Gibt <see cref="T:Owin.IAppBuilder" /> zurück.</returns>
      <param name="builder">Der Anwendungsgenerator.</param>
      <param name="path">Der Pfad, der die dauerhafte Verbindung zugeordnet werden soll.</param>
      <param name="connectionType">Der Typ des <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekts.</param>
      <param name="configuration">Die zu verwendende <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />. </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder)">
      <summary>Fügt der Anwendungsgeneratorpipeline SignalR-Hubs hinzu.</summary>
      <param name="builder">Der Anwendungsgenerator.</param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder)">
      <summary>Fügt dem Anwendungsgenerator die angegebene SignalR-<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> hinzu. </summary>
      <param name="builder">Der Anwendungsgenerator.</param>
      <typeparam name="TConnection">Der Typ des <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekts.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <param name="builder">Der Anwendungsgenerator.</param>
      <param name="configuration">Die zu verwendende <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />.</param>
      <typeparam name="TConnection">Fügt dem Anwendungsgenerator die angegebene SignalR-<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> hinzu. </typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Fügt der Anwendungsgeneratorpipeline SignalR-Hubs hinzu.</summary>
      <param name="builder">Der Anwendungsgenerator.</param>
      <param name="configuration">Die zu verwendende <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />. </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Fügt dem Anwendungsgenerator die angegebene SignalR-<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> hinzu. </summary>
      <param name="builder">Der Anwendungsgenerator.</param>
      <param name="connectionType">Der Typ des <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />-Objekts.</param>
      <param name="configuration">Die zu verwendende <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />. </param>
    </member>
    <member name="T:System.Diagnostics.TraceSourceExtensions">
      <summary>Provides extension methods for used by SignalR.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace error message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace warning message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
  </members>
</doc>