<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.AspNet.SignalR.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.AspNet.SignalR.AuthorizeAttribute">
      <summary>Stosowane do koncentratorów i ich metod w celu autoryzowania połączeń klientów z koncentratorami oraz autoryzowania wywołań metod koncentratorów przez klientów.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.AuthorizeAttribute" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.AuthorizeAttribute._requireOutgoing">
      <summary>Określa, czy ma być stosowana autoryzacja tylko do wywołań dowolnej z metod koncentratora po stronie serwera.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Określa, czy klient jest autoryzowany do nawiązania połączenia z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Wartość true, jeśli element wywołujący jest autoryzowany do nawiązania połączenia z koncentratorem; w przeciwnym razie wartość false.</returns>
      <param name="hubDescriptor">Opis koncentratora, z którym klient próbuje nawiązać połączenie.</param>
      <param name="request">Żądanie (ponownego) nawiązania połączenia od klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>Określa, czy klient jest autoryzowany do wywołania metody elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Wartość true, jeśli element wywołujący jest autoryzowany do wywołania metody <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, w przeciwnym razie wartość false.</returns>
      <param name="hubIncomingInvokerContext">Element <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />, który udostępnia szczegółowe informacje dotyczące wywołania metody <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</param>
      <param name="appliesToMethod">Wartość true, aby wskazać, że wystąpienie interfejsu jest atrybutem zastosowanym bezpośrednio do metody, w przeciwnym razie wartość false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.RequireOutgoing">
      <summary>Ustawienie wartości false powoduje stosowanie autoryzacji tylko do wywołań dowolnej z metod koncentratora po stronie serwera.Ta właściwość ma wpływ tylko na atrybuty stosowane do klasy koncentratora.Tej właściwości nie można odczytywać.</summary>
      <returns>Wartość false, jeśli ma być stosowana autoryzacja tylko do wywołań dowolnej z metod koncentratora po stronie serwera.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Roles">
      <summary>Pobiera lub ustawia role użytkowników.</summary>
      <returns>Role użytkowników.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.UserAuthorized(System.Security.Principal.IPrincipal)">
      <summary>W przypadku przesłonięcia udostępnia punkt wejścia dla sprawdzeń autoryzacji niestandardowej.Wywoływane przez metody <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)" /> i <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)" />.</summary>
      <returns>Wartość true, jeśli użytkownik jest autoryzowany, w przeciwnym razie wartość false.</returns>
      <param name="user">Element <see cref="T:System.Security.Principal.IPrincipal" /> dla autoryzowanego klienta.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Users">
      <summary>Pobiera lub ustawia autoryzowanych użytkowników.</summary>
      <returns>Autoryzowani użytkownicy.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionConfiguration">
      <summary>Reprezentuje konfigurację połączenia.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionConfiguration.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.EnableJSONP">
      <summary>Pobiera lub ustawia wartość logiczną określającą, czy format JSONP jest włączony.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.Resolver">
      <summary>Pobiera lub ustawia mechanizm rozpoznawania zależności używany przez połączenie koncentratora.</summary>
      <returns>Mechanizm rozpoznawania zależności używany przez połączenie koncentratora.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionExtensions">
      <summary>Udostępnia metody rozszerzenia używane do wysyłania komunikatu do wszystkich połączeń subskrybujących określony sygnał.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Broadcast(Microsoft.AspNet.SignalR.IConnection,System.Object,System.String[])">
      <summary>Emituje wartość do wszystkich połączeń z wykluczeniem określonych identyfikatorów połączeń.</summary>
      <returns>Zadanie reprezentujące zakończenie emitowania.</returns>
      <param name="connection">Połączenie.</param>
      <param name="value">Wartość do emitowania.</param>
      <param name="excludeConnectionIds">Lista identyfikatorów połączeń do wykluczenia w emisji.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.Collections.Generic.IList{System.String},System.Object)">
      <summary>Wysyła komunikat do wszystkich połączeń subskrybowanych dla określonego sygnału.Sygnałem może być identyfikator połączenia.</summary>
      <returns>Zadanie reprezentujące zakończenie emitowania.</returns>
      <param name="connection">Połączenie.</param>
      <param name="connectionIds">Docelowe identyfikatory połączeń wysyłania.</param>
      <param name="value">Wartość do opublikowania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.String,System.Object)">
      <summary>Wysyła komunikat do wszystkich połączeń subskrybowanych dla określonego sygnału.Sygnałem może być identyfikator połączenia.</summary>
      <returns>Zadanie reprezentujące zakończenie emitowania.</returns>
      <param name="connection">Połączenie.</param>
      <param name="connectionId">Docelowy identyfikator połączenia wysyłania.</param>
      <param name="value">Wartość do opublikowania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionMessage">
      <summary>Komunikat wysyłany do co najmniej jednego połączenia.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />.</summary>
      <param name="signal">Sygnał.</param>
      <param name="value">Obciążenie komunikatu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object,System.Collections.Generic.IList{System.String})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />.</summary>
      <param name="signal">Sygnał.</param>
      <param name="value">Obciążenie komunikatu.</param>
      <param name="excludedSignals">Sygnały do wykluczenia.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.ExcludedSignals">
      <summary>Reprezentuje listę sygnałów, za pomocą których należy odfiltrować połączenia odbierające ten komunikat.</summary>
      <returns>Zwraca wartość <see cref="T:System.Collections.Generic.IList`1" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signal">
      <summary>Sygnał, do którego powinien zostać wysłany ten komunikat.Połączenia zasubskrybowane w tym sygnale będą odbierać obciążenie komunikatu.</summary>
      <returns>Zwraca wartość <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signals">
      <summary>Lista sygnałów, do których ma zostać dostarczony ten komunikat.W przypadku użycia tego elementu nie można użyć elementu Signal.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Value">
      <summary>Obciążenie komunikatu.</summary>
      <returns>Zwraca wartość <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Cookie">
      <summary>Reprezentuje plik cookie biblioteki SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Cookie" />.</summary>
      <param name="name">Nazwa właściwości pliku cookie.</param>
      <param name="value">Wartość właściwości pliku cookie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Cookie" />.</summary>
      <param name="name">Nazwa właściwości pliku cookie.</param>
      <param name="value">Wartość właściwości pliku cookie.</param>
      <param name="domain">Właściwość domeny pliku cookie.</param>
      <param name="path">Ścieżka właściwości pliku cookie.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Domain">
      <summary>Pobiera lub ustawia domenę pliku cookie.</summary>
      <returns>Domena pliku cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Name">
      <summary>Pobiera lub ustawia nazwę pliku cookie.</summary>
      <returns>Nazwa pliku cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Path">
      <summary>Pobiera lub ustawia ścieżkę pliku cookie.</summary>
      <returns>Ścieżka pliku cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Value">
      <summary>Pobiera lub ustawia wartość pliku cookie.</summary>
      <returns>Wartość pliku cookie.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver">
      <summary>Reprezentuje mechanizm rozpoznawania zależności z domyślnym zachowaniem.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose">
      <summary>Zwalnia zasoby używane przez bieżące wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose(System.Boolean)">
      <summary>Zwalnia zasoby niezarządzane używane przez bieżące wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
      <param name="disposing">Wartość true powoduje zwolnienie zasobów zarządzanych i niezarządzanych, a wartość false powoduje zwolnienie tylko zasobów niezarządzanych.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetService(System.Type)">
      <summary>Rozpoznaje pojedynczo zarejestrowane usługi obsługujące dowolne tworzenie obiektów.</summary>
      <returns>Żądana usługa lub obiekt.</returns>
      <param name="serviceType">Typ żądanej usługi lub obiektu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetServices(System.Type)">
      <summary>Rozpoznaje masowo zarejestrowane usługi.</summary>
      <returns>Żądane usługi.</returns>
      <param name="serviceType">Typ żądanych usług.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Rejestruje określone usługi do mechanizmu rozpoznawania zależności.</summary>
      <param name="serviceType">Typ usług do zarejestrowania.</param>
      <param name="activators">Usługi do zarejestrowania do mechanizmu rozpoznawania zależności.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Rejestruje określoną usługę do mechanizmu rozpoznawania zależności.</summary>
      <param name="serviceType">Typ usługi do zarejestrowania.</param>
      <param name="activator">Usługa do zarejestrowania do mechanizmu rozpoznawania zależności.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Rozpoznaje typ rozszerzeń.</summary>
      <returns>Zwraca obiekt do rozpoznania typu rozszerzenia.</returns>
      <param name="resolver">Mechanizm rozpoznawania zależności.</param>
      <typeparam name="T">Typ do rozpoznania.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Rozpoznaje typ rozszerzeń.</summary>
      <returns>Zwraca obiekt do rozpoznania typu rozszerzenia.</returns>
      <param name="resolver">Mechanizm rozpoznawania zależności.</param>
      <param name="type">Typ do rozpoznania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Rozpoznaje wszystkie typy rozszerzeń.</summary>
      <returns>Zwraca kolekcję rozszerzeń typu rozpoznania.</returns>
      <param name="resolver">Mechanizm rozpoznawania zależności.</param>
      <typeparam name="T">Typ do rozpoznania.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Rozpoznaje wszystkie typy rozszerzeń.</summary>
      <returns>Zwraca kolekcję rozszerzeń typu rozpoznania.</returns>
      <param name="resolver">Mechanizm rozpoznawania zależności.</param>
      <param name="type">Typ do rozpoznania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GlobalHost">
      <summary>Zapewnia dostęp do informacji dotyczących hosta domyślnego.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.Configuration">
      <summary>Pobiera domyślny element <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" />.</summary>
      <returns>Domyślny element <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.ConnectionManager">
      <summary>Pobiera domyślny element <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" />.</summary>
      <returns>Domyślny element <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.DependencyResolver">
      <summary>Pobiera lub ustawia domyślny element <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</summary>
      <returns>Domyślny element <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.HubPipeline">
      <summary>Pobiera domyślny element <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.</summary>
      <returns>Domyślny element <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.TraceManager">
      <summary>Pobiera domyślny element <see cref="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager" />.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GroupManager">
      <summary>Zarządza grupami połączenia.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.#ctor(Microsoft.AspNet.SignalR.IConnection,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.GroupManager" />.</summary>
      <param name="connection">Element <see cref="T:Microsoft.AspNet.SignalR.IConnection" />, w którym znajduje się ta grupa.</param>
      <param name="groupPrefix">Prefiks tej grupy.Nazwa elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> lub nazwa typu elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Add(System.String,System.String)">
      <summary>Dodaje połączenie do określonej grupy.</summary>
      <returns>Zadanie reprezentujące dodawanie identyfikatora połączenia do grupy.</returns>
      <param name="connectionId">Identyfikator połączenia, który ma zostać dodany do grupy.</param>
      <param name="groupName">Nazwa grupy.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Remove(System.String,System.String)">
      <summary>Usuwa połączenie z określonej grupy.</summary>
      <returns>Zadanie reprezentujące usuwanie identyfikatora połączenia z grupy.</returns>
      <param name="connectionId">Identyfikator połączenia, który ma zostać usunięty z grupy.</param>
      <param name="groupName">Nazwa grupy.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Wysyła wartość do określonej grupy.</summary>
      <returns>Zadanie reprezentujące zakończenie wysyłania.</returns>
      <param name="groupNames">Nazwy grup.</param>
      <param name="value">Wartość do wysłania.</param>
      <param name="excludeConnectionIds">Lista identyfikatorów połączeń do wykluczenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Wysyła wartość do określonej grupy.</summary>
      <returns>Zadanie reprezentujące zakończenie wysyłania.</returns>
      <param name="groupName">Nazwa grupy.</param>
      <param name="value">Wartość do wysłania.</param>
      <param name="excludeConnectionIds">Lista identyfikatorów połączeń do wykluczenia.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hub">
      <summary>Udostępnia metody, które komunikują się z połączeniami SignalR z elementem <see cref="T:Microsoft.AspNet.SignalR.Hub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Clients">
      <summary>Pobiera lub ustawia klientów, którzy komunikują się z połączeniami SignalR.</summary>
      <returns>Klienci, którzy komunikują się z połączeniami SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Context">
      <summary>Pobiera lub ustawia informacje o typie wywołania.</summary>
      <returns>Informacje dotyczące klienta wywołującego.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose">
      <summary>Zwalnia wszelkie zasoby używane przez to wystąpienie.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose(System.Boolean)">
      <summary>Zwalnia wszelkie zasoby używane przez to wystąpienie.</summary>
      <param name="disposing">Wartość true, aby zwolnić zasoby zarządzane i niezarządzane, wartość false, aby zwolnić tylko zasoby niezarządzane.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Groups">
      <summary>Pobiera lub ustawia menedżera grupy dla tego wystąpienia koncentratora.</summary>
      <returns>Menedżer grupy dla tego wystąpienia koncentratora.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnConnected">
      <summary>Występuje, gdy połączenie łączy się z tym wystąpieniem koncentratora.</summary>
      <returns>Wyniki operacji.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnDisconnected">
      <summary>Występuje, gdy połączenie odłącza się od tego wystąpienia koncentratora.</summary>
      <returns>Wyniki operacji.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnReconnected">
      <summary>Występuje, gdy połączenie łączy się ponownie z tym wystąpieniem koncentratora.</summary>
      <returns>Wyniki operacji.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubConfiguration">
      <summary>Reprezentuje konfigurację koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubConfiguration.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors">
      <summary>Określa, czy szczegółowe wyjątki zgłaszane w metodach koncentratora powinny być przekazywane wywołującemu klientowi.Wartość domyślna to false.</summary>
      <returns>Wartość true, jeśli szczegółowe wyjątki zgłaszane w metodach koncentratora są przekazywane wywołującemu klientowi, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableJavaScriptProxies">
      <summary>Określa, czy serwery proxy JavaScript dla koncentratorów po stronie serwera powinny być automatycznie generowane w lokalizacji {Path}/hubs.Wartość domyślna to true.</summary>
      <returns>Wartość true, jeśli serwery proxy JavaScript dla koncentratorów po stronie serwera powinny być automatycznie generowane w lokalizacji {Path}/hubs, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubException"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String,System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.HubException.ErrorData"></member>
    <member name="T:Microsoft.AspNet.SignalR.HubPipelineExtensions">
      <summary>Udostępnia metody rozszerzeń w celu dodania funkcji niestandardowych do typów danych.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubPipelineExtensions.RequireAuthentication(Microsoft.AspNet.SignalR.Hubs.IHubPipeline)">
      <summary>Konieczność uwierzytelnienia powoduje dodanie elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> z elementami autoryzującymi <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection" /> i <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation" />, które zostaną zastosowane globalnie do wszystkich koncentratorów i metod koncentratorów.Te elementy autoryzujące wymagają właściwości IsAuthenticated interfejsu <see cref="T:System.Security.Principal.IIdentity" /> w interfejsie <see cref="T:System.Security.Principal.IPrincipal" /> dla każdego klienta wywołującego metody koncentratorów po stronie serwera lub odbierającego wywołania metod koncentratorów po stronie klienta.</summary>
      <param name="pipeline">Element <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />, do którego zostanie dodany element <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnection">
      <summary>Kanał komunikacji dla elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> i jego połączeń.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IConnection.DefaultSignal">
      <summary>Główny sygnał dla tego połączenia.Główna biblioteka SignalR dla elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Wysyła komunikat do połączeń subskrybowanych dla sygnału.</summary>
      <returns>Zadanie zwracane w przypadku wysłania komunikatu.</returns>
      <param name="message">Komunikat do wysłania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnectionGroupManager">
      <summary>Zarządza grupami połączenia i umożliwia wysyłanie komunikatów do grupy.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Wysyła wartość do określonych grup.</summary>
      <returns>Zadanie reprezentujące zakończenie wysyłania.</returns>
      <param name="groupNames">Nazwy grup.</param>
      <param name="value">Wartość do wysłania.</param>
      <param name="excludeConnectionIds">Lista identyfikatorów połączeń do wykluczenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Wysyła wartość do określonej grupy.</summary>
      <returns>Zadanie reprezentujące zakończenie wysyłania.</returns>
      <param name="groupName">Nazwa grupy.</param>
      <param name="value">Wartość do wysłania.</param>
      <param name="excludeConnectionIds">Lista identyfikatorów połączeń do wykluczenia.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IDependencyResolver">
      <summary>Udostępnia interfejs, który reprezentuje mechanizm rozpoznawania zależności dla SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetService(System.Type)">
      <summary>Zwraca usługę danego typu.</summary>
      <returns>Zwrócona usługa.</returns>
      <param name="serviceType">Typ zwracanej usługi.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetServices(System.Type)">
      <summary>Zwraca usługi danego typu.</summary>
      <returns>Zwracane usługi.</returns>
      <param name="serviceType">Typ zwracanej usługi.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Rejestruje listę usług określonego typu.</summary>
      <param name="serviceType">Typ usługi do zarejestrowania.</param>
      <param name="activators">Lista delegatów funkcji, które akceptują parametr reprezentujący aktywowaną usługę.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Rejestruje usługę określonego typu.</summary>
      <param name="serviceType">Typ usługi do zarejestrowania.</param>
      <param name="activator">Delegat funkcji, który akceptuje parametr reprezentujący aktywowaną usługę.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IGroupManager">
      <summary>Zarządza grupami połączenia.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Add(System.String,System.String)">
      <summary>Dodaje połączenie do określonej grupy.</summary>
      <returns>Zadanie reprezentujące dodawanie identyfikatora połączenia do grupy.</returns>
      <param name="connectionId">Identyfikator połączenia, który ma zostać dodany do grupy.</param>
      <param name="groupName">Nazwa grupy.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Remove(System.String,System.String)">
      <summary>Usuwa połączenie z określonej grupy.</summary>
      <returns>Zadanie reprezentujące usuwanie identyfikatora połączenia z grupy.</returns>
      <param name="connectionId">Identyfikator połączenia, który ma zostać usunięty z grupy.</param>
      <param name="groupName">Nazwa grupy.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IHubContext">
      <summary>Zapewnia dostęp do informacji dotyczących elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Clients">
      <summary>Hermetyzuje wszystkie informacje dotyczące połączenia SignalR elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Groups">
      <summary>Pobiera element <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" /> dla koncentratora.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext">
      <summary>Zapewnia dostęp do informacji dotyczących elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Connection">
      <summary>Pobiera element <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> dla elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Groups">
      <summary>Pobiera element <see cref="T:Microsoft.AspNet.SignalR.IConnectionGroupManager" /> dla elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IRequest">
      <summary>Reprezentuje żądanie SignalR.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Cookies">
      <summary>Pobiera pliki cookie dla połączenia klienta.</summary>
      <returns>Pliki cookie dla połączenia klienta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Environment">
      <summary>Pobiera środowisko owin.</summary>
      <returns>Środowisko owin.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Headers">
      <summary>Pobiera lub ustawia nagłówki dla żądań.</summary>
      <returns>Nagłówki dla żądań.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.LocalPath">
      <summary>Pobiera część ścieżki lokalnej adresu URL.</summary>
      <returns>Część ścieżki lokalnej adresu URL.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.QueryString">
      <summary>Pobiera kolekcję zmiennych ciągu zapytania IRequest.</summary>
      <returns>Kolekcja zmiennych ciągu zapytania IRequest.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IRequest.ReadForm">
      <summary>Odczytuje formularz żądania HTTP.</summary>
      <returns>Formularz żądania HTTP do odczytania.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Url">
      <summary>Pobiera identyfikator URI elementu IRequest.</summary>
      <returns>Identyfikator URI dla elementu IRequest.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.User">
      <summary>Pobiera głównego użytkownika dla elementu IRequest.</summary>
      <returns>Główny użytkownik dla elementu IRequest.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.IUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.PersistentConnection">
      <summary> Reprezentuje połączenie między klientem a serwerem. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.AckHandler">
      <summary>Pobiera lub ustawia program obsługi potwierdzenia tego połączenia.</summary>
      <returns>Program obsługi potwierdzenia tego połączenia.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Authorize(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Określa, czy to połączenie jest autoryzowane.</summary>
      <returns>Wartość true, jeśli połączenie jest autoryzowane, w przeciwnym razie wartość false.</returns>
      <param name="request">Żądanie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Określa, czy żądanie dla połączenia jest autoryzowane.</summary>
      <returns>Wartość true, jeśli żądanie dla połączenia jest autoryzowane, w przeciwnym razie wartość false.</returns>
      <param name="request">Żądanie.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Connection">
      <summary>Pobiera lub ustawia połączenie.</summary>
      <returns>Połączenie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Counters">
      <summary>Pobiera lub ustawia menedżera licznika wydajności.</summary>
      <returns>Menedżer licznika wydajności.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.GetSignals(System.String,System.String)">
      <summary>Zwraca sygnały używane przez element <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Sygnały używane przez ten element <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="userId">Identyfikator użytkownika bieżącego połączenia.</param>
      <param name="connectionId">Identyfikator połączenia przychodzącego.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Groups">
      <summary>Pobiera lub ustawia grupy połączeń.</summary>
      <returns>Grupy połączeń.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.JsonSerializer">
      <summary>Pobiera lub ustawia serializator JSON.</summary>
      <returns>Serializator JSON.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.MessageBus">
      <summary>Pobiera lub ustawia magistralę komunikatu dla połączenia.</summary>
      <returns>Magistrala komunikatu dla połączenia.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Element wywoływany w przypadku nawiązania nowego połączenia.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task" />, którego działanie jest kończone po zakończeniu operacji nawiązywania połączenia.</returns>
      <param name="request">Żądanie dla bieżącego połączenia.</param>
      <param name="connectionId">Identyfikator klienta ponownie nawiązującego połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Element wywoływany w przypadku zakończenia połączenia.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task" />, którego działanie jest kończone po zakończeniu operacji rozłączania.</returns>
      <param name="request">Żądanie dla bieżącego połączenia.</param>
      <param name="connectionId">Identyfikator rozłączonego klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Element wywoływany w przypadku odebrania danych z połączenia.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task" />, którego działanie jest kończone po zakończeniu operacji odbierania.</returns>
      <param name="request">Żądanie dla bieżącego połączenia.</param>
      <param name="connectionId">Identyfikator połączenia wysyłającego dane.</param>
      <param name="data">Obciążenie wysyłane do połączenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Element wywoływany w przypadku ponownego nawiązania połączenia po przekroczeniu limitu czasu.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task" />, którego działanie jest kończone po zakończeniu operacji ponownego nawiązywania połączenia.</returns>
      <param name="request">Żądanie dla bieżącego połączenia.</param>
      <param name="connectionId">Identyfikator klienta ponownie nawiązującego połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Element wywoływany w przypadku ponownego nawiązania połączenia po przekroczeniu limitu czasu w celu określenia, które grupy powinny zostać ponownie przyłączone.</summary>
      <returns>Kolekcja nazw grup, które powinny zostać przyłączone po ponownym nawiązaniu połączenia.</returns>
      <param name="request">Żądanie dla bieżącego połączenia.</param>
      <param name="groups">Grupy, do których według oświadczenia należy połączenie wywołujące.</param>
      <param name="connectionId">Identyfikator klienta ponownie nawiązującego połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Obsługuje wszystkie żądania dla elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task" />, którego działanie jest kończone po zakończeniu potoku <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="context">Element <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> dla bieżącego żądania.</param>
      <exception cref="InvalidOperationException">Element zgłaszany, gdy nie zainicjowano połączenia.Element zgłaszany, gdy nie określono transportu.Element zgłaszany, gdy nie określono identyfikatora połączenia.</exception>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Punkt wejścia OWIN.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.ProtectedData">
      <summary>Pobiera lub ustawia chronione dane tego połączenia.</summary>
      <returns>Chronione dane tego połączenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Trace">
      <summary>Pobiera źródło połączenia.</summary>
      <returns>Źródło połączenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.TraceManager">
      <summary>Pobiera lub ustawia menedżera śledzenia.</summary>
      <returns>Menedżer śledzenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Transport">
      <summary>Pobiera lub ustawia transport skojarzony z połączeniem.</summary>
      <returns>Transport skojarzony z tym połączeniem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.UserIdProvider"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager">
      <summary>Zapewnia dostęp do domyślnego menedżera konfiguracji serwera.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.ConnectionTimeout">
      <summary>Pobiera lub ustawia element TimeSpan reprezentujący ilość czasu, przez jaki połączenie pozostanie otwarte przed przekroczeniem limitu czasu.</summary>
      <returns>Element TimeSpan reprezentujący ilość czasu, przez jaki połączenie będzie otwarte przed przekroczeniem limitu czasu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DefaultMessageBufferSize">
      <summary>Pobiera lub ustawia liczbę komunikatów do buforowania dla określonego sygnału.</summary>
      <returns>Liczba komunikatów do buforowania dla określonego sygnału.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DisconnectTimeout">
      <summary>Pobiera lub ustawia element TimeSpan reprezentujący ilość czasu między rozpoczęciem połączenia a wywołaniem zdarzenia rozłączenia.</summary>
      <returns>Element TimeSpan reprezentujący ilość czasu między rozpoczęciem połączenia a wywołaniem zdarzenia rozłączenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.KeepAlive">
      <summary>Pobiera lub ustawia element TimeSpan reprezentujący ilość czasu między operacjami wysyłania komunikatów podtrzymywania połączenia.W przypadku włączenia wartość ta musi wynosić co najmniej dwie sekundy.W celu wyłączenia tej funkcji należy ustawić wartość null.</summary>
      <returns>Element TimeSpan reprezentujący ilość czasu między operacjami wysyłania komunikatów podtrzymywania połączenia.W przypadku włączenia wartość ta musi wynosić co najmniej dwie sekundy.W celu wyłączenia tej funkcji należy ustawić wartość null.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.LongPollDelay"></member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.TransportConnectTimeout"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager">
      <summary>Zapewnia dostęp do konfiguracji serwera.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.ConnectionTimeout">
      <summary>Pobiera lub ustawia element <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu, przez jaki połączenie pozostanie otwarte przed przekroczeniem limitu czasu.</summary>
      <returns>Element <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu, przez jaki połączenie pozostanie otwarte przed przekroczeniem limitu czasu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DefaultMessageBufferSize">
      <summary>Pobiera lub ustawia liczbę komunikatów do buforowania dla określonego sygnału.</summary>
      <returns>Liczba komunikatów do buforowania dla określonego sygnału.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DisconnectTimeout">
      <summary>Pobiera lub ustawia element <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu między rozpoczęciem połączenia a wywołaniem zdarzenia rozłączenia.</summary>
      <returns>Element <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu między rozpoczęciem połączenia a wywołaniem zdarzenia rozłączenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.KeepAlive">
      <summary>Pobiera lub ustawia element <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu między operacjami wysyłania komunikatów podtrzymywania połączenia.W przypadku włączenia wartość ta musi wynosić co najmniej dwie sekundy.W celu wyłączenia tej funkcji należy ustawić wartość null.</summary>
      <returns>Element <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu między operacjami wysyłania komunikatów podtrzymywania połączenia.W przypadku włączenia wartość ta musi wynosić co najmniej dwie sekundy.W celu wyłączenia tej funkcji należy ustawić wartość null.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.LongPollDelay">
      <summary>Pobiera lub ustawia element <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu, po którym klient może ponownie nawiązać połączenie długiej sondy po wysłaniu danych z serwera.Wartość domyślna to 0.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.TransportConnectTimeout">
      <summary>Pobiera lub ustawia element <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu, przez który klient ma zezwalać na połączenie przed powrotem do innego transportu lub niepowodzeniem.Wartość domyślna to 5 sekund.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostContext">
      <summary>Reprezentuje kontekst hosta SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(Microsoft.AspNet.SignalR.IRequest,Microsoft.AspNet.SignalR.Hosting.IResponse)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</summary>
      <param name="environment">Środowisko hosta SignalR.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Environment">
      <summary>Pobiera środowisko hosta SignalR.</summary>
      <returns>Środowisko hosta SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Request"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Response"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions">
      <summary>Reprezentuje hosta dla rozszerzeń mechanizmu rozpoznawania zależności.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions.InitializeHost(Microsoft.AspNet.SignalR.IDependencyResolver,System.String,System.Threading.CancellationToken)">
      <summary>Inicjalizuje hosta dla rozszerzeń mechanizmu rozpoznawania zależności.</summary>
      <param name="resolver">Element IDependencyResolver.</param>
      <param name="instanceName">Nazwa wystąpienia.</param>
      <param name="hostShutdownToken">Token zamknięcia hosta.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.INameValueCollection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Get(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.GetValues(System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Item(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.IResponse">
      <summary>Reprezentuje połączenie z klientem.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.CancellationToken">
      <summary>Pobiera token anulowania reprezentujący okres istnienia klienta.</summary>
      <returns>Token anulowania reprezentujący okres istnienia klienta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.ContentType">
      <summary>Pobiera lub ustawia typ zawartości odpowiedzi.</summary>
      <returns>Typ zawartości odpowiedzi.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Flush">
      <summary>Opróżnia buforowaną odpowiedź do klienta.</summary>
      <returns>Zadanie reprezentujące opróżnienie danych.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Zapisuje buforowane dane.</summary>
      <param name="data">Dane do zapisania w buforze.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory">
      <summary>Służy do tworzenia wystąpień elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Tworzy nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory" />.</summary>
      <param name="resolver">Mechanizm rozpoznawania zależności używany podczas tworzenia elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.CreateInstance(System.Type)">
      <summary>Tworzy wystąpienie określonego typu za pomocą mechanizmu rozpoznawania zależności lub domyślnego konstruktora typu.</summary>
      <returns>Wystąpienie elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="connectionType">Typ elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />, który ma zostać utworzony.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions">
      <summary>Metody rozszerzenia dla klasy <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions.End(Microsoft.AspNet.SignalR.Hosting.IResponse,System.String)">
      <summary>Zamyka połączenie z klientem z opcjonalnymi danymi.</summary>
      <returns>Zadanie reprezentujące zamknięcie połączenia.</returns>
      <param name="response">Element <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />.</param>
      <param name="data">Dane do zapisania w połączeniu.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule">
      <summary>Stosuje atrybuty autoryzacji z klasy <see cref="T:Microsoft.AspNet.SignalR.Hub" /> w celu określenia, czy zezwalać klientom na odbieranie komunikatów wysyłanych z koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor(Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection,Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</summary>
      <param name="globalConnectionAuthorizer">Obiekt autoryzujący połączenia globalnego.</param>
      <param name="globalInvocationAuthorizer">Obiekt autoryzujący wywołania globalnego.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Opakowuje funkcję, która ma zostać wywołana przed zasubskrybowaniem przez klienta sygnałów należących do koncentratora opisanego przez element <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Domyślnie element <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> wyszukuje atrybuty w koncentratorze w celu określenia, czy klient jest autoryzowany do subskrybowania wywołań metody opisywanego koncentratora.Funkcja zwraca wartość true, jeśli klient jest autoryzowany do zasubskrybowania wywołań metod koncentratora po stronie klienta; w przeciwnym razie zwraca wartość false.</summary>
      <returns>Opakowana funkcja określająca, czy klient jest autoryzowany do nawiązania połączenia z opisywanym koncentratorem.</returns>
      <param name="authorizeConnect">Funkcja określająca, czy klient jest autoryzowany do nawiązania połączenia z opisywanym koncentratorem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Opakowuje funkcję wywołującą metodę koncentratora po stronie serwera.Nawet jeśli klient nie jest autoryzowany do nawiązania połączenia z koncentratorem, będzie autoryzowany do wywoływania w tym koncentratorze metod po stronie serwera, o ile nie zostało to uniemożliwione w elemencie <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> przez niewykonanie parametru wywoływania.</summary>
      <returns>Opakowana funkcja wywołująca metodę koncentratora po stronie serwera.</returns>
      <param name="invoke">Funkcja wywołująca metodę koncentratora po stronie serwera.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation">
      <summary>Opisuje wywołanie metody koncentratora po stronie klienta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Args">
      <summary>Pobiera lub ustawia listę argumentów koncentratora po stronie klienta, za pomocą którego metoda będzie wywołana.</summary>
      <returns>Lista argumentów skojarzonych z metodą koncentratora po stronie klienta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Hub">
      <summary>Pobiera lub ustawia nazwę koncentratora, do którego należy wywoływana metoda.</summary>
      <returns>Nazwa koncentratora, do którego należy wywoływana metoda.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Method">
      <summary>Pobiera lub ustawia nazwę metody koncentratora po stronie klienta do wywołania.</summary>
      <returns>Nazwa wywoływanej metody koncentratora po stronie klienta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.State">
      <summary>Pobiera lub ustawia magazyn kluczy i wartości reprezentujący stan koncentratora na serwerze, który zmienił się od czasu ostatniego wysłania stanu koncentratora do klienta.</summary>
      <returns>Magazyn kluczy-wartości reprezentujący stan koncentratora na serwerze.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy">
      <summary>Reprezentuje serwer proxy po stronie serwera dla koncentratora po stronie klienta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])">
      <summary>Wywołuje metodę dla połączeń reprezentowanych przez wystąpienie elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy" />.</summary>
      <returns>Zadanie reprezentujące wysłanie danych do klienta.</returns>
      <param name="method">Nazwa metody do wywołania.</param>
      <param name="args">Argumenty do przekazania do klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Wywołuje metodę <see cref="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])" />.</summary>
      <returns>Zawsze wartość true.</returns>
      <param name="binder">Informacje obejmujące semantykę wiązania i szczegółowe informacje dotyczące operacji koncentratora po stronie klienta.</param>
      <param name="args">Argumenty przekazywane do elementu obiektu podczas operacji wywoływania.</param>
      <param name="result">Po zwróceniu metody zawiera wynik wywołania elementu.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy">
      <summary>Reprezentuje serwer proxy identyfikatora połączenia dla koncentratora po stronie klienta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String[])"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator">
      <summary>Reprezentuje domyślnego lokalizatora zestawu.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.GetAssemblies">
      <summary>Pobiera zestawy, które zostały załadowane do bieżącej domeny aplikacji.</summary>
      <returns>Tablica zestawów w bieżącej domenie aplikacji.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator">
      <summary>Reprezentuje domyślnego aktywatora koncentratorów SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator" />.</summary>
      <param name="resolver">Mechanizm rozpoznawania zależności</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Tworzy nowego aktywatora koncentratora.</summary>
      <returns>Utworzony aktywator koncentratora.</returns>
      <param name="descriptor">Deskryptor.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager">
      <summary>Reprezentuje domyślnego menedżera koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager" />.</summary>
      <param name="resolver">Mechanizm rozpoznawania koncentratora.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHub(System.String)">
      <summary>Pobiera jeden deskryptor koncentratorów.</summary>
      <returns>Deskryptor koncentratora, jeśli go znaleziono, w przeciwnym razie wartość null.</returns>
      <param name="hubName">Nazwa koncentratora.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Pobiera metodę o określonej nazwie w określonym koncentratorze.</summary>
      <returns>Deskryptor metody, jeśli można ją odnaleźć.W przeciwnym razie wartość null.</returns>
      <param name="hubName">Nazwa koncentratora.</param>
      <param name="method">Nazwa metody do znalezienia.</param>
      <param name="parameters">Parametry metody do dopasowania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Pobiera wszystkie dostępne metody do wywołania w określonym koncentratorze.</summary>
      <returns>Lista dostępnych metod.</returns>
      <param name="hubName">Nazwa koncentratora.</param>
      <param name="predicate">Opcjonalny predykat dla filtrowania wyników.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Pobiera wszystkie dostępne koncentratory zgodne z określonym predykatem.</summary>
      <returns>Lista deskryptorów koncentratorów.</returns>
      <param name="predicate">Predykat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHub(System.String)">
      <summary>Rozpoznaje określoną nazwę koncentratora jako konkretny obiekt.</summary>
      <returns>Wystąpienie implementacji koncentratora, jeśli można je odnaleźć.W przeciwnym razie wartość null.</returns>
      <param name="hubName">Nazwa koncentratora.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHubs">
      <summary>Rozpoznaje wszystkie dostępne koncentratory jako konkretne obiekty.</summary>
      <returns>Lista wystąpień koncentratorów.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator">
      <summary>Reprezentuje generator dla domyślnego serwera proxy Javascript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubManager,Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />.</summary>
      <param name="manager">Menedżer koncentratora.</param>
      <param name="javaScriptMinifier">Element minimalizujący Javascript.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />.</summary>
      <param name="resolver">Mechanizm rozpoznawania zależności.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Generuje określony serwer proxy.</summary>
      <returns>Wygenerowany serwer proxy.</returns>
      <param name="serviceUrl">Adres URL usługi.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String,System.Boolean)">
      <summary>Generuje określony serwer proxy.</summary>
      <returns>Wygenerowany serwer proxy.</returns>
      <param name="serviceUrl">Adres URL usługi.</param>
      <param name="includeDocComments">Wartość true, aby uwzględnić komentarze Doc, w przeciwnym razie wartość false.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver">
      <summary>Reprezentuje domyślny mechanizm dla parametru koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Rozpoznaje wartości parametrów metod na podstawie podanych obiektów.</summary>
      <returns>Tablica wartości parametrów.</returns>
      <param name="method">Deskryptor metody.</param>
      <param name="values">Lista wartości parametrów do rozpoznania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveParameter(Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor,Microsoft.AspNet.SignalR.Json.IJsonValue)">
      <summary>Rozpoznaje wartość parametru na podstawie udostępnionego obiektu.</summary>
      <returns>Wartość parametru.</returns>
      <param name="descriptor">Deskryptor parametru.</param>
      <param name="value">Wartość parametru do rozpoznania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.Descriptor">
      <summary>Opisuje informacje koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.Descriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.Descriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.Name">
      <summary>Pobiera lub ustawia nazwę koncentratora.</summary>
      <returns>Nazwa koncentratora.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.NameSpecified">
      <summary>Pobiera lub ustawia wartość wskazującą, czy jest określona nazwa atrybutu koncentratora.</summary>
      <returns>Wartość true, jeśli nazwa atrybutu koncentratora jest określona; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary">
      <summary>Zawiera obiekt słownika do przechowywania par klucz-wartość i zastępuje metody TrySetMember i TryGetMember do obsługi nowej składni.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary" />.</summary>
      <param name="obj">Obiekt słownika.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Dodaje określoną parę klucz-wartość do słownika.</summary>
      <param name="item">Obiekt pary klucz-wartość do dodania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.String,System.Object)">
      <summary>Dodaje określony klucz i wartość do słownika.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Clear">
      <summary>Usuwa wszystkie klucze i wartości ze słownika.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Określa, czy słownik zawiera określony element pary klucz-wartość.</summary>
      <returns>Wartość true, jeśli słownik zawiera element z określoną wartością, w przeciwnym razie wartość false.</returns>
      <param name="item">Element pary klucz-wartość do zlokalizowania w słowniku.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.ContainsKey(System.String)">
      <summary>Określa, czy słownik zawiera określony klucz.</summary>
      <returns>Wartość true, jeśli słownik zawiera określony klucz, a w przeciwnym razie wartość false.</returns>
      <param name="key">Klucz do zlokalizowania w słowniku.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Kopiuje elementy par klucz-wartość do istniejącej jednowymiarowej tablicy, rozpoczynając od określonego indeksu tablicy.</summary>
      <param name="array">Jednowymiarowa tablica, która jest lokalizacją docelową elementów kopiowanych ze słownika.</param>
      <param name="arrayIndex">Numerowany od zera indeks w tablicy, od którego rozpoczyna się kopiowanie.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Count">
      <summary>Pobiera liczbę elementów w słowniku.</summary>
      <returns>Liczba elementów w słowniku.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.GetEnumerator">
      <summary>Zwraca moduł wyliczający, który iteruje po słowniku.</summary>
      <returns>Moduł wyliczający, który iteruje po słowniku.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.IsReadOnly">
      <summary>Pobiera informacje, czy dynamiczny słownik jest tylko do odczytu.</summary>
      <returns>Wartość true, jeśli dynamiczny słownik jest tylko do odczytu, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Item(System.String)">
      <summary>Pobiera lub ustawia element z określonym kluczem w słowniku.</summary>
      <returns>Element z określonym kluczem w słowniku.</returns>
      <param name="key">Klucz elementu.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Keys">
      <summary>Pobiera kolekcję kluczy zawartych w słowniku.</summary>
      <returns>Kolekcja kluczy zawartych w słowniku.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Usuwa określoną parę klucz-wartość ze słownika.</summary>
      <returns>Słownik z usuniętym elementem.</returns>
      <param name="item">Element do usunięcia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.String)">
      <summary>Usuwa określony klucz ze słownika.</summary>
      <returns>Słownik z usuniętym kluczem.</returns>
      <param name="key">Klucz do usunięcia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający, który iteruje po kolekcji.</summary>
      <returns>Moduł wyliczający, który iteruje po kolekcji.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Udostępnia implementację dla operacji, które uzyskują wartości członka.</summary>
      <returns>Wartość true, jeśli operacja jest udana, w przeciwnym razie wartość false.</returns>
      <param name="binder">Zapewnia informacje o obiekcie, który wywołał operację dynamiczną.</param>
      <param name="result">Wyniki operacji pozyskania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Pobiera wartość skojarzoną z określonym kluczem.</summary>
      <returns>Wartość true, jeśli słownik zawiera element z określonym kluczem, w przeciwnym razie wartość false.</returns>
      <param name="key">Klucz wartości do pobrania.</param>
      <param name="value">Ta metoda zwraca wartość skojarzoną z określonym kluczem, jeśli klucz został znaleziony, a w przeciwnym przypadku wartość domyślną typu parametru wartości.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Udostępnia implementację dla operacji, które ustalają wartości członka.</summary>
      <returns>Wartość true, jeśli operacja jest udana, w przeciwnym razie wartość false.</returns>
      <param name="binder">Zapewnia informacje o obiekcie, który wywołał operację dynamiczną.</param>
      <param name="value">Wartość, która ma zostać ustawiona dla członka.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Unwrap(System.Object)">
      <summary>Odkodowuje określoną wartość skojarzoną ze słownikiem.</summary>
      <returns>Odkodowana wartość.</returns>
      <param name="value">Wartość do odkodowania.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Values">
      <summary>Pobiera kolekcję wartości zawartych w słowniku.</summary>
      <returns>Kolekcja wartości zawartych w słowniku.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Wrap(System.Object)">
      <summary>Koduje określoną wartość skojarzoną ze słownikiem.</summary>
      <returns>Zakodowana wartość.</returns>
      <param name="value">Wartość do zakodowania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator">
      <summary>Reprezentuje generator dla serwera proxy Empty Javascript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Generuje serwer proxy z określonym adresem URL.</summary>
      <returns>Wygenerowany serwer proxy.</returns>
      <param name="serviceUrl">Adres URL usługi.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator">
      <summary>Reprezentuje element wyliczalny skojarzony z lokalizatorem zestawu.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator" />.</summary>
      <param name="assemblies">Zestawy.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.GetAssemblies">
      <summary>Zwraca listę zestawów.</summary>
      <returns>Lista zestawów.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ExceptionContext"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.#ctor(System.Exception)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Error">
      <summary>Wyjątek wysyłany do klienta wywołującego.Ta wartość jest przesłaniana przez wyjątek ogólny, chyba że błąd to element <see cref="T:Microsoft.AspNet.SignalR.HubException" /> lub element <see cref="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors" /> ma wartość true.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Result">
      <summary>Wartość zwracana zamiast zgłaszania błędu.Jeśli jest ustawiony wynik, błąd ma wartość null.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.GroupProxy">
      <summary>Reprezentuje grupę serwera proxy sygnału używanego przez koncentrator.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.GroupProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext">
      <summary>Reprezentuje kontekst wywołania klienta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.#ctor(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" />.</summary>
      <param name="request">Bieżące żądanie HTTP.</param>
      <param name="connectionId">Identyfikator połączenia.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.ConnectionId">
      <summary>Pobiera identyfikator połączenia klienta wywołującego.</summary>
      <returns>Identyfikator połączenia klienta wywołującego.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Headers">
      <summary>Pobiera nagłówki żądania.</summary>
      <returns>Nagłówki żądania.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.QueryString">
      <summary>Pobiera ciąg zapytania dla żądania.</summary>
      <returns>Ciąg zapytania dla żądania.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Request">
      <summary>Pobiera element <see cref="T:Microsoft.AspNet.SignalR.IRequest" /> dla bieżącego żądania HTTP.</summary>
      <returns>Element <see cref="T:Microsoft.AspNet.SignalR.IRequest" /> dla bieżącego żądania HTTP.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.RequestCookies">
      <summary>Pobiera pliki cookie dla żądania.</summary>
      <returns>Pliki cookie dla żądania.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.User">
      <summary>Pobiera element <see cref="T:System.Security.Principal.IPrincipal" /> dla żądania.</summary>
      <returns>Element <see cref="T:System.Security.Principal.IPrincipal" /> dla żądania.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext">
      <summary>Hermetyzuje wszystkie informacje dotyczące jednego połączenia SignalR elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,Microsoft.AspNet.SignalR.IConnection,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />.</summary>
      <param name="pipelineInvoker">Element wywołujący potoku.</param>
      <param name="connection">Połączenie interfejsu.</param>
      <param name="hubName">Nazwa koncentratora.</param>
      <param name="connectionId">Identyfikator połączenia.</param>
      <param name="tracker">Obiekt śledzący zmiany stanu.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Caller">
      <summary>Pobiera lub ustawia klienta wywołującego.</summary>
      <returns>Klient wywołujący.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Others">
      <summary>Pobiera lub ustawia podłączonych klientów z wyjątkiem klienta wywołującego.</summary>
      <returns>Wszyscy połączeni klienci oprócz klienta wywołującego.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroup(System.String)">
      <summary>Zwraca dynamiczną reprezentację wszystkich klientów w grupie oprócz klienta wywołującego.</summary>
      <returns>Dynamiczna reprezentacja wszystkich klientów w grupie oprócz klienta wywołującego.</returns>
      <param name="groupName">Nazwa grupy.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})">
      <summary>Zwraca dynamiczną reprezentację wszystkich klientów w określonych grupach oprócz klienta wywołującego.</summary>
      <returns>Dynamiczna reprezentacja wszystkich klientów w grupie oprócz klienta wywołującego.</returns>
      <param name="groupNames">Nazwy grup.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.All"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.AllExcept(System.String[])">
      <summary>Zwraca dynamiczną reprezentację wszystkich klientów oprócz określonych klientów wywołujących.</summary>
      <returns>Dynamiczna reprezentacja wszystkich klientów oprócz określonych klientów wywołujących.</returns>
      <param name="excludeConnectionIds">Lista identyfikatorów połączeń do wykluczenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Client(System.String)">
      <summary>Zwraca dynamiczną reprezentację połączenia o określonym identyfikatorze połączenia.</summary>
      <returns>Dynamiczna reprezentacja określonego klienta.</returns>
      <param name="connectionId">Identyfikator połączenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Clients(System.Collections.Generic.IList{System.String})">
      <summary>Zwraca dynamiczną reprezentację połączeń o określonych identyfikatorach połączeń.</summary>
      <returns>Dynamiczna reprezentacja określonych klientów.</returns>
      <param name="connectionIds">Identyfikatory połączeń.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Group(System.String,System.String[])">
      <summary>Zwraca dynamiczną reprezentację określonej grupy.</summary>
      <returns>Dynamiczna reprezentacja określonej grupy.</returns>
      <param name="groupName">Nazwa grupy.</param>
      <param name="excludeConnectionIds">Lista identyfikatorów połączeń do wykluczenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Groups(System.Collections.Generic.IList{System.String},System.String[])">
      <summary>Zwraca dynamiczną reprezentację określonych grup.</summary>
      <returns>Dynamiczna reprezentacja określonych grup.</returns>
      <param name="groupNames">Nazwy grup.</param>
      <param name="excludeConnectionIds">Lista identyfikatorów połączeń do wykluczenia.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.HubName"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Invoker"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor">
      <summary>Reprezentuje informacje dotyczące pojedynczego koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.CreateQualifiedName(System.String)">
      <summary>Tworzy wykwalifikowaną nazwę dla koncentratora używającego określonej niekwalifikowanej nazwy.</summary>
      <returns>Utworzona kwalifikowana nazwa.</returns>
      <param name="unqualifiedName">Niekwalifikowana nazwa.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.HubType">
      <summary>Pobiera lub ustawia typ koncentratora.</summary>
      <returns>Typ koncentratora.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher">
      <summary>Obsługuje całą komunikację w ramach trwałego połączenia koncentratorów.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.#ctor(Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />.</summary>
      <param name="configuration">Ustawienia konfiguracji określające, czy należy włączyć serwery proxy JS i udostępniać klientom szczegółowe informacje o błędach koncentratora.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Tworzy listę koncentratorów autoryzowanych na potrzeby określonego żądania dla połączenia.</summary>
      <returns>Wartość true, jeśli występują autoryzowane koncentratory, w przeciwnym razie wartość false.</returns>
      <param name="request">Żądanie dla bieżącego połączenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.GetSignals(System.String,System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Wywołanie przez hosta w celu inicjalizacji wysyłki koncentratora dla elementu IDependencyResolver.</summary>
      <param name="resolver">Mechanizm rozpoznawania elementu IDependency.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Element wywoływany w przypadku nawiązania połączenia z tym wystąpieniem koncentratora.</summary>
      <returns>Zadanie, które jest wywoływane w przypadku nawiązania połączenia z tym wystąpieniem koncentratora.</returns>
      <param name="request">Element IRequest dla bieżącego połączenia.</param>
      <param name="connectionId">Identyfikator klienta ponownie nawiązującego połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Element wywoływany w przypadku zakończenia połączenia z tym wystąpieniem koncentratora.</summary>
      <returns>Zadanie, które jest wywoływane w przypadku rozłączenia połączenia z tym wystąpieniem koncentratora.</returns>
      <param name="request">Element IRequest dla bieżącego połączenia.</param>
      <param name="connectionId">Identyfikator klienta ponownie nawiązującego połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Przetwarza przychodzące wywołania metod koncentratora.</summary>
      <returns>Zadanie, które jest wywołane, gdy dane są odebrane z tego wystąpienia koncentratora.</returns>
      <param name="request">Element IRequest dla bieżącego połączenia.</param>
      <param name="connectionId">Identyfikator klienta ponownie nawiązującego połączenie.</param>
      <param name="data">Dane otrzymane.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Element wywoływany w przypadku ponownego nawiązania połączenia z tym wystąpieniem koncentratora.</summary>
      <returns>Zadanie, które jest wywoływane w przypadku ponownego połączenia z tym wystąpieniem koncentratora.</returns>
      <param name="request">Element IRequest dla bieżącego połączenia.</param>
      <param name="connectionId">Identyfikator klienta ponownie nawiązującego połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Element wywoływany w przypadku ponownego nawiązania połączenia po przekroczeniu limitu czasu w celu określenia, które grupy powinny zostać ponownie przyłączone.</summary>
      <returns>Lista połączeń używanych do ponownego połączenia po przekroczeniu limitu czasu w celu określenia, które grupy powinny zostać ponownie przyłączone.</returns>
      <param name="request">Element IRequest dla bieżącego połączenia.</param>
      <param name="groups">Grupy, do których według oświadczenia należy połączenie wywołujące.</param>
      <param name="connectionId">Identyfikator klienta ponownie nawiązującego połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Obsługuje wszystkie żądania dla elementu HostContext.</summary>
      <returns>Zadanie obsługuje wszystkie żądania dla elementu HostContext.</returns>
      <param name="context">Kontekst hosta.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Trace">
      <summary>Pobiera połączenia koncentratora, które umożliwiają aplikacjom śledzić realizację kodu oraz kojarzyć komunikaty śledzenia ze swoim źródłem.</summary>
      <returns>Połączenia koncentratora, które umożliwiają aplikacjom śledzić realizację kodu oraz kojarzyć komunikaty śledzenia ze swoim źródłem.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions">
      <summary>Udostępnia rozszerzenie menedżera koncentratora do całego procesu koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.EnsureHub(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter[])">
      <summary>Zapewnia wszystkie informacje o deskryptorze koncentratora.</summary>
      <returns>Deskryptor koncentratora zapewniający wszystkie informacje.</returns>
      <param name="hubManager">Menedżer koncentratora.</param>
      <param name="hubName">Nazwa koncentratora.</param>
      <param name="counters">Licznik wydajności.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubMethods(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String)">
      <summary>Pobiera wszystkie dostępne metody do wywołania w określonym koncentratorze.</summary>
      <returns>Kolekcja metod do wywołania w określonym koncentratorze.</returns>
      <param name="hubManager">Menedżer koncentratora.</param>
      <param name="hubName">Nazwa koncentratora.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubs(Microsoft.AspNet.SignalR.Hubs.IHubManager)">
      <summary>Pobiera wszystkie dostępne koncentratory.</summary>
      <returns>Pobranie wszystkich dostępnych koncentratorów.</returns>
      <param name="hubManager">Menedżer koncentratora.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute">
      <summary>Reprezentuje atrybuty nazwy metody dla koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute" />.</summary>
      <param name="methodName">Nazwa metody.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.MethodName">
      <summary>Pobiera lub ustawia nazwę metody.</summary>
      <returns>Nazwa metody.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute">
      <summary>Reprezentuje atrybut dla nazwy koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute" />.</summary>
      <param name="hubName">Nazwa koncentratora.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.HubName">
      <summary>Pobiera lub ustawia nazwę koncentratora.</summary>
      <returns>Nazwa koncentratora.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule">
      <summary>Wspólna klasa podstawowa upraszczająca implementację elementów IHubPipelineModule.Moduł może przechwytywać i dostosowywać różne etapy przetwarzania koncentratorów, takie jak łączenie, ponowne łączenie, rozłączanie, wywoływanie metod koncentratora po stronie serwera, wywoływanie metod koncentratora po stronie klienta, autoryzowanie klientów koncentratora i ponowne przyłączanie grup koncentratorów.Moduł można uaktywnić przez wywołanie elementu <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.Połączone moduły dodawane do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> są wywoływane za pośrednictwem interfejsu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Opakowuje funkcję, która ma zostać wywołana przed zasubskrybowaniem przez klienta sygnałów należących do koncentratora opisanego przez element <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Domyślnie element <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> wyszukuje atrybuty w elemencie <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> w celu określenia, czy klient jest autoryzowany do zasubskrybowania wywołań metody opisywanego koncentratora.Funkcja zwraca wartość true, jeśli klient jest autoryzowany do zasubskrybowania wywołań metod koncentratora po stronie klienta; w przeciwnym razie zwraca wartość false.</summary>
      <returns>Opakowana funkcja określająca, czy klient jest autoryzowany do nawiązania połączenia z opisywanym koncentratorem.</returns>
      <param name="authorizeConnect">Funkcja określająca, czy klient jest autoryzowany do nawiązania połączenia z opisywanym koncentratorem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Opakowuje funkcję wywoływaną, gdy klient nawiąże połączenie z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> dla każdego elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient nawiąże połączenie.Domyślnie powoduje to wywołanie metody OnConnected elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Opakowana funkcja wywoływana, gdy klient nawiąże połączenie z koncentratorem.</returns>
      <param name="connect">Funkcja wywoływana, gdy klient nawiąże połączenie z koncentratorem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Opakowuje funkcję wywoływaną, gdy klient zakończy połączenie z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> dla każdego elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient był połączony.Domyślnie powoduje to wywołanie metody OnDisconnected elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Opakowana funkcja wywoływana, gdy klient zakończy połączenie z koncentratorem.</returns>
      <param name="disconnect">Funkcja wywoływana, gdy klient zakończy połączenie z koncentratorem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Opakowuje funkcję wywołującą metodę koncentratora po stronie serwera.Nawet jeśli klient nie jest autoryzowany do nawiązania połączenia z koncentratorem, będzie autoryzowany do wywoływania w tym koncentratorze metod po stronie serwera, o ile nie zostało to uniemożliwione w elemencie <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> przez niewykonanie parametru wywoływania.</summary>
      <returns>Opakowana funkcja wywołująca metodę koncentratora po stronie serwera.</returns>
      <param name="invoke">Funkcja wywołująca metodę koncentratora po stronie serwera.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Opakowuje funkcję wywołującą metodę koncentratora po stronie klienta.</summary>
      <returns>Opakowana funkcja wywołująca metodę koncentratora po stronie klienta.</returns>
      <param name="send">Funkcja wywołująca metodę koncentratora po stronie klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Opakowuje funkcję wywoływaną, gdy klient ponownie nawiąże połączenie z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> dla każdego elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient nawiąże połączenie.Domyślnie powoduje to wywołanie metody OnReconnected elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Opakowana funkcja wywoływana, gdy klient ponownie nawiąże połączenie z koncentratorem.</returns>
      <param name="reconnect">Funkcja wywoływana, gdy klient ponownie nawiąże połączenie z koncentratorem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Opakowuje funkcję określającą, którym grupom należącym do koncentratora opisanego przez element <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> klient powinien zezwolić na ponowne przyłączenie.Domyślnie klienci ponownie nawiązujący połączenie z serwerem są usuwani ze wszystkich grup, do których mogli należeć, ponieważ niezaufani klienci mogą podawać się za elementy grup, w przypadku których nigdy nie byli autoryzowani do przyłączenia.</summary>
      <returns>Opakowana funkcja określająca, do których grup klient powinien mieć możliwość przyłączenia.</returns>
      <param name="rejoiningGroups">Funkcja określająca, do których grup klient powinien mieć możliwość przyłączenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Ta metoda jest wywoływana po wykonaniu składników połączenia wszelkich modułów dodanych później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> oraz po wykonaniu elementu <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" />.</summary>
      <param name="hub">Koncentrator, z którym klient nawiązał połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Ta metoda jest wywoływana po wykonaniu składników zakończenia połączenia wszelkich modułów dodanych później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> oraz po wykonaniu elementu <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" />.</summary>
      <param name="hub">Koncentrator, z którym klient zakończył połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterIncoming(System.Object,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Ta metoda jest wywoływana po wykonaniu składników przychodzących wszelkich modułów dodanych później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> oraz po wykonaniu metody koncentratora po stronie serwera.</summary>
      <returns>Możliwa nowa lub zaktualizowana zwracana wartość metody koncentratora po stronie serwera.</returns>
      <param name="result">Zwracana wartość metody koncentratora po stronie serwera.</param>
      <param name="context">Opis wywołania metody koncentratora po stronie serwera.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Ta metoda jest wywoływana po wykonaniu składników wychodzących wszelkich modułów dodanych później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Nie oznacza to, że wszyscy klienci odebrali wywołanie metody koncentratora. Oznacza to jednak, że komunikat dotyczący wywołania koncentratora został pomyślnie opublikowany w magistrali komunikatów.</summary>
      <param name="context">Opis wywołania metody koncentratora po stronie klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Ta metoda jest wywoływana po wykonaniu składników ponownego nawiązania połączenia wszelkich modułów dodanych później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> oraz po wykonaniu elementu <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" />.</summary>
      <param name="hub">Koncentrator, z którym klient ponownie nawiązał połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeAuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Ta metoda jest wywoływana przed wykonaniem składników elementu AuthorizeConnect wszelkich modułów dodanych później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Jeśli zostanie zwrócona wartość false, dodane później moduły nie zostaną uruchomione i klient nie będzie mógł subskrybować wywołań metod po stronie klienta, które należą do koncentratora zdefiniowanego przez element <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.</summary>
      <returns>Wartość true, jeśli klient jest autoryzowany do nawiązania połączenia z koncentratorem; w przeciwnym razie wartość false.</returns>
      <param name="hubDescriptor">Opis koncentratora, który klient próbuje subskrybować.</param>
      <param name="request">Żądanie połączenia klienta, który próbuje subskrybować koncentrator.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Ta metoda jest wywoływana przed wykonaniem składników połączenia wszelkich modułów dodanych później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Jeśli zostanie zwrócona wartość false, dodane później moduły i metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> nie zostaną uruchomione.</summary>
      <returns>Wartość true, jeśli składniki połączenia dodanych później modułów i metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> mają zostać wykonane; w przeciwnym razie wartość false.</returns>
      <param name="hub">Koncentrator, z którym klient nawiązał połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Ta metoda jest wywoływana przed wykonaniem składników zakończenia połączenia wszelkich modułów dodanych później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Jeśli zostanie zwrócona wartość false, dodane później moduły i metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> nie zostaną uruchomione.</summary>
      <returns>Wartość true, jeśli składniki zakończenia połączenia dodanych później modułów i metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> mają zostać wykonane; w przeciwnym razie wartość false.</returns>
      <param name="hub">Koncentrator, z którym klient zakończył połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Ta metoda jest wywoływana przed wykonaniem składników przychodzących wszelkich modułów dodanych później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Jeśli zostanie zwrócona wartość false, dodane później moduły i wywołanie metody koncentratora po stronie serwera nie zostaną wykonane.Nawet jeśli klient nie jest autoryzowany do nawiązania połączenia z koncentratorem, będzie autoryzowany do wywoływania w tym koncentratorze metod po stronie serwera, o ile nie zostało to uniemożliwione w elemencie <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> przez niewykonanie parametru wywoływania lub w elemencie <see cref="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)" /> przez zwrócenie wartości false.</summary>
      <returns>Wartość true, jeśli składniki przychodzące dodanych później modułów i wywołanie metody koncentratora po stronie serwera mają zostać wykonane; w przeciwnym razie wartość false.</returns>
      <param name="context">Opis wywołania metody koncentratora po stronie serwera.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Ta metoda jest wywoływana przed wykonaniem składników wychodzących wszelkich modułów dodanych później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Jeśli zostanie zwrócona wartość false, dodane później moduły i wywołania metody koncentratora po stronie klienta nie zostaną wykonane.</summary>
      <returns>Wartość true, jeśli składniki wychodzące dodanych później modułów i wywołania metody koncentratora po stronie klienta mają zostać wykonane; w przeciwnym razie wartość false.</returns>
      <param name="context">Opis wywołania metody koncentratora po stronie klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Ta metoda jest wywoływana przed wykonaniem składników ponownego nawiązania połączenia wszelkich modułów dodanych później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Jeśli zostanie zwrócona wartość false, dodane później moduły i metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> nie zostaną uruchomione.</summary>
      <returns>Wartość true, jeśli składniki ponownego nawiązania połączenia dodanych później modułów i metoda <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> mają zostać wykonane; w przeciwnym razie wartość false.</returns>
      <param name="hub">Koncentrator, z którym klient ponownie nawiązał połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnIncomingError(Microsoft.AspNet.SignalR.Hubs.ExceptionContext,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Ten element jest wywoływany w przypadku zgłoszenia niewykrytego wyjątku przez metodę koncentratora po stronie serwera lub składnik przychodzący modułu dodanego później do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Monitorowanie wyjątku za pomocą tej metody nie zapobiegnie jego wystąpieniu w innych modułach.</summary>
      <param name="exceptionContext">Reprezentuje wyjątek zgłoszony podczas wywołania po stronie serwera.Przy użyciu tego kontekstu można zmienić błąd lub ustawić wynik.</param>
      <param name="invokerContext">Opis wywołania metody koncentratora po stronie serwera.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubRequest">
      <summary>Udostępnia metody, które komunikują się z żądaniem połączenia SignalR, że jest połączony z koncentratorem.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubRequest.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Hub">
      <summary>Pobiera lub ustawia wartość połączenia koncentratora.</summary>
      <returns>Wartość połączenia koncentratora.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Id">
      <summary>Pobiera lub ustawia identyfikator połączenia.</summary>
      <returns>Identyfikator połączenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Method">
      <summary>Pobiera lub ustawia metodę żądania.</summary>
      <returns>Metoda żądania.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.ParameterValues">
      <summary>Pobiera lub ustawia wartości parametru.</summary>
      <returns>Wartości parametru.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.State">
      <summary>Pobiera lub ustawia bieżący stan żądania.</summary>
      <returns>Bieżący stan żądania.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubResponse">
      <summary>Reprezentuje odpowiedź zwracaną z przychodzącego żądania koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubResponse.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubResponse" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Error">
      <summary>Pobiera lub ustawia wyjątek, który występuje w wyniku wywołania metody koncentratora.</summary>
      <returns>Wyjątek, który występuje w wyniku wywołania metody koncentratora.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.ErrorData">
      <summary>Dodatkowe dane dotyczące błędu zawarte w elemencie <see cref="T:Microsoft.AspNet.SignalR.HubException" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Id">
      <summary>Pobiera lub ustawia identyfikator operacji.</summary>
      <returns>Identyfikator operacji.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.IsHubException">
      <summary>Wskazuje, czy błąd to element <see cref="T:Microsoft.AspNet.SignalR.HubException" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Result">
      <summary>Pobiera lub ustawia wynik wywołania.</summary>
      <returns>Wynik wywołania.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.StackTrace">
      <summary>Pobiera lub ustawia ślad stosu wyjątku, który występuje w wyniku wywołania metody koncentratora.</summary>
      <returns>Ślad stosu wyjątku, który występuje w wyniku wywołania metody koncentratora.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.State">
      <summary>Pobiera lub ustawia zmiany stanu zwrotnego.</summary>
      <returns>Zmiany stanu zwrotnego.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator">
      <summary>Lokalizuje zestaw i zwraca informacje o jego modułach.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator.GetAssemblies">
      <summary>Zwraca listę zestawów, które są określone przez moduł.</summary>
      <returns>Listę zestawów, które są określone przez moduł.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection">
      <summary>Interfejs do zaimplementowania przez elementy <see cref="T:System.Attribute" />, które mogą autoryzować klienta do nawiązania połączenia z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Przy danym elemencie <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" /> określa, czy klient jest autoryzowany do nawiązania połączenia z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Wartość true, jeśli element wywołujący jest autoryzowany do nawiązania połączenia z koncentratorem; w przeciwnym razie wartość false.</returns>
      <param name="hubDescriptor">Opis koncentratora, z którym klient próbuje nawiązać połączenie.</param>
      <param name="request">Żądanie połączenia od klienta.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation">
      <summary>Interfejs implementowany przez atrybuty <see cref="T:System.Attribute" />, które mogą autoryzować wywoływanie metod <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>Przy danym elemencie <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" /> określa, czy klient jest autoryzowany do wywołania metody <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Wartość true, jeśli element wywołujący jest autoryzowany do wywołania metody <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />; w przeciwnym razie wartość false.</returns>
      <param name="hubIncomingInvokerContext">Element <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />, który udostępnia szczegółowe informacje dotyczące wywołania metody <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</param>
      <param name="appliesToMethod">Wskazuje, czy wystąpienie interfejsu jest atrybutem stosowanym bezpośrednio do metody.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy">
      <summary>Serwer proxy po stronie serwera dla koncentratora po stronie klienta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IClientProxy.Invoke(System.String,System.Object[])">
      <summary>Wywołuje metodę dla połączeń reprezentowanych przez wystąpienie elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy" />.</summary>
      <returns>Zadanie reprezentujące wysłanie danych do klienta.</returns>
      <param name="method">Nazwa metody do wywołania.</param>
      <param name="args">Argumenty do przekazania do klienta.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHub">
      <summary>Udostępnia interfejs, który reprezentuje metody komunikujące się z połączeniami SignalR połączone z koncentratorem.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Clients">
      <summary>Pobiera lub ustawia klientów podłączonych do koncentratora.</summary>
      <returns>Klienci podłączeni do koncentratora.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Context">
      <summary>Pobiera lub ustawia informacje o typie wywołania.</summary>
      <returns>Informacje dotyczące klienta wywołującego.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Groups">
      <summary>Pobiera lub ustawia menedżera grupy dla tego wystąpienia koncentratora.</summary>
      <returns>Menedżer grupy dla tego wystąpienia koncentratora.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected">
      <summary>Element wywoływany w przypadku nawiązania połączenia z tym wystąpieniem koncentratora.</summary>
      <returns>Obiekt zadania reprezentujący operację nawiązywania połączenia.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected">
      <summary>Element wywoływany w przypadku zakończenia połączenia z tym wystąpieniem koncentratora.</summary>
      <returns>Obiekt zadania reprezentujący operację rozłączania.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected">
      <summary>Element wywoływany w przypadku ponownego nawiązania połączenia z tym wystąpieniem koncentratora.</summary>
      <returns>Obiekt zadania reprezentujący operację ponownego nawiązywania połączenia.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubActivator">
      <summary>Udostępnia metodę umożliwiającą utworzenie wystąpienie koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Tworzy nowe wystąpienie koncentratora.</summary>
      <returns>Nowo utworzony koncentrator.</returns>
      <param name="descriptor">Deskryptor koncentratora.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext">
      <summary>Hermetyzuje wszystkie informacje dotyczące jednego połączenia SignalR elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Caller"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Others"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroup(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext">
      <summary>Hermetyzuje wszystkie informacje dotyczące połączenia SignalR elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.All">
      <summary>Pobiera lub ustawia wszystkich podłączonych klientów.</summary>
      <returns>Wszyscy połączeni klienci.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.AllExcept(System.String[])">
      <summary>Zwraca dynamiczną reprezentację wszystkich klientów oprócz określonych klientów wywołujących.</summary>
      <returns>Dynamiczna reprezentacja wszystkich klientów oprócz określonych klientów wywołujących.</returns>
      <param name="excludeConnectionIds">Lista identyfikatorów połączeń do wykluczenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Client(System.String)">
      <summary>Zwraca dynamiczną reprezentację połączenia o określonym identyfikatorze połączenia.</summary>
      <returns>Dynamiczna reprezentacja określonego klienta.</returns>
      <param name="connectionId">Identyfikator połączenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Clients(System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Group(System.String,System.String[])">
      <summary>Zwraca dynamiczną reprezentację określonej grupy.</summary>
      <returns>Dynamiczna reprezentacja określonej grupy.</returns>
      <param name="groupName">Nazwa grupy.</param>
      <param name="excludeConnectionIds">Lista identyfikatorów połączeń do wykluczenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Groups(System.Collections.Generic.IList{System.String},System.String[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider">
      <summary>Opisuje dostawcę deskryptora koncentratora, który udostępnia informacje dotyczące dostępnych koncentratorów.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.GetHubs">
      <summary>Pobiera wszystkie dostępne koncentratory.</summary>
      <returns>Kolekcja deskryptorów koncentratorów.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Próbuje pobrać koncentrator o określonej nazwie.</summary>
      <returns>Wartość true, jeśli odnaleziono koncentrator.</returns>
      <param name="hubName">Nazwa koncentratora.</param>
      <param name="descriptor">Pobrany obiekt deskryptora.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext">
      <summary>Opis wywoływania przez klienta metody koncentratora po stronie serwera.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Args">
      <summary>Pobiera argumenty do przekazania do wywoływanej metody.</summary>
      <returns>Argumenty do przekazania do wywoływanej metody.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Hub">
      <summary>Pobiera wystąpienie koncentratora, którego elementem jest wywoływana metoda.</summary>
      <returns>Wystąpienie koncentratora, którego elementem jest wywoływana metoda.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.MethodDescriptor">
      <summary>Pobiera opis metody wywoływanej przez klienta.</summary>
      <returns>Opis metody wywoływanej przez klienta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.StateTracker">
      <summary>Pobiera magazyn kluczy i wartości reprezentujący stan koncentratora na kliencie podczas wywoływania.</summary>
      <returns>Magazyn kluczy i wartości reprezentujący stan koncentratora na kliencie podczas wywoływania.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubManager">
      <summary>Opisuje menedżera koncentratorów — główny punkt całego procesu wyszukiwania koncentratorów i metod.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHub(System.String)">
      <summary>Pobiera jeden deskryptor koncentratorów.</summary>
      <returns>Deskryptor koncentratorów, jeśli można go odnaleźć.W przeciwnym razie wartość null.</returns>
      <param name="hubName">Nazwa koncentratora.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Pobiera metodę o określonej nazwie w określonym koncentratorze.</summary>
      <returns>Deskryptor metody, jeśli można ją odnaleźć.W przeciwnym razie wartość null.</returns>
      <param name="hubName">Nazwa koncentratora.</param>
      <param name="method">Nazwa metody do znalezienia.</param>
      <param name="parameters">Parametry metody do dopasowania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Pobiera wszystkie dostępne metody do wywołania w określonym koncentratorze.</summary>
      <returns>Lista dostępnych metod.</returns>
      <param name="hubName">Nazwa kontrolera.</param>
      <param name="predicate">Opcjonalny predykat filtrowania wyników.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Pobiera wszystkie dostępne koncentratory zgodne z określonym predykatem.</summary>
      <returns>Lista deskryptorów koncentratorów.</returns>
      <param name="predicate">Predykat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHub(System.String)">
      <summary>Rozpoznaje określoną nazwę koncentratora jako konkretny obiekt.</summary>
      <returns>Wystąpienie implementacji koncentratora, jeśli można je odnaleźć.W przeciwnym razie wartość null.</returns>
      <param name="hubName">Nazwa koncentratora.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHubs">
      <summary>Rozpoznaje wszystkie dostępne koncentratory jako konkretne obiekty.</summary>
      <returns>Lista wystąpień koncentratorów.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext">
      <summary>Opis wywoływania przez serwer metody koncentratora po stronie klienta.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Connection">
      <summary>Pobiera element <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> (jeśli istnieje) odpowiadający klientowi, który wywołał metodę koncentratora po stronie serwera wywołującą metodę koncentratora po stronie klienta.</summary>
      <returns>Element <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> (jeśli istnieje) odpowiadający klientowi, który wywołał metodę koncentratora po stronie serwera wywołującą metodę koncentratora po stronie klienta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.ExcludedSignals">
      <summary>Pobiera sygnały (identyfikator połączenia, nazwa typu koncentratora lub nazwa typu koncentratora + „.” + nazwa grupy) należące do klientów, którzy nie powinni odbierać wywołania metody, niezależnie od elementu <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" />.</summary>
      <returns>Sygnały (identyfikator połączenia, nazwa typu koncentratora lub nazwa typu koncentratora + „.” + nazwa grupy) należące do klientów, którzy nie powinni odbierać wywołania metody, niezależnie od elementu <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" />..</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Invocation">
      <summary>Pobiera opis wywołania metody, które ma zostać wykonane na kliencie.</summary>
      <returns>Opis wywołania metody, które ma zostać wykonane na kliencie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal">
      <summary>Pobiera sygnał (identyfikator połączenia, nazwa typu koncentratora lub nazwa typu koncentratora + „.” + nazwa grupy) należący do klientów, którzy odbierają wywołanie metody.</summary>
      <returns>Sygnał (identyfikator połączenia, nazwa typu koncentratora lub nazwa typu koncentratora + „.” + nazwa grupy) należący do klientów, którzy odbierają wywołanie metody.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signals">
      <summary>Sygnały (identyfikator połączenia, nazwa typu koncentratora lub nazwa typu koncentratora + „.” + nazwa grupy) należące do klientów, którzy odbierają wywołanie metody.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline">
      <summary>Kolekcja modułów, które mogą przechwytywać i dostosowywać różne etapy przetwarzania koncentratorów, takie jak łączenie, ponowne łączenie, rozłączanie, wywoływanie metod koncentratora po stronie serwera, wywoływanie metod koncentratora po stronie klienta, autoryzowanie klientów koncentratora i ponowne przyłączanie grup koncentratorów.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)">
      <summary>Dodaje element <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" /> do potoku koncentratora.Moduły dodawane do potoku najpierw opakowują moduły, które zostaną dodane do potoku później.Wszystkie moduły muszą zostać dodane do potoku przed wywołaniem metod interfejsu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
      <returns>Element <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> z nowo dodanym modułem zezwalającym na tworzenie łańcucha wywołań elementu <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.Ta metoda mutuje potok, w którym jest wywoływana, dlatego przechowywanie wyniku nie jest konieczne.</returns>
      <param name="pipelineModule">Moduł, który może przechwytywać i dostosowywać różne etapy przetwarzania koncentratorów, takie jak łączenie, ponowne łączenie, rozłączanie, wywoływanie metod koncentratora po stronie serwera, wywoływanie metod koncentratora po stronie klienta, autoryzowanie klientów koncentratora i ponowne przyłączanie grup koncentratorów.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker">
      <summary>Implementacje tego interfejsu służą do wykonywania operacji wymaganej do realizowania różnych etapów przetwarzania koncentratorów, takich jak łączenie, ponowne łączenie, rozłączanie, wywoływanie metod koncentratora po stronie serwera, wywoływanie metod koncentratora po stronie klienta, autoryzowanie klientów koncentratora i ponowne przyłączanie grup koncentratorów.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.AuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Element, który ma zostać wywołany przed zasubskrybowaniem przez klienta sygnałów należących do koncentratora opisanego przez element <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Domyślnie element <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> wyszukuje atrybuty w elemencie <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> w celu określenia, czy klient jest autoryzowany do zasubskrybowania wywołań metody opisywanego koncentratora.</summary>
      <returns>Wartość true, jeśli klient jest autoryzowany do zasubskrybowania wywołań metod koncentratora po stronie klienta; w przeciwnym razie wartość false.</returns>
      <param name="hubDescriptor">Opis koncentratora, z którym klient próbuje nawiązać połączenie.</param>
      <param name="request">Żądanie połączenia wykonywane przez klienta, które powinno uwzględniać użytkownika <see cref="T:System.Security.Principal.IPrincipal" /> klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Connect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Element wywoływany, gdy klient nawiąże połączenie z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> dla każdego elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient nawiąże połączenie.Domyślnie powoduje to wywołanie metody OnConnected elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Element <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient nawiązał połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Disconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Element wywoływany, gdy klient zakończy połączenie z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> dla każdego elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient był połączony.Domyślnie powoduje to wywołanie metody OnDisconnected elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Element <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient zakończył połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Invoke(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Wywołuje metodę koncentratora po stronie serwera.</summary>
      <returns>Operacja asynchroniczna zwracająca wartość wywołania metody koncentratora po stronie serwera.</returns>
      <param name="context">Opis wywołania metody koncentratora po stronie serwera.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Reconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Element wywoływany, gdy klient ponownie nawiąże połączenie z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> dla każdego elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient nawiąże połączenie.Domyślnie powoduje to wywołanie metody OnReconnected elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Element <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient ponownie nawiązał połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.RejoiningGroups(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String})">
      <summary>Ta metoda określa, którym grupom należącym do koncentratora opisanego przez element <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> klient powinien zezwolić na ponowne przyłączenie.Domyślnie klienci ponownie nawiązujący połączenie z serwerem są usuwani ze wszystkich grup, do których mogli należeć, ponieważ niezaufani klienci mogą podawać się za elementy grup, w przypadku których nigdy nie byli autoryzowani do przyłączenia.</summary>
      <returns>Lista grup, do których klient może ponownie zostać przyłączony.</returns>
      <param name="hubDescriptor">Opis koncentratora, dla którego klient próbuje ponownie przyłączyć się do grup.</param>
      <param name="request">Żądanie ponownego nawiązania połączenia wykonywane przez klienta, który próbuje ponownie przyłączyć się do grup.</param>
      <param name="groups">Lista grup należących do odpowiedniego koncentratora, za którego element klient podawał się przed ponownym nawiązaniem połączenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Send(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Wywołuje metodę koncentratora po stronie klienta.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="context">Opis wywołania metody koncentratora po stronie klienta.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule">
      <summary>Element <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" /> może przechwytywać i dostosowywać różne etapy przetwarzania koncentratorów, takie jak łączenie, ponowne łączenie, rozłączanie, wywoływanie metod koncentratora po stronie serwera, wywoływanie metod koncentratora po stronie klienta, autoryzowanie klientów koncentratora i ponowne przyłączanie grup koncentratorów.Moduły można uaktywniać przez wywołanie elementu <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.Połączone moduły dodawane do elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> są wywoływane za pośrednictwem interfejsu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Opakowuje funkcję, która ma zostać wywołana przed zasubskrybowaniem przez klienta sygnałów należących do koncentratora opisanego przez element <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Domyślnie element <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> wyszukuje atrybuty w elemencie <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> w celu określenia, czy klient jest autoryzowany do zasubskrybowania wywołań metody opisywanego koncentratora.Funkcja zwraca wartość true, jeśli klient jest autoryzowany do zasubskrybowania wywołań metod koncentratora po stronie klienta; w przeciwnym razie zwraca wartość false.</summary>
      <returns>Opakowana funkcja określająca, czy klient jest autoryzowany do nawiązania połączenia z opisywanym koncentratorem.</returns>
      <param name="authorizeConnect">Funkcja określająca, czy klient jest autoryzowany do nawiązania połączenia z opisywanym koncentratorem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Opakowuje funkcję wywoływaną, gdy klient nawiąże połączenie z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> dla każdego elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient nawiąże połączenie.Domyślnie powoduje to wywołanie metody OnConnected elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Opakowana funkcja wywoływana, gdy klient nawiąże połączenie z koncentratorem.</returns>
      <param name="connect">Funkcja wywoływana, gdy klient nawiąże połączenie z koncentratorem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Opakowuje funkcję wywoływaną, gdy klient zakończy połączenie z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> dla każdego elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient był połączony.Domyślnie powoduje to wywołanie metody OnDisconnected elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Opakowana funkcja wywoływana, gdy klient zakończy połączenie z koncentratorem.</returns>
      <param name="disconnect">Funkcja wywoływana, gdy klient zakończy połączenie z koncentratorem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Opakowuje funkcję wywołującą metodę koncentratora po stronie serwera.Nawet jeśli klient nie jest autoryzowany do nawiązania połączenia z koncentratorem, będzie autoryzowany do wywoływania w tym koncentratorze metod po stronie serwera, o ile nie zostało to uniemożliwione w elemencie <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> przez niewykonanie parametru wywoływania.</summary>
      <returns>Opakowana funkcja wywołująca metodę koncentratora po stronie serwera.</returns>
      <param name="invoke">Funkcja wywołująca metodę koncentratora po stronie serwera.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Opakowuje funkcję wywołującą metodę koncentratora po stronie klienta.</summary>
      <returns>Opakowana funkcja wywołująca metodę koncentratora po stronie klienta.</returns>
      <param name="send">Funkcja wywołująca metodę koncentratora po stronie klienta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Opakowuje funkcję wywoływaną, gdy klient ponownie nawiąże połączenie z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> dla każdego elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, z którym klient nawiąże połączenie.Domyślnie powoduje to wywołanie metody OnReconnected elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Opakowana funkcja wywoływana, gdy klient ponownie nawiąże połączenie z koncentratorem.</returns>
      <param name="reconnect">Funkcja wywoływana, gdy klient ponownie nawiąże połączenie z koncentratorem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Opakowuje funkcję określającą, którym grupom należącym do koncentratora opisanego przez element <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> klient powinien zezwolić na ponowne przyłączenie.Domyślnie klienci ponownie nawiązujący połączenie z serwerem są usuwani ze wszystkich grup, do których mogli należeć, ponieważ niezaufani klienci mogą podawać się za elementy grup, w przypadku których nigdy nie byli autoryzowani do przyłączenia.</summary>
      <returns>Opakowana funkcja określająca, do których grup klient powinien mieć możliwość przyłączenia.</returns>
      <param name="rejoiningGroups">Funkcja określająca, do których grup klient powinien mieć możliwość przyłączenia.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser">
      <summary>Obsługuje analizę żądań przychodzących za pośrednictwem elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser.Parse(System.String,Newtonsoft.Json.JsonSerializer)">
      <summary>Analizuje przychodzące obciążenie koncentratora w elemencie <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</summary>
      <returns>Wynikowy element <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</returns>
      <param name="data">Nieprzetworzone obciążenie koncentratora.</param>
      <param name="serializer">Element JsonSerializer używany do analizowania danych.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier">
      <summary>Łączy, minimalizuje i zapisuje w pamięci podręcznej JavaScript koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier.Minify(System.String)">
      <summary>Minimalizuje określony zasób elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />.</summary>
      <returns>Określone źródło elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />.</returns>
      <param name="source">Zminimalizowany zasób.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator">
      <summary>Generuje usługę serwera proxy dla interfejsu JavaScript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Generuje serwer proxy dla adresu URL elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />.</summary>
      <returns>Serwer proxy do generowania adresu URL usługi dla elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />.</returns>
      <param name="serviceUrl">Usługa adresu URL.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider">
      <summary>Opisuje dostawcę metod koncentratora, który tworzy kolekcję dostępnych metod w danym koncentratorze.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Pobiera wszystkie metody w danym koncentratorze.</summary>
      <returns>Dostępne metody.</returns>
      <param name="hub">Obiekt deskryptora koncentratora.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Próbuje pobrać metodę.</summary>
      <returns>Wartość true, jeśli odnaleziono metodę.</returns>
      <param name="hub">Obiekt deskryptora koncentratora.</param>
      <param name="method">Nazwa metody.</param>
      <param name="descriptor">Deskryptor metody (jeśli można ją odnaleźć).W przeciwnym razie wartość null.</param>
      <param name="parameters">Parametry metody do porównania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IParameterResolver">
      <summary>Opisuje mechanizm rozpoznawania parametrów służący do rozpoznawania wartości parametrów na podstawie podanych informacji.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Rozpoznaje wartości parametrów metod na podstawie podanych obiektów.</summary>
      <returns>Tablica wartości parametrów.</returns>
      <param name="method">Deskryptor metody.</param>
      <param name="values">Lista wartości parametrów do rozpoznania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor">
      <summary>Reprezentuje informacje dotyczące pojedynczej metody koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Attributes">
      <summary>Pobiera lub ustawia atrybuty dołączone do tej metody.</summary>
      <returns>Atrybuty dołączane do tej metody.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Hub">
      <summary>Pobiera obiekt deskryptora koncentratora docelowy dla tej metody.</summary>
      <returns>Obiekt deskryptora koncentratora docelowy dla tej metody.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Invoker">
      <summary>Pobiera lub ustawia delegata wywołania metody.Ustawia koncentrator docelowy i tablicę argumentów wywołań jako argumenty.</summary>
      <returns>Delegat wywołania metody.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Parameters">
      <summary>Pobiera lub ustawia dostępne parametry metody.</summary>
      <returns>Dostępne parametry metody.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.ReturnType">
      <summary>Pobiera lub ustawia typ zwrotny tej metody.</summary>
      <returns>Typ zwrotny tej metody.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodExtensions">
      <summary>Reprezentuje rozszerzenie metod dla koncentratora SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodExtensions.Matches(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Określa, czy rozszerzenie metody pasuje do deskryptora innej metody.</summary>
      <returns>Wartość true, jeśli rozszerzenie metody pasuje do deskryptora innej metody, w przeciwnym razie wartość false.</returns>
      <param name="methodDescriptor">Deskryptor metody.</param>
      <param name="parameters">Lista parametrów.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.GetInvocationData(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.Invoke(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException">
      <summary>Reprezentuje wyjątek zgłaszany, gdy klient nie jest autoryzowany do nawiązania połączenia z koncentratorem.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> z zserializowanymi danymi.</summary>
      <param name="info">Zserializowane informacje dotyczące wyjątku.</param>
      <param name="context">Informacje kontekstowe dotyczące źródła lub miejsca docelowego.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> z komunikatem o błędzie.</summary>
      <param name="message">Komunikat dotyczący wyjątku.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String,System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> z komunikatem o błędzie i wyjątkiem wewnętrznym.</summary>
      <param name="message">Komunikat dotyczący wyjątku.</param>
      <param name="inner">Błąd, który spowodował wyjątek.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier">
      <summary>Reprezentuje element minimalizujący dla wartości null skryptu Javascript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Instance">
      <summary>Określa wystąpienie elementu <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Minify(System.String)">
      <summary>Minimalizuje określone źródło skryptu Javascript.</summary>
      <returns>Zminimalizowany zasób.</returns>
      <param name="source">Źródło do zminimalizowania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor">
      <summary>Provides details about the null method.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor" /> class.</summary>
      <param name="methodName">The name for this null method.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Attributes">
      <summary>Gets or sets the attributes attached to this method.</summary>
      <returns>The attributes attached to this method.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Invoker">
      <summary>Gets or sets the method invocation delegate. Takes a target hub and an array of invocation arguments as it's arguments.</summary>
      <returns>The method invocation delegate.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Parameters">
      <summary>Gets or sets the available method parameters.</summary>
      <returns>The available method parameters.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor">
      <summary>Reprezentuje informacje dotyczące jednego parametru metody koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.Name">
      <summary>Pobiera lub ustawia nazwę parametru.</summary>
      <returns>Nazwa parametru.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.ParameterType">
      <summary>Pobiera lub ustawia typ parametru.</summary>
      <returns>Typ parametru.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider">
      <summary>Opisuje dostawcę deskryptora koncentratora, i udostępnia odzwierciedlone informacje dotyczące dostępnych koncentratorów.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider" />.</summary>
      <param name="resolver">Element <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.BuildHubsCache">
      <summary>Pobiera kolekcję połączenia do budowy pamięci cache koncentratora.</summary>
      <returns>Kolekcja połączenia do budowy pamięci cache koncentratora.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.GetHubs">
      <summary>Pobiera wszystkie dostępne koncentratory. </summary>
      <returns>Kolekcja dostępnych koncentratorów.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Próbuje pobrać koncentrator o określonej nazwie.</summary>
      <returns>Wartość true, jeśli koncentrator został odnaleziony, w przeciwnym razie wartość false.</returns>
      <param name="hubName">Nazwa koncentratora do pobrania.</param>
      <param name="descriptor">Gdy metoda zwróci wartość, zawiera pobrany obiekt deskryptora.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider">
      <summary>Reprezentuje odzwierciedloną metodę dla dostawcy deskryptora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Zwraca kolekcję metody dla dostawcy.</summary>
      <returns>Kolekcja metody dla dostawcy.</returns>
      <param name="hub">Deskryptor koncentratora.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Wyszukuje określony element <paramref name="method" /> w określonym elemencie <paramref name="hub" />.</summary>
      <returns>Wartość true, jeśli metoda zgodna z zestawem nazwa/parametr zostanie odnaleziona w koncentratorze; w przeciwnym razie wartość false.</returns>
      <param name="hub">Koncentrator, w którym ma zostać wyszukany określony element <paramref name="method" />.</param>
      <param name="method">Wyszukiwana nazwa metody.</param>
      <param name="descriptor">Rozpoznany element <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" /> w przypadku powodzenia.</param>
      <param name="parameters">Zestaw parametrów, za pomocą których zostanie odnalezione określone przeładowanie określonego elementu <paramref name="method" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper">
      <summary>Reprezentuje pomocnika odbicia.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetAttributeValue``2(System.Reflection.ICustomAttributeProvider,System.Func{``0,``1})">
      <summary>Pobiera wartość atrybutu dla tego pomocnika.</summary>
      <returns>Wartość atrybutu dla tego pomocnika.</returns>
      <param name="source">Źródło, z którego należy uzyskać wartość.</param>
      <param name="valueGetter">Obiekt pozyskujący wartość.</param>
      <typeparam name="TAttribute">Typ atrybutu.</typeparam>
      <typeparam name="TResult">Typ wyniku.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetExportedHubMethods(System.Type)">
      <summary>Pobiera listę wyeksportowanych metod koncentratora.</summary>
      <returns>Lista wyeksportowanych metod koncentratora.</returns>
      <param name="type">Typ metod do pobrania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy">
      <summary>Reprezentuje serwer proxy sygnału używanego przez koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Pobiera dane wywołania koncentratora klienta skojarzone z serwerem proxy.</summary>
      <returns>Dane wywołania koncentratora klienta skojarzone z serwerem proxy.</returns>
      <param name="method">Metoda.</param>
      <param name="args">Argumenty.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.HubName">
      <summary>Pobiera lub ustawia nazwę koncentratora.</summary>
      <returns>Nazwa koncentratora.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoke(System.String,System.Object[])">
      <summary>Wywołuje metodę i zwraca wyniki wywołania metody.</summary>
      <returns>Wyniki operacji.</returns>
      <param name="method">Metoda do wywołania.</param>
      <param name="args">Tablica argumentów.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoker"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Signal">
      <summary>Pobiera lub ustawia sygnał skojarzony z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />.</summary>
      <returns>Sygnał skojarzony z elementem <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Udostępnia implementację dla operacji, które uzyskują wartości elementu.</summary>
      <returns>Wartość true, jeśli operacja jest udana, w przeciwnym razie wartość false.</returns>
      <param name="binder">Informacje o obiekcie, który wywołał operację dynamiczną.</param>
      <param name="result">Wyniki operacji pozyskania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Udostępnia implementację dla operacji, które wywołują element.</summary>
      <returns>Wartość true, jeśli operacja jest udana, w przeciwnym razie wartość false.</returns>
      <param name="binder">Udostępnia informacje na temat operacji dynamicznej.</param>
      <param name="args">Argumenty przekazywane do elementu obiektu podczas operacji wywoływania.</param>
      <param name="result">Wynik wywołania elementu.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker">
      <summary>Reprezentuje słownik z śledzeniem zmian.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />.</summary>
      <param name="values">Wartość słownika.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.GetChanges">
      <summary>Pobiera zmiany skojarzone z obiektem śledzącym.</summary>
      <returns>Zmiany skojarzone z obiektem śledzącym.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.Item(System.String)">
      <summary>Pobiera lub ustawia element skojarzony z obiektem śledzącym używającym określonego klucza.</summary>
      <returns>Element skojarzony z obiektem śledzącym używającym określonego klucza.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy">
      <summary>Reprezentuje stanowy serwer proxy sygnału używanego przez koncentratora.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Pobiera dane wywołania koncentratora klienta skojarzone z serwerem proxy.</summary>
      <returns>Dane wywołania koncentratora klienta skojarzone z serwerem proxy.</returns>
      <param name="method">Metoda.</param>
      <param name="args">Argumenty.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Udostępnia implementację dla operacji, które uzyskują wartości elementu.</summary>
      <returns>Wartość true, jeśli operacja jest udana, w przeciwnym razie wartość false.</returns>
      <param name="binder">Informacje o obiekcie, który wywołał operację dynamiczną.</param>
      <param name="result">Wyniki operacji pozyskania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Udostępnia implementację dla operacji, które ustalają wartości elementu.</summary>
      <returns>Wartość true, jeśli operacja jest udana, w przeciwnym razie wartość false.</returns>
      <param name="binder">Informacje o obiekcie, który wywołał operację dynamiczną.</param>
      <param name="value">Wynik ustalonej operacji.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.UserProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.UserProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler">
      <summary>Reprezentuje wystąpienie, które obsługuje zestaw certyfikacji aplikacji (ACK).</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor(System.Boolean,System.TimeSpan,System.TimeSpan)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
      <param name="completeAcksOnTimeout">Wartość true, jeśli zestaw ACK jest utworzony po upływie limitu czasu, w przeciwnym razie wartość false.</param>
      <param name="ackThreshold">próg ACK.</param>
      <param name="ackInterval">Interwał ACK.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.CreateAck(System.String)">
      <summary>Tworzy nowy obiekt ACK.</summary>
      <returns>Utworzony obiekt ACK.</returns>
      <param name="id">Identyfikator.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose">
      <summary>Zwalnia wszelkie zasoby używane przez element <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose(System.Boolean)">
      <summary>Zwalnia wszelkie zasoby używane przez to wystąpienie.</summary>
      <param name="disposing">Wartość true, aby zwolnić zasoby zarządzane i niezarządzane, wartość false, aby zwolnić tylko zasoby niezarządzane.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.TriggerAck(System.String)">
      <summary>Wyzwala określony obiekt ACK.</summary>
      <returns>Wyniki operacji.</returns>
      <param name="id">Identyfikator ACK.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader">
      <summary>Reprezentuje czytnik tekstu skojarzony z segmentem tablicy.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.#ctor(System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader" />.</summary>
      <param name="buffer">Tablica buforu segmentu.</param>
      <param name="encoding">Kodowanie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Odczytuje określoną maksymalną liczbę znaków z bieżącego czytnika i zapisuje dane w buforze, rozpoczynając od określonego indeksu.</summary>
      <returns>Liczba odczytanych znaków.</returns>
      <param name="buffer">Zawiera określoną tablicę znaków z wartością pomiędzy indeksem i zastępowaną przez znaki odczytane z bieżącego źródła.</param>
      <param name="index">Pozycja w buforze, od której ma rozpocząć się zapis.</param>
      <param name="count">Maksymalna liczba znaków do odczytania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Connection">
      <summary>W tym miejscu nie będzie aktualizowana żadna zawartość. Nie należy tutaj dodawać materiału.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.#ctor(Microsoft.AspNet.SignalR.Messaging.IMessageBus,Newtonsoft.Json.JsonSerializer,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IAckHandler,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Infrastructure.IProtectedData)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.Connection" />.</summary>
      <param name="newMessageBus">Nowa magistrala komunikatu.</param>
      <param name="jsonSerializer">Serializator JSON.</param>
      <param name="baseSignal">Sygnał podstawowy.</param>
      <param name="connectionId">Identyfikator połączenia.</param>
      <param name="signals">Kolekcja sygnałów.</param>
      <param name="groups">Kolekcja grup.</param>
      <param name="traceManager">Menedżer śledzenia.</param>
      <param name="ackHandler">Program obsługi potwierdzenia.</param>
      <param name="performanceCounterManager">Menedżer licznika wydajności.</param>
      <param name="protectedData">Chronione dane.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.DefaultSignal">
      <summary>Pobiera główny sygnał dla tego połączenia.</summary>
      <returns>Główny sygnał dla tego połączenia.</returns>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyAdded">
      <summary>Występuje, gdy zdarzenie dodaje klucz.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyRemoved">
      <summary>Występuje, gdy zdarzenie usunie klucz.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Identity">
      <summary>Pobiera właściwość tożsamości dla tego połączenia.</summary>
      <returns>Właściwość tożsamości dla tego połączenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Microsoft#AspNet#SignalR#Messaging#ISubscriber#EventKeys">
      <summary>Pobiera listę obiektów, do których można indywidualnie uzyskać dostęp przez indeks.</summary>
      <returns>Lista obiektów, do których można indywidualnie uzyskać dostęp przez indeks.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Odbiera odpowiedź komunikatu na metodę połączenia.</summary>
      <returns>Odpowiedź komunikatu na odebraną metodę połączenia.</returns>
      <param name="messageId">Identyfikator komunikatu.</param>
      <param name="callback">Określa, czy połączenie realizuje odpowiedź wywołania zwrotnego.</param>
      <param name="maxMessages">Maksymalna liczba komunikatów.</param>
      <param name="state">Stan połączenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Wysyła komunikat do co najmniej jednego połączenia.</summary>
      <returns>Komunikat wysyłany do co najmniej jednego połączenia.</returns>
      <param name="message">Wysłany komunikat do połączeń.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Subscription">
      <summary>Pobiera lub ustawia subskrypcję dla właściwości połączenia.</summary>
      <returns>Subskrypcja dla właściwości połączenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.WriteCursor">
      <summary>Pobiera lub ustawia kursor do zapisu sekwencyjnej serii znaków.</summary>
      <returns>Kursor do zapisu sekwencyjnej serii znaków.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager">
      <summary>Udostępnia domyślną implementację interfejsu <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager" />.</summary>
      <param name="resolver">Element <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnection(System.Type)">
      <summary>Zwraca element <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> dla elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Element <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> dla elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="type">Typ elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnectionContext``1">
      <summary>Zwraca element <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> dla elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Element <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> dla elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <typeparam name="T">Typ elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext``1">
      <summary>Zwraca kontekst koncentratora dla tego połączenia.</summary>
      <returns>Kontekst koncentratora dla tego połączenia.</returns>
      <typeparam name="T">Typ koncentratora.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext(System.String)">
      <summary>Zwraca kontekst koncentratora dla tego połączenia na podstawie określonej nazwy.</summary>
      <returns>Kontekst koncentratora dla tego połączenia.</returns>
      <param name="hubName">Nazwa koncentratora.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData">
      <summary>Udostępnia metody ochrony danych.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.#ctor(Microsoft.Owin.Security.DataProtection.IDataProtectionProvider)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData" />.</summary>
      <param name="provider">Dostawca ochrony danych.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Protect(System.String,System.String)">
      <summary>Chroni określone dane.</summary>
      <returns>Chronione dane.</returns>
      <param name="data">Dane są chronione.</param>
      <param name="purpose">Cel ochrony.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Unprotect(System.String,System.String)">
      <summary>Usuwa ochronę określonych danych.</summary>
      <returns>Dane niechronione.</returns>
      <param name="protectedValue">Chronione dane.</param>
      <param name="purpose">Cel ochrony.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData">
      <summary>Udostępnia metody ochrony danych</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Protect(System.String,System.String)">
      <summary>Chroni określone dane.</summary>
      <returns>Chronione dane.</returns>
      <param name="data">Dane są chronione.</param>
      <param name="purpose">Cel ochrony.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Unprotect(System.String,System.String)">
      <summary>Usuwa ochronę określonych danych.</summary>
      <returns>Dane niechronione.</returns>
      <param name="protectedValue">Chronione dane.</param>
      <param name="purpose">Cel ochrony.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler">
      <summary>Udostępnia interfejs reprezentujący wystąpienie, które obsługuje zestaw certyfikacji aplikacji (ACK).</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.CreateAck(System.String)">
      <summary>Tworzy nowy obiekt ACK.</summary>
      <returns>Utworzony obiekt ACK.</returns>
      <param name="id">Identyfikator.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.TriggerAck(System.String)">
      <summary>Wyzwala określony obiekt ACK.</summary>
      <returns>Wyniki operacji.</returns>
      <param name="id">Identyfikator ACK.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter">
      <summary>Represents the base interface for class that has the ability to write raw binary data.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter.Write(System.ArraySegment{System.Byte})">
      <summary>Writes raw binary data to underlying stream.</summary>
      <param name="data">The raw binary data to write.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager">
      <summary>Zapewnia dostęp do koncentratorów, do połączeń trwałych i odwołań.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetConnectionContext``1">
      <summary>Zwraca element <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> dla elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Element <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> dla elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <typeparam name="T">Typ elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext``1">
      <summary>Zwraca informacje o koncentratorze skojarzone z połączeniem.</summary>
      <returns>Informacje o koncentratorze skojarzone z połączeniem.</returns>
      <typeparam name="T">Typ koncentratora.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext(System.String)">
      <summary>Zwraca informacje o koncentratorze skojarzone z połączeniem.</summary>
      <returns>Informacje o koncentratorze skojarzone z połączeniem.</returns>
      <param name="hubName">Nazwa koncentratora.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper">
      <summary>Reprezentuje pomocnika dla operacji niepodzielnych w przypadku zmiennych, które są udostępniane przez wiele wątków.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper.CompareExchangeOr(System.Int32@,System.Int32,System.Int32,System.Int32)">
      <summary>Porównuje dwa obiekty pod kątem równości referencyjnej i sprawdza, czy są równe.</summary>
      <returns>Wartość true, jeśli dwa obiekty są równe; w przeciwnym razie wartość false.</returns>
      <param name="location">Obiekt docelowy, który jest porównywany ze wzorcem i ewentualnie zamieniany.</param>
      <param name="value">Obiekt, który zastępuje obiekt docelowy, jeśli wynikiem porównania jest równość.</param>
      <param name="comparandA">Pierwszy wzorzec.</param>
      <param name="comparandB">Drugi wzorzec.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter">
      <summary>W tym miejscu nie będzie aktualizowana żadna zawartość. Nie należy tutaj dodawać materiału.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Close">
      <summary>Zamyka licznik wydajności i zwalnia wszystkie zasoby przydzielone przez to wystąpienie licznika wydajności.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.CounterName"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Decrement">
      <summary>Zmniejsza skojarzone liczniki wydajności o jeden przez skuteczną niepodzielną operację.</summary>
      <returns>Zmniejszona wartość licznika.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Increment">
      <summary>Zwiększa skojarzone liczniki wydajności o jeden przez skuteczną niepodzielną operację.</summary>
      <returns>Zwiększona wartość licznika.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.IncrementBy(System.Int64)">
      <summary>Zwiększa lub zmniejsza wartość skojarzonych liczników wydajności o określoną ilość poprzez skuteczną niepodzielną operację.</summary>
      <returns>Nowa wartość licznika.</returns>
      <param name="value">Wartość do zwiększenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.NextSample">
      <summary>Uzyskuje próbkę licznika oraz zwraca nieprzetworzoną lub nieobliczoną wartość.</summary>
      <returns>Próbka licznika; zwraca nieprzetworzoną lub nieobliczoną wartość tego licznika.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RawValue">
      <summary>Pobiera lub ustawia nieprzetworzoną lub nieobliczoną wartość tego licznika.</summary>
      <returns>Nieprzetworzona wartość licznika.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RemoveInstance">
      <summary>Usuwa wystąpienie kategorii określone przez właściwość InstanceName obiektu PerformanceCounter.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager">
      <summary>Zapewnia dostęp do liczników wydajności.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę komunikatów odebranych przez połączenia (od serwera do klienta) w ciągu sekundy.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę komunikatów odebranych przez połączenia (od serwera do klienta) od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę komunikatów wysłanych przez połączenia (od klienta do serwera) w ciągu sekundy.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę komunikatów wysłanych przez połączenia (od klienta do serwera) od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsConnected">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę zdarzeń Connect połączenia od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsCurrent">
      <summary>Pobiera licznik wydajności reprezentujący liczbę obecnie nawiązanych połączeń.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsDisconnected">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę zdarzeń Disconnect połączenia od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsReconnected">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę zdarzeń Reconnect połączenia od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę wszystkich błędów przetwarzanych na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę wszystkich błędów przetworzonych od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę wszystkich błędów wywołania koncentratora na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę wszystkich błędów wywołania koncentratora od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę wszystkich błędów rozpoznania koncentratora na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę wszystkich błędów rozpoznania koncentratora od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę błędów transportu na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę błędów transportu przetworzonych od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Inicjalizuje liczniki wydajności.</summary>
      <param name="instanceName">Nazwa wystąpienia hosta.</param>
      <param name="hostShutdownToken">Token anulowania reprezentujący zamknięcie hosta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Ładuje licznik wydajności.</summary>
      <param name="categoryName">Nazwa kategorii.</param>
      <param name="counterName">Nazwa licznika.</param>
      <param name="instanceName">Nazwa wystąpienia.</param>
      <param name="isReadOnly">Czy licznik jest tylko do odczytu.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Pobiera licznik wydajności reprezentujący liczbę procesów roboczych przydzielonych w celu dostarczania komunikatów przez magistralę komunikatów.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Pobiera licznik wydajności reprezentujący liczbę procesów roboczych aktualnie dostarczających komunikaty przez magistralę komunikatów.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę komunikatów publikowanych w magistrali komunikatów na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę komunikatów opublikowanych w magistrali komunikatów od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę komunikatów odebranych przez subskrybentów w ciągu sekundy.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę komunikatów odebranych przez subskrybentów od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Pobiera licznik wydajności reprezentujący bieżącą liczbę subskrybentów magistrali komunikatów.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę nowych subskrybentów magistrali komunikatów na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę subskrybentów magistrali komunikatów od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Pobiera licznik wydajności reprezentujący bieżącą liczbę tematów w magistrali komunikatów.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę błędów skalowania na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę błędów skalowania od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę komunikatów odebranych przez magistralę komunikatów skalowania na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Pobiera licznik wydajności reprezentujący bieżącą długość kolejki wysyłania skalowania.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Pobiera licznik wydajności reprezentujący liczbę logicznych strumieni w obecnie skonfigurowanym dostawcy magistrali komunikatów skalowania, które znajdują się w stanie buforowania.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Pobiera licznik wydajności reprezentujący liczbę logicznych strumieni w obecnie skonfigurowanym dostawcy magistrali komunikatów skalowania, które znajdują się w stanie otwartym.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Pobiera licznik wydajności reprezentujący liczbę logicznych strumieni w obecnie skonfigurowanym dostawcy magistrali komunikatów skalowania.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData">
      <summary>Reprezentuje interfejs udostępniający metody szyfrowania i deszyfrowania danych skojarzonych z infrastrukturą SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Protect(System.String,System.String)">
      <summary>Chroni określone dane.</summary>
      <returns>Chronione dane.</returns>
      <param name="data">Dane są chronione.</param>
      <param name="purpose">Cel ochrony.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Unprotect(System.String,System.String)">
      <summary>Podnosi ochronę określonych danych.</summary>
      <returns>Dane niechronione.</returns>
      <param name="protectedValue">Chroniona wartość do usunięcia ochrony.</param>
      <param name="purpose">Powód podniesienia ochrony.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager">
      <summary>Generuje identyfikator serwera.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager.ServerId">
      <summary>Identyfikator serwera.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier">
      <summary>Udostępnia interfejs, który reprezentuje klasę redukującą rozmiar ciągu.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)">
      <summary>Minimalizuje ciąg w sposób umożliwiający odwrócenie przez to wystąpienie elementu <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" />.</summary>
      <returns>Zminimalizowana reprezentacja elementu <paramref name="value" /> bez następujących znaków:,|\</returns>
      <param name="value">Ciąg do zminimalizowania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)">
      <summary>Wywołanie tej funkcji oznacza, że każda kolejna próba minimalizowania ciągów, które zostały wcześniej zminimalizowane z elementu <paramref name="value" />, może spowodować zwrócenie wartości null.Umożliwia to wyczyszczenie wszelkich struktur danych wewnętrznych, które odwołują się do elementu <paramref name="value" />.</summary>
      <param name="value">Ciąg, który mógł zostać wcześniej zminimalizowany.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)">
      <summary>Odwraca wywołanie elementu <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, które zostało wykonane co najmniej raz w odniesieniu do tego wystąpienia elementu <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" />, bez kolejnych wywołań elementu <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> współużytkujących ten sam argument co wywołanie elementu <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, dla którego został zwrócony element <paramref name="value" />.</summary>
      <returns>Argument poprzednich wywołań elementu <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, dla których został zwrócony element <paramref name="value" />.Jeśli dla żadnego wywołania elementu <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> w tym wystąpieniu elementu <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> nigdy nie został zwrócony element <paramref name="value" /> lub jeśli po ostatnim wywołaniu elementu <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, dla którego został zwrócony element <paramref name="value" />, wystąpiło wywołanie elementu <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> współużytkujące ten sam argument, element <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)" /> może zwrócić wartość null, ale nie może zostać zwrócone.</returns>
      <param name="value">Zminimalizowany ciąg, który został zwrócony przez poprzednie wywołanie elementu <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager">
      <summary>Zarządza licznikami wydajności, używając liczników wydajności systemu Windows.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.DefaultDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
      <param name="resolver">Domyślny mechanizm rozpoznawania zależności.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.CategoryName">
      <summary>Określa nazwę kategorii licznika wydajności dla tego licznika wydajności.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę komunikatów odebranych przez połączenia (od serwera do klienta) w ciągu sekundy.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę komunikatów odebranych przez połączenia (od serwera do klienta) od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę komunikatów wysłanych przez połączenia (od klienta do serwera) w ciągu sekundy.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę komunikatów wysłanych przez połączenia (od klienta do serwera) od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsConnected">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę zdarzeń Connect połączenia od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsCurrent">
      <summary>Pobiera licznik wydajności reprezentujący liczbę obecnie nawiązanych połączeń.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsDisconnected">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę zdarzeń Disconnect połączenia od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsReconnected">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę zdarzeń Reconnect połączenia od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę wszystkich błędów przetwarzanych na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę wszystkich błędów przetworzonych od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę wszystkich błędów wywołania koncentratora na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę wszystkich błędów wywołania koncentratora od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę wszystkich błędów rozpoznania koncentratora na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę wszystkich błędów rozpoznania koncentratora od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę błędów transportu na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę błędów transportu przetworzonych od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Inicjalizuje liczniki wydajności.</summary>
      <param name="instanceName">Nazwa wystąpienia hosta.</param>
      <param name="hostShutdownToken">Token anulowania reprezentujący zamknięcie hosta.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Ładuje licznik wydajności.</summary>
      <param name="categoryName">Nazwa kategorii.</param>
      <param name="counterName">Nazwa licznika.</param>
      <param name="instanceName">Nazwa wystąpienia.</param>
      <param name="isReadOnly">Wartość true, jeśli licznik jest przeznaczony tylko do odczytu, w przeciwnym razie wartość false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Pobiera licznik wydajności reprezentujący liczbę procesów roboczych przydzielonych w celu dostarczania komunikatów przez magistralę komunikatów.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Pobiera licznik wydajności reprezentujący liczbę procesów roboczych aktualnie dostarczających komunikaty przez magistralę komunikatów.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę komunikatów publikowanych w magistrali komunikatów na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę komunikatów opublikowanych w magistrali komunikatów od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę komunikatów odebranych przez subskrybentów w ciągu sekundy.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę komunikatów odebranych przez subskrybentów od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Pobiera licznik wydajności reprezentujący bieżącą liczbę subskrybentów magistrali komunikatów.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę nowych subskrybentów magistrali komunikatów na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę subskrybentów magistrali komunikatów od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Pobiera licznik wydajności reprezentujący bieżącą liczbę tematów w magistrali komunikatów.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę błędów skalowania na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Pobiera licznik wydajności reprezentujący całkowitą liczbę błędów skalowania od czasu uruchomienia aplikacji.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Pobiera licznik wydajności reprezentujący liczbę komunikatów odebranych przez magistralę komunikatów skalowania na sekundę.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Pobiera licznik wydajności reprezentujący bieżącą długość kolejki wysyłania skalowania.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Pobiera licznik wydajności reprezentujący liczbę logicznych strumieni w obecnie skonfigurowanym dostawcy magistrali komunikatów skalowania, które znajdują się w stanie buforowania.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Pobiera licznik wydajności reprezentujący liczbę logicznych strumieni w obecnie skonfigurowanym dostawcy magistrali komunikatów skalowania, które znajdują się w stanie otwartym.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Pobiera licznik wydajności reprezentujący liczbę logicznych strumieni w obecnie skonfigurowanym dostawcy magistrali komunikatów skalowania.</summary>
      <returns>Zwraca wartość <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver">
      <summary>Provides method for resolving protocol.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor(System.Version,System.Version)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
      <param name="min">The minimum version of the protocol to resolve.</param>
      <param name="max">The maximum version of the protocol to resolve.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.Resolve(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Resolves the protocol in the specified SignalR request.</summary>
      <param name="request">The request to resolve.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Purposes">
      <summary>Określa stałe celów.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.ConnectionToken">
      <summary>Stała ConnectionToken.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.Groups">
      <summary>Stała Groups.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType">
      <summary>Określa polecenia serwera.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType.RemoveConnection">
      <summary>Polecenie RemoveConnection.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager">
      <summary>Domyślna implementacja klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.ServerId">
      <summary>Pobiera lub ustawia identyfikator serwera.</summary>
      <returns>Identyfikator serwera.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonValue">
      <summary>Reprezentuje wartość JSON.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.CanConvertTo(System.Type)">
      <summary>Konwertuje wartość parametru na określony typ <see cref="T:System.Type" />.</summary>
      <returns>Wartość przekonwertowanego parametru.</returns>
      <param name="type">Typ <see cref="T:System.Type" />, na który ma zostać przekonwertowany parametr.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.ConvertTo(System.Type)">
      <summary>Konwertuje wartość parametru na określony typ <see cref="T:System.Type" />.</summary>
      <returns>Wartość przekonwertowanego parametru.</returns>
      <param name="type">Typ <see cref="T:System.Type" />, na który ma zostać przekonwertowany parametr.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonWritable">
      <summary>Implementacje obsługują własną serializację do ciągu JSON.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonWritable.WriteJson(System.IO.TextWriter)">
      <summary>Serializuje się do ciągu JSON za pośrednictwem klasy <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Klasa <see cref="T:System.IO.TextWriter" /> odbierająca obiekt zserializowany do ciągu JSON.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions">
      <summary> Rozszerzenia elementu <see cref="T:Newtonsoft.Json.JsonSerializer" />. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Deserializuje ciąg JSON do obiektu .NET.</summary>
      <returns>Zdeserializowany obiekt z ciągu JSON.</returns>
      <param name="serializer">Element serializujący.</param>
      <param name="jsonBuffer">Bufor JSON do zdeserializowania.</param>
      <param name="encoding">Szyfrowanie do użycia.</param>
      <typeparam name="T">Typ <see cref="T:System.Type" /> deserializowanego obiektu.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.String)">
      <summary>Deserializuje ciąg JSON do obiektu .NET.</summary>
      <returns>Zdeserializowany obiekt z ciągu JSON.</returns>
      <param name="serializer">Element serializujący.</param>
      <param name="json">Ciąg JSON do zdeserializowania.</param>
      <typeparam name="T">Typ <see cref="T:System.Type" /> deserializowanego obiektu.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Serialize(Newtonsoft.Json.JsonSerializer,System.Object,System.IO.TextWriter)">
      <summary>Serializuje określony obiekt do klasy <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="serializer">Serializator JSON</param>
      <param name="value">Obiekt do zserializowania.</param>
      <param name="writer">Klasa <see cref="T:System.IO.TextWriter" />, do której ma zostać zserializowany obiekt.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Stringify(Newtonsoft.Json.JsonSerializer,System.Object)">
      <summary>Serializuje określony obiekt do ciągu JSON.</summary>
      <returns>Reprezentacja ciągu JSON obiektu.</returns>
      <param name="serializer">Element serializujący.</param>
      <param name="value">Obiekt do zserializowania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonUtility">
      <summary> Klasa pomocy dla często stosowanych operacji JSON. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CamelCase(System.String)">
      <summary>Konwertuje określoną nazwę na format Camel Case.</summary>
      <returns>Wartość Camel Case określonego elementu <paramref name="name" />.</returns>
      <param name="name">Wartość do przekonwertowania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializer">
      <summary>Tworzy wystąpienie <see cref="T:Newtonsoft.Json.JsonSerializer" /> z domyślnym ustawieniem.</summary>
      <returns>Nowo utworzony element <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializerSettings">
      <summary>Tworzy domyślne wystąpienie <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />.</summary>
      <returns>Nowo utworzony element <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateJsonpCallback(System.String,System.String)">
      <summary>Tworzy wywołanie zwrotne JSONP.</summary>
      <returns>Element <see cref="T:System.String" /> reprezentujący wywołanie zwrotne.</returns>
      <param name="callback">Wywołanie zwrotne do utworzenia.</param>
      <param name="payload">Ładunek.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JavaScriptMimeType">
      <summary>Pobiera typ MIME dla skryptu Javascript.</summary>
      <returns>Typ MIME dla skryptu Javascript.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JsonMimeType">
      <summary>Pobiera typ MIME tego narzędzia JSON.</summary>
      <returns>Typ MIME tego narzędzia JSON.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Command">
      <summary>Reprezentuje polecenia używane w obsłudze wiadomości SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Command.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.Command" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.CommandType">
      <summary>Pobiera lub ustawia typ poleceń.</summary>
      <returns>Typ poleceń.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Id">
      <summary>Pobiera lub ustawia identyfikator polecenia.</summary>
      <returns>Identyfikator polecenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Value">
      <summary>Pobiera lub ustawia wartość polecenia.</summary>
      <returns>Wartość polecenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.WaitForAck">
      <summary>Pobiera lub ustala, czy polecenie ma czekać na certyfikat przed realizacją.</summary>
      <returns>Wartość true, jeśli polecenie ma czekać na certyfikat przed realizacją, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.CommandType">
      <summary>Wylicza polecenia dla komunikatu połączenia.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Abort">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.AddToGroup">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Disconnect">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Initializing">
      <summary>Określa polecenie do inicjacji połączenia.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.RemoveFromGroup">
      <summary />
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.IMessageBus">
      <summary>Udostępnia metody używane do publikowania oraz subskrybowania komunikatów z magistrali komunikatu SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Ustanawia subskrypcję tematu dla subskrybenta na magistrali komunikatu.</summary>
      <returns>Stan subskrypcji.</returns>
      <param name="subscriber">Subskrybent.</param>
      <param name="cursor">Kursor odczytu wskazujący pracę dla subskrypcji.</param>
      <param name="callback">Funkcja wywołania zwrotnego.</param>
      <param name="maxMessages">Rozmiar buforu komunikatu.</param>
      <param name="state">Stan operacji wywołania zwrotnego.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscriber">
      <summary>Udostępnia szczegóły o subskrybencie na magistrali komunikatu SignalR.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyAdded"></member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyRemoved"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Identity"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Subscription">
      <summary>Pobiera lub ustawia subskrypcję.</summary>
      <returns>Subskrypcja.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.WriteCursor">
      <summary>Pobiera lub ustawia kursor zapisu.</summary>
      <returns>Kursor zapisu.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscription">
      <summary>Udostępnia metody wykonywania pracy i kontroli stanu subskrypcji.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscription.Identity">
      <summary>Pobiera lub ustawia tożsamość subskrypcji.</summary>
      <returns>Tożsamość subskrypcji.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.SetQueued">
      <summary>Ustawia subskrypcję w stanie roboczym.</summary>
      <returns>Wartość true, jeśli subskrypcja została ustawiona w stanie roboczym, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.UnsetQueued">
      <summary>Ustawia subskrypcję w stanie bezczynności.</summary>
      <returns>Wartość true, jeśli subskrypcja została ustawiona w stanie bezczynności, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.Work">
      <summary>Przeprowadza pracę na zasubskrybowanym komunikacie w ramach tej subskrypcji.</summary>
      <returns>Zadanie reprezentujące operację na zasubskrybowanym komunikacie.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo">
      <summary>W tym miejscu nie będzie aktualizowana żadna zawartość. Nie należy tutaj dodawać materiału.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.#ctor(System.String,System.UInt64,Microsoft.AspNet.SignalR.Messaging.MessageStore{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo" />.</summary>
      <param name="key">Klucz skojarzony z lokalnym zdarzeniem.</param>
      <param name="id">Identyfikator skojarzony z informacjami klucza.</param>
      <param name="store">Magazyn komunikatów skojarzony z lokalnym kluczem zdarzenia.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Id">
      <summary>Pobiera lub ustawia identyfikator skojarzony z informacjami klucza.</summary>
      <returns>Identyfikator skojarzony z informacjami klucza.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Key">
      <summary>Pobiera lub ustawia klucz skojarzony z lokalnym zdarzeniem.</summary>
      <returns>Klucz skojarzony z lokalnym zdarzeniem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.MessageStore">
      <summary>Pobiera komunikat dla klucza.</summary>
      <returns>Komunikat dla klucza.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Message">
      <summary>W tym miejscu nie będzie aktualizowana żadna zawartość. Nie należy tutaj dodawać materiału.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.ArraySegment{System.Byte})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />.</summary>
      <param name="source">Źródło komunikatu.</param>
      <param name="key">Komunikat klucza.</param>
      <param name="value">Wartość komunikatu.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.CommandId">
      <summary>Pobiera lub ustawia identyfikator polecenia komunikatu.</summary>
      <returns>Identyfikator polecenia komunikatu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Encoding">
      <summary>Kodowanie komunikatu</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Filter">
      <summary>Pobiera lub ustawia filtr komunikatu.</summary>
      <returns>Filtr komunikatu.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.GetString"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsAck">
      <summary>Pobiera lub ustawia wartość wskazującą, czy komunikat jest potwierdzonym komunikatem.</summary>
      <returns>Wartość true, jeśli komunikat jest potwierdzonym komunikatem, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsCommand">
      <summary>Pobiera wartość wskazującą, czy komunikat jest komunikatem polecenia.</summary>
      <returns>Wartość true, jeśli komunikat jest komunikatem polecenia, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Key">
      <summary>Pobiera lub ustawia klucz dla komunikatu.</summary>
      <returns>Klucz dla komunikatu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.MappingId">
      <summary>Identyfikator ładunku.Używany tylko w scenariuszach ze skalowaniem</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.ReadFrom(System.IO.Stream)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Source">
      <summary>Pobiera lub ustawia źródło komunikatu.</summary>
      <returns>Źródło komunikatu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.StreamIndex">
      <summary>Indeks strumienia, z którego pochodzi ten komunikat.Używany tylko w scenariuszach ze skalowaniem</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Value">
      <summary>Pobiera lub ustawia wartość komunikatu.</summary>
      <returns>Wartość komunikatu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.WaitForAck">
      <summary>Pobiera lub ustawia wartość wskazującą, czy komunikat czeka na potwierdzenie.</summary>
      <returns>Wartość true, jeśli komunikat czeka na potwierdzenie, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.WriteTo(System.IO.Stream)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker">
      <summary>Planowanie zadań do wykonania dla określonej subskrypcji i zawiera algorytm wybierania liczby procesów roboczych (wątków z puli wątków) do obsługi zaplanowanych zadań.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
      <param name="performanceCounterManager">Menedżer licznika wydajności.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose">
      <summary>Zwalnia wszelkie zasoby używane przez element <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose(System.Boolean)">
      <summary>Zwalnia wszelkie zasoby używane przez element <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
      <param name="disposing">Wartość true, aby zwolnić zasoby zarządzane i niezarządzane, wartość false, aby zwolnić tylko zasoby niezarządzane.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Schedule(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Planowanie zadań dla określonej subskrypcji.</summary>
      <param name="subscription">Subskrypcja do zaplanowania.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Trace">
      <summary>Pobiera lub ustawia źródło śladu brokera.</summary>
      <returns>Źródło śladu brokera.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBus">
      <summary>Reprezentuje magistralę komunikatu dla elementu SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager,System.Int32)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Counters"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Tworzy nową subskrypcję dla subskrybenta.</summary>
      <returns>Nowo utworzona subskrypcja.</returns>
      <param name="subscriber">Subskrybent.</param>
      <param name="cursor">Kursor odczytu wskazujący pracę dla subskrypcji.</param>
      <param name="callback">Funkcja wywołania zwrotnego.</param>
      <param name="messageBufferSize">Rozmiar buforu komunikatu.</param>
      <param name="state">Stan operacji wywołania zwrotnego.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateTopic(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Save(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.ScheduleEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Ustanawia subskrypcję tematu dla subskrybenta na magistrali komunikatu.</summary>
      <returns>Stan subskrypcji.</returns>
      <param name="subscriber">Subskrybent.</param>
      <param name="cursor">Kursor odczytu wskazujący pracę dla subskrypcji.</param>
      <param name="callback">Funkcja wywołania zwrotnego.</param>
      <param name="maxMessages">Rozmiar buforu komunikatu.</param>
      <param name="state">Stan operacji wywołania zwrotnego.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Topics"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Trace">
      <summary>Pobiera źródło śladu używane do śledzenia realizacji kodu.</summary>
      <returns>Źródło śladu używane do śledzenia realizacji kodu.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions">
      <summary>Udostępnia metody rozszerzeń magistrali komunikatu SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Action{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate``1(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{``0,Microsoft.AspNet.SignalR.Messaging.Message},``0)">
      <summary>Wylicza komunikaty.</summary>
      <param name="messages">Lista zawierająca komunikaty do wyliczenia.</param>
      <param name="filter">Metoda filtrująca wyliczany komunikat.</param>
      <param name="onMessage">Metoda obsługująca każdy wyliczany komunikat.</param>
      <param name="state">Obiekt reprezentujący stan operacji.</param>
      <typeparam name="T">Typ parametru <paramref name="state" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Publish(Microsoft.AspNet.SignalR.Messaging.IMessageBus,System.String,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageResult">
      <summary>Reprezentuje wynik komunikatu.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</summary>
      <param name="terminal">Wartość true, aby wskazać, że jest to końcowy wynik komunikatu, w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</summary>
      <param name="messages">Tablica komunikatów skojarzonych z tym elementem <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</param>
      <param name="totalCount">Liczba komunikatów wypełnionych w tablicy komunikatów.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Messages">
      <summary>Pobiera interfejs <see cref="T:System.Collections.Generic.IList`1" /> skojarzony z wynikiem.</summary>
      <returns>Element <see cref="T:System.Collections.Generic.IList`1" /> skojarzony z wynikiem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Terminal">
      <summary>Pobiera lub ustawia wartość określającą, czy jest to końcowy wynik komunikatu.</summary>
      <returns>Wartość true, jeśli jest to końcowy wynik komunikatu, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.MessageResult.TerminalMessage">
      <summary>Określa, czy jest to końcowy wynik komunikatu.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.TotalCount">
      <summary>Pobiera lub ustawia liczbę komunikatów wypełnionych w tablicy komunikatów.</summary>
      <returns>Liczba komunikatów wypełnionych w tablicy komunikatów.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1">
      <summary>Reprezentuje magazyn komunikatu wspierany buforem pierścienia.</summary>
      <typeparam name="T">Typ elementów w magazynie.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" /> z określoną wydajnością.</summary>
      <param name="capacity">Minimalna wydajność magazynu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32,System.UInt32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" />.</summary>
      <param name="capacity">Minimalna wydajność magazynu.</param>
      <param name="offset">Przesunięcie pierwszego komunikatu w magazynie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.Add(`0)">
      <summary>Dodaje komunikat do magazynu i zwraca identyfikator nowo dodanego komunikatu.</summary>
      <returns>Identyfikator nowo dodanego komunikatu.</returns>
      <param name="message">Komunikat do dodania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessageCount">
      <summary>Pobiera liczbę komunikatów w magazynie.</summary>
      <returns>Liczba komunikatów w magazynie.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessages(System.UInt64,System.Int32)">
      <summary>Pobiera następną partię komunikatów, rozpoczynając od określonego identyfikatora. </summary>
      <returns>Następna partia komunikatów</returns>
      <param name="firstMessageId">Identyfikator pierwszego komunikatu.</param>
      <param name="maxMessages">Maksymalna liczba komunikatów do zwrócenia.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1">
      <summary>Reprezentuje wynik skojarzony z magazynem komunikatów.</summary>
      <typeparam name="T">Typ wyniku.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.#ctor(System.UInt64,System.ArraySegment{`0},System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1" />.</summary>
      <param name="firstMessageId">Identyfikator pierwszego komunikatu.</param>
      <param name="messages">Komunikat skojarzony z wynikiem.</param>
      <param name="hasMoreData">Wartość true, jeśli wynik zawiera więcej danych, w przeciwnym razie wartość false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.FirstMessageId">
      <summary>Pobiera identyfikator pierwszego komunikatu.</summary>
      <returns>Identyfikator pierwszego komunikatu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.HasMoreData">
      <summary>Pobiera informację, czy wynik zawiera więcej danych.</summary>
      <returns>Wartość true, jeśli wynik zawiera więcej danych, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.Messages">
      <summary>Pobiera komunikat skojarzony z wynikiem.</summary>
      <returns>Komunikat skojarzony z wynikiem.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration">
      <summary>Reprezentuje typowe ustawienia dla implementacji magistrali komunikatu skalowania.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.DisableQueuing">
      <summary>Kolejkowanie jest obecnie wyłączone.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.MaxQueueLength">
      <summary>Pobiera lub ustawia maksymalną długość wychodzącej kolejki wysyłania.</summary>
      <returns>Maksymalna długość wychodzącej kolejki wysyłania.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping">
      <summary>W tym miejscu nie będzie aktualizowana żadna zawartość. Nie należy tutaj dodawać materiału.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.Id"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.LocalKeyInfo"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.ServerCreationTime"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore">
      <summary>Represents a scale out mapping store on SignalR messaging.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.Add(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})">
      <summary>Adds a new scaleout mapping store.</summary>
      <param name="id">The identifier.</param>
      <param name="message">The message.</param>
      <param name="localKeyInfo">The local key information.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.GetEnumerator(System.UInt64)">
      <summary>Gets the enumerator for the mapping store.</summary>
      <returns>The enumerator for the mapping store.</returns>
      <param name="id">The identifier.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.MaxMapping">
      <summary>Gets the maximum numbers of mapping for this instance.</summary>
      <returns>The maximum numbers of mapping for this instance.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage">
      <summary>Represents a message to the scaleout backplane.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
      <param name="messages">The messages from SignalR.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.FromBytes(System.Byte[])">
      <summary>Creates a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class from the specified data in bytes.</summary>
      <returns>The created instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" />.</returns>
      <param name="data">The data in bytes.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.Messages">
      <summary>Gets or sets the messages from SignalR.</summary>
      <returns>The messages from SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ServerCreationTime">
      <summary>Gets or sets the time the message was created on the origin server.</summary>
      <returns>The time the message was created on the origin server.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ToBytes">
      <summary>Converts a <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</summary>
      <returns>The converted <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus">
      <summary>Reprezentuje wspólną klasę podstawową dla implementacji magistrali komunikatów skalowania w poziomie.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Close(System.Int32)">
      <param name="streamIndex">Indeks strumienia do zamknięcia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnError(System.Int32,System.Exception)">
      <summary>Zamyka określoną kolejkę do wysyłania komunikatów, tak że wszystkie wysyłki kończą nie asynchronicznie niepowodzeniem.</summary>
      <param name="streamIndex">Indeks strumienia do zamknięcia.</param>
      <param name="exception">Błąd, który wystąpił.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnReceived(System.Int32,System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)">
      <summary>Element wywoływany w przypadku odebrania obciążenia z systemu backplane.Jednocześnie powinno być aktywne tylko jedno wywołanie.</summary>
      <param name="streamIndex">Identyfikator strumienia.</param>
      <param name="id">Identyfikator ładunku w tym strumieniu.</param>
      <param name="message">Komunikat skalowania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Open(System.Int32)">
      <param name="streamIndex">Indeks strumienia do otwarcia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)">
      <summary>Publikuje komunikat z magistrali komunikatów skalowania w poziomie.</summary>
      <returns>Zadanie reprezentujące operację publikowania komunikatu.</returns>
      <param name="message">Komunikat do opublikowania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Wysyła komunikaty z magistrali komunikatów skalowania w poziomie SignalR.</summary>
      <returns>Zadanie reprezentujące operację wysyłania komunikatu.</returns>
      <param name="messages">Komunikaty do wysłania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Int32,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.StreamCount">
      <summary>Liczba strumieni nie może zmienić się w okresie czasu wystąpienia.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore">
      <summary>Represents a message store that is backed by a ring buffer.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.#ctor(System.UInt32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore" /> class.</summary>
      <param name="capacity">The minimum capacity of the store.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.Add(Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping)">
      <summary>Adds a message to the store and returns the ID of the newly added message.</summary>
      <returns>The ID of the newly added message.</returns>
      <param name="mapping">The mapping used in the store.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentCount">
      <summary>Gets or sets the number of message fragments in the store.</summary>
      <returns>The number of message fragments.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentSize">
      <summary>Gets or sets the size of the message fragment.</summary>
      <returns>The size of the message fragment.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessages(System.UInt64)">
      <summary>Gets the next batch of messages, beginning with the specified ID. </summary>
      <returns>The next batch of messages.</returns>
      <param name="firstMessageIdRequestedByClient">The first message ID requested by the client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessagesByMappingId(System.UInt64)">
      <summary>Gets the next batch of messages for the specified mapping ID.</summary>
      <returns>The next batch of messages.</returns>
      <param name="mappingId">The mapping ID.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.MaxMapping">
      <summary>Gets or sets the maximum mapping ID.</summary>
      <returns>The maximum mapping ID.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription">
      <summary>Reprezentuje skalowaną subskrypcję.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription" />.</summary>
      <param name="identity">Tożsamość subskrypcji.</param>
      <param name="eventKeys">Klucz zdarzeń dla subskrypcji.</param>
      <param name="cursor">Kursor zapisu.</param>
      <param name="streams">Strumień używany do skojarzenia z kursorami zapisu.</param>
      <param name="callback">Funkcja wywołania zwrotnego realizowana, gdy zmienia się stan subskrypcji.</param>
      <param name="maxMessages">Maksymalna liczba komunikatów przydzielonych dla tej subskrypcji.</param>
      <param name="counters">Obiekt używany w celu uzyskania dostępu do liczników wydajności subskrypcji.</param>
      <param name="state">Stan subskrypcji.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.BeforeInvoke(System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.WriteCursor(System.IO.TextWriter)">
      <summary>Zapisuje kursor przy użyciu określonego składnika zapisywania tekstu.</summary>
      <param name="textWriter">Składnik zapisywania tekstu używany do zapisywania kursora.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Subscription">
      <summary>Reprezentuje implementację klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.ISubscription" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.Subscription" />.</summary>
      <param name="identity">Tożsamość subskrypcji.</param>
      <param name="eventKeys">Lista zawierająca klucze zdarzenia dla subskrypcji.</param>
      <param name="callback">Funkcja wywołania zwrotnego realizowana, gdy zmienia się stan subskrypcji.</param>
      <param name="maxMessages">Maksymalna liczba komunikatów przydzielonych dla tej subskrypcji.</param>
      <param name="counters">Obiekt używany w celu uzyskania dostępu do liczników wydajności subskrypcji.</param>
      <param name="state">Stan subskrypcji.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.AddEvent(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.BeforeInvoke(System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Disposable">
      <summary>Pobiera lub ustawia metodę używaną do usuwania zasobów subskrypcji.</summary>
      <returns>Metoda używana do usuwania zasobów subskrypcji.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose(System.Boolean)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Identity"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Invoke(Microsoft.AspNet.SignalR.Messaging.MessageResult)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.MaxMessages"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.RemoveEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetEventTopic(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.UnsetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Work"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.WriteCursor(System.IO.TextWriter)">
      <summary>Zapisuje kursor przy użyciu określonego składnika zapisywania tekstu.</summary>
      <param name="textWriter">Składnik zapisywania tekstu używany do zapisywania kursora.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Topic">
      <summary>Reprezentuje temat na magistrali komunikatu SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.#ctor(System.UInt32,System.TimeSpan)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.Topic" />.</summary>
      <param name="storeSize">Rozmiar magazynu komunikatu.</param>
      <param name="lifespan">Żywotność tematu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.AddSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Dodaje określoną subskrypcję do listy.</summary>
      <param name="subscription">Subskrypcja do dodania.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.IsExpired">
      <summary>Pobiera wartość wskazującą, czy temat wygasł.</summary>
      <returns>Wartość true, jeśli temat wygasł, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.LastUsed">
      <summary>Pobiera lub ustawia ostatni czas użycia subskrypcji.</summary>
      <returns>Ostatni czas użycia subskrypcji.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.MarkUsed"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.RemoveSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Usuwa określoną subskrypcję z listy.</summary>
      <param name="subscription">Subskrypcja do usunięcia.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Store">
      <summary>Pobiera lub ustawia magazyn komunikatu.</summary>
      <returns>Magazyn komunikatu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.SubscriptionLock">
      <summary>Pobiera lub ustawia obiekt używany do blokowania tematu.</summary>
      <returns>Obiekt używany do blokowania tematu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Subscriptions">
      <summary>Pobiera lub ustawia listę zawierającą subskrypcje tematu.</summary>
      <returns>Lista zawierająca subskrypcje tematu.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup">
      <summary>Reprezentuje kolekcję tematów używaną jako odnośnik.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Clear">
      <summary>Usuwa wszystkie tematy z kolekcji.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.ContainsKey(System.String)">
      <summary>Określa, czy temat z określonym kluczem znajduje się w kolekcji.</summary>
      <returns>Wartość true, jeśli temat z określonym kluczem znajduje się w kolekcji; w przeciwnym razie wartość false.</returns>
      <param name="key">Klucz tematu.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Count">
      <summary>Pobiera liczbę wszystkich tematów (ogólnych i grup) w kolekcji.</summary>
      <returns>Liczba wszystkich tematów (ogólnych i grup) w kolekcji.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetEnumerator">
      <summary>Pobiera moduł wyliczający, który iteruje po kolekcji.</summary>
      <returns>Moduł wyliczający, który może być używany do iterowania po kolekcji.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetOrAdd(System.String,System.Func{System.String,Microsoft.AspNet.SignalR.Messaging.Topic})">
      <summary>Dodaje temat do kolekcji przy użyciu określonej funkcji, jeśli klucz jeszcze nie istnieje.</summary>
      <returns>Wygenerowany temat dla określonego klucza.</returns>
      <param name="key">Klucz tematu do dodania.</param>
      <param name="factory">Funkcja używana do wygenerowania tematu dla klucza.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Item(System.String)">
      <summary>Pobiera temat z określonym kluczem.</summary>
      <returns>Temat z określonym kluczem (jeśli zostanie znaleziony); wartość null, jeśli temat nie zostanie znaleziony.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.System#Collections#IEnumerable#GetEnumerator">
      <summary>Pobiera moduł wyliczający, który iteruje po kolekcji.</summary>
      <returns>Moduł wyliczający, który może być używany do iterowania po kolekcji.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryGetValue(System.String,Microsoft.AspNet.SignalR.Messaging.Topic@)">
      <summary>Próbuje pobrać temat z określonym kluczem z kolekcji.</summary>
      <returns>Wartość true, jeśli znaleziono klucz; w przeciwnym razie wartość false.</returns>
      <param name="key">Klucz do uzyskania.</param>
      <param name="topic">Gdy metoda zwróci wartość, zawiera pobrany temat.Ten parametr jest przekazywany jako niezainicjowany.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryRemove(System.String)">
      <summary>Próbuje usunąć i zwrócić temat z określonym kluczem z kolekcji.</summary>
      <returns>Usunięty temat.</returns>
      <param name="key">Klucz tematu do usunięcia.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerRequest">
      <summary>Reprezentuje żądanie serwera.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerRequest" />.</summary>
      <param name="environment">Środowisko.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Cookies">
      <summary>Pobiera pliki cookie skojarzone z serwerem.</summary>
      <returns>Pliki cookie skojarzone z serwerem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Environment"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Headers">
      <summary>Pobiera nagłówki skojarzone z żądaniem.</summary>
      <returns>Nagłówki skojarzone z żądaniem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.LocalPath"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.QueryString">
      <summary>Pobiera kolekcję zmiennych ciągu zapytania żądania.</summary>
      <returns>Kolekcja zmiennych ciągu zapytania serwera.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.ReadForm"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Url">
      <summary>Pobiera informacje o adresie URL bieżącego żądania.</summary>
      <returns>Obiekt <see cref="T:System.Uri" /> zawierający informacje dotyczące adresu URL bieżącego żądania.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.User">
      <summary>Pobiera użytkownika dla tego serwera.</summary>
      <returns>Użytkownik dla tego serwera.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerResponse">
      <summary>Reprezentuje informacje zwrotne serwera w odpowiedzi na żądanie.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerResponse" />.</summary>
      <param name="environment">Środowisko.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.CancellationToken">
      <summary>Pobiera token anulowania skojarzony z odpowiedzią.</summary>
      <returns>Token anulowania skojarzony z odpowiedzią.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.ContentType">
      <summary>Pobiera lub ustawia typ zawartości skojarzonej z odpowiedzią.</summary>
      <returns>Typ zawartości skojarzonej z odpowiedzią.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Flush">
      <summary>Czyści to wystąpienie.</summary>
      <returns>Wyczyszczone wystąpienie.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Zapisuje odpowiedź przy użyciu skojarzonego segmentu tablicy.</summary>
      <param name="data">Tablica segmentu.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware">
      <summary>Represents the middleware used by the hub dispatcher.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware">
      <summary>Reprezentuje oprogramowanie pośredniczące dla trwałego połączenia.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager">
      <summary>Reprezentuje interfejs, który udostępnia właściwości umożliwiające śledzenie wykonywanie kodu.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Item(System.String)">
      <summary>Pobiera element <see cref="T:System.Diagnostics.TraceSource" /> z określoną nazwą źródła.</summary>
      <returns>Element <see cref="T:System.Diagnostics.TraceSource" /> z określoną nazwą dla źródła.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Switch">
      <summary>Pobiera przełącznik, który kontroluje śledzenie realizacji kodu i dane wyjściowe debugowania.</summary>
      <returns>Obiekt <see cref="T:System.Diagnostics.SourceSwitch" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.TraceManager">
      <summary>Udostępnia właściwości umożliwiające śledzenie realizacji kodu.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Tracing.TraceManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor(System.Diagnostics.TextWriterTraceListener)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Item(System.String)">
      <summary>Pobiera element <see cref="T:System.Diagnostics.TraceSource" /> z określoną nazwą źródła.</summary>
      <returns>Element <see cref="T:System.Diagnostics.TraceSource" /> z określoną nazwą dla źródła.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Switch">
      <summary>Pobiera przełącznik, który kontroluje śledzenie realizacji kodu i dane wyjściowe debugowania.</summary>
      <returns>Obiekt <see cref="T:System.Diagnostics.SourceSwitch" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport">
      <summary>Reprezentuje element Forever Frame Transport.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport" />.</summary>
      <param name="context">Kontekst hosta.</param>
      <param name="resolver">Mechanizm rozpoznawania zależności.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inicjalizuje obiekt odpowiedzi.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację odpowiedzi inicjalizacji.</returns>
      <param name="connection">Połączenie transportu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.KeepAlive">
      <summary>Podtrzymuje aktywne połączenie.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację podtrzymania działania.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.OutputWriter">
      <summary>Pobiera edytor tekstu HTML, który zapisuje odpowiedź kontekstu do strumienia wyjściowego.</summary>
      <returns>Edytor tekstu HTML, który zapisuje odpowiedź kontekstu do strumienia wyjściowego.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Wysyła określoną odpowiedź kontekstu.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację wysyłania.</returns>
      <param name="response">Wiadomość do wysłania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport">
      <summary>W tym miejscu nie będzie aktualizowana żadna zawartość. Nie należy tutaj dodawać materiału.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <param name="context">Kontekst hosta.</param>
      <param name="resolver">Mechanizm rozpoznawania zależności.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <param name="context">Kontekst hosta.</param>
      <param name="jsonSerializer">Element jsonSerializer.</param>
      <param name="heartbeat">Puls transportu.</param>
      <param name="performanceCounterWriter">Edytor licznika wydajności.</param>
      <param name="traceManager">Menedżer śledzenia.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Connected">
      <summary>Pobiera lub ustawia funkcję połączenia dla elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <returns>Funkcja połączenia dla elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Udostępnia operację kolejkowania dla transportów.</summary>
      <returns>Kolejkuje operację dla transportów.</returns>
      <param name="writeAsync">Zapisuje asynchronicznie.</param>
      <param name="state">Obiekt stanu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializePersistentState">
      <summary>Inicjuje trwały stan nieustannego transportu.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inicjuje odpowiedź połączenia dla nieustannego transportu.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Połączenie transportu.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.JsonSerializer">
      <summary>Pobiera element JsonSerializer dla nieustannego transportu.</summary>
      <returns>Element JsonSerializer dla nieustannego transportu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.LastMessageId">
      <summary>Pobiera identyfikator ostatniego komunikatu dla nieustannego transportu.</summary>
      <returns>Identyfikator ostatniego komunikatu dla nieustannego transportu.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSending(System.String)">
      <summary>Udostępnia ładunki przy wysyłaniu transportu.</summary>
      <param name="payload">Ładunek ciągu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSendingResponse(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Udostępnia odpowiedź dla metod wysyłania.</summary>
      <param name="response">Odpowiedź na połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Udostępnia połączenie do przetwarzania żądania.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Połączenie transportu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequestCore(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Udostępnia żądanie do przetwarzania połączenia dla transportu.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Połączenie transportu.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Received">
      <summary>Pobiera lub ustawia funkcję odbierania dla nieustannego transportu.</summary>
      <returns>Funkcja odbierania dla nieustannego transportu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Reconnected">
      <summary>Pobiera lub ustawia ponownie połączoną funkcję dla nieustannego transportu.</summary>
      <returns>Funkcja ponownego połączenia dla nieustannego transportu.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Wysyła odpowiedź na połączenie dla nieustannego transportu.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="response">Trwała odpowiedź.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(System.Object)">
      <summary>Wysyła obiekt do nieustannego transportu.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="value">Wartość do wysłania.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.TransportConnected">
      <summary>Pobiera lub ustawia połączony transport klienta dla elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <returns>Połączony transport dla elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITrackingConnection">
      <summary> Reprezentuje połączenie, które może być śledzone przez element <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" />. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary> Stosuje nowy stan dla połączenia. </summary>
      <param name="states">Jedna z wartości wyliczenia <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates" />.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.CancellationToken"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectionId"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectTask"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Disconnect"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.DisconnectThreshold"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.End"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsTimedOut"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.KeepAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.SupportsKeepAlive"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Timeout"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Url"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransport">
      <summary>Reprezentuje transport komunikujący się.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Connected">
      <summary>Pobiera lub ustawia połączenie zwrotne, które jest wywoływane, gdy wstępne połączenie łączy się z transportem.</summary>
      <returns>Zwraca wartość <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.ConnectionId">
      <summary>Pobiera lub ustawia identyfikator transportu.</summary>
      <returns>Zwraca wartość <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Disconnected">
      <summary>Pobiera lub ustawia wywołanie zwrotne, które jest wywoływane, gdy transport rozłączy się.</summary>
      <returns>Zwraca wartość <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Przetwarza określony element <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" /> dla tego transportu.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task" />, którego działanie jest kończone, gdy transport zakończy przetwarzanie połączenia.</returns>
      <param name="connection">Element <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" /> do przetworzenia.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Received">
      <summary>Pobiera lub ustawia wywołanie zwrotne, które jest wywoływane, gdy transport odbiera dane.</summary>
      <returns>Zwraca wartość <see cref="T:System.Func`2" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Reconnected">
      <summary>Pobiera lub ustawia wywołanie zwrotne, które jest wywoływane, gdy transport łączy się ponownie.</summary>
      <returns>Zwraca wartość <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.Send(System.Object)">
      <summary>Wysyłane dane za pomocą transportu.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task" />, którego działanie jest kończone po zakończeniu wysyłania.</returns>
      <param name="value">Wartość do wysłania.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.TransportConnected">
      <summary>Pobiera lub ustawia wywołanie zwrotne, które jest wywoływane, gdy transport łączy się.</summary>
      <returns>Zwraca wartość <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection">
      <summary>Reprezentuje transport dla połączenia.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Odbiera dane subskrypcji od transportu.</summary>
      <returns>Dane subskrypcji od transportu.</returns>
      <param name="messageId">Identyfikator komunikatu dla subskrypcji.</param>
      <param name="callback">Metoda obsługująca odebrany komunikat.</param>
      <param name="maxMessages">Rozmiar buforu komunikatu.</param>
      <param name="state">Stan połączenia transportu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat">
      <summary>Zarządza śledzeniem stanu połączeń.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Dodaje nowe połączenie do listy śledzonych połączeń.</summary>
      <returns>Zastąpione połączenie (jeśli istnieje).</returns>
      <param name="connection">Połączenie do dodania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.GetConnections">
      <summary>Pobiera listę śledzonych połączeń.</summary>
      <returns>Lista połączeń.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Oznacza bieżące połączenie jako aktywne.</summary>
      <param name="connection">Oznaczenie połączenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Usuwa połączenie z listy śledzonych połączeń.</summary>
      <param name="connection">Połączenie do usunięcia.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportManager">
      <summary>Zarządza transportami dla połączeń.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Pobiera określony transport dla określonego elementu <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</summary>
      <returns>Element <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" /> dla określonego elementu <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</returns>
      <param name="hostContext">Element <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> dla bieżącego żądania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.SupportsTransport(System.String)">
      <summary>Określa, czy określony transport jest obsługiwany.</summary>
      <returns>Wartość True, jest transport jest obsługiwany, w przeciwnym razie wartość False.</returns>
      <param name="transportName">Nazwa transportu do przetestowania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport">
      <summary>W tym miejscu nie będzie aktualizowana żadna zawartość. Nie należy tutaj dodawać materiału.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport" />.</summary>
      <param name="context">Kontekst hosta.</param>
      <param name="resolver">Mechanizm rozpoznawania zależności.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Connected">
      <summary>Pobiera lub ustawia połączoną funkcję.</summary>
      <returns>Połączona funkcja.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.DisconnectThreshold">
      <summary>Pobiera próg rozłączenia.</summary>
      <returns>Próg rozłączenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.IsConnectRequest">
      <summary>Pobiera wartość wskazującą, czy transport jest żądaniem połączenia.</summary>
      <returns>Wartość true, jeśli transport jest żądaniem połączenia, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Przetwarza żądanie połączenia.</summary>
      <returns>Zadanie reprezentujące operację żądania.</returns>
      <param name="connection">Połączenie do przetworzenia.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Received">
      <summary>Pobiera lub ustawia odebraną funkcję.</summary>
      <returns>Odebrana funkcja.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Reconnected">
      <summary>Pobiera lub ustawia ponownie połączony transport.</summary>
      <returns>Zadanie ponownie łączące transport.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Wysyła odpowiedź na transport.</summary>
      <returns>Zadanie reprezentujące operację wysyłania odpowiedzi.</returns>
      <param name="response">Wiadomość do wysłania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(System.Object)">
      <summary>Wysyła długi transport sondowania z daną wartością.</summary>
      <returns>Zadanie reprezentujące operację wysyłania transportu długiego sondowania.</returns>
      <param name="value">Wartość.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.SupportsKeepAlive">
      <summary>Pobiera wartość wskazującą, czy transport obsługuje potrzymanie aktywności.</summary>
      <returns>Wartość true, jeśli transport obsługuje podtrzymanie aktywności, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.TransportConnected">
      <summary>Pobiera lub ustawia połączony transport.</summary>
      <returns>Zadanie łączące transport.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse">
      <summary> Reprezentuje odpowiedź na połączenie. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor(System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{System.IO.TextWriter})">
      <summary>Tworzy nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
      <param name="exclude">Filtr określający, czy komunikaty mają być zapisywane w kliencie.</param>
      <param name="writeCursor">Edytor kursora.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Aborted">
      <summary>Pobiera lub ustawia wartość określającą, czy zostało wymuszone zamknięcie połączenia.</summary>
      <returns>Wartość true, jeśli wymuszono zamknięcie połączenia; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Disconnect">
      <summary>Pobiera lub ustawia wartość określającą, czy połączenie odebrało polecenie zakończenia połączenia.</summary>
      <returns>Wartość true, jeśli połączenie odebrało polecenie zakończenia połączenia; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.GroupsToken">
      <summary>Pobiera lub ustawia podpisany token reprezentujący listę grup.</summary>
      <returns>Grupy tokenów.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Initializing">
      <summary>Wartość True, jeśli połączenie jest w trakcie inicjalizacji</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.LongPollDelay">
      <summary>Pobiera lub ustawia czas, jaki klient długiego sondowania powinien zaczekać na ponowne nawiązanie połączenia w przypadku nieodebrania żadnych danych.</summary>
      <returns>Czas, jaki klient długiego sondowania powinien zaczekać na ponowne nawiązanie połączenia w przypadku nieodebrania żadnych danych.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Messages">
      <summary>Pobiera lub ustawia listę komunikatów do wysłania do odbieranego połączenia.</summary>
      <returns>Lista komunikatów do wysłania do odbieranego połączenia.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Microsoft#AspNet#SignalR#Json#IJsonWritable#WriteJson(System.IO.TextWriter)">
      <summary>Serializuje tylko wymagane składniki klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" /> do ciągu JSON przy użyciu klasy JsonTextWriter struktury Json.NET w celu zwiększenia wydajności.</summary>
      <param name="writer">Klasa <see cref="T:System.IO.TextWriter" /> odbierająca serializację ciągu JSON.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Reconnect">
      <summary>Wartość true, jeśli klient ma podjąć próbę ponownego nawiązania połączenia.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Terminal"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.TotalCount">
      <summary>Pobiera lub ustawia całkowitą liczbę komunikatów wysłanych do odbieranego połączenia.</summary>
      <returns>Całkowita liczba komunikatów wysłanych do odbieranego połączenia.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport">
      <summary>Udostępnia transport do wysłania zdarzeń z serwera elementu SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</summary>
      <param name="context">Kontekst hosta.</param>
      <param name="resolver">Mechanizm rozpoznawania elementu IDependency.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inicjalizuje odpowiedź do elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />.</summary>
      <returns>Inicjalizuje odpowiedź do elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />.</returns>
      <param name="connection">Inicjalizacja połączenia transportu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.KeepAlive">
      <summary>Zwraca metodę podtrzymania działania, aby ustanowić trwałe połączenie z zasobem internetowym.</summary>
      <returns>Metoda podtrzymania działania, aby ustanowić trwałe połączenie z zasobem internetowym.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Wysyła trwałą odpowiedź do elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</summary>
      <returns>Trwała odpowiedź do wysłania do elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</returns>
      <param name="response">Trwała odpowiedź.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates">
      <summary>Wylicza atrybut elementu TransportConnectionState.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Aborted">
      <summary>Stan Przerwane połączenie.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Added">
      <summary>Stan Dodane połączenie.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disconnected">
      <summary>Stan Rozłączone połączenie.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.DisconnectMessageReceived">
      <summary>Stan Odebrano komunikat o rozłączeniu.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disposed">
      <summary>Stan Usunięte połączenie.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.HttpRequestEnded">
      <summary>Stan połączenia Żądanie HTTP zakończone.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.None">
      <summary>Stan Brak połączenia.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.QueueDrained">
      <summary>Stan połączenia Opuszczona kolejka.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Removed">
      <summary>Stan Usunięte połączenie.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Replaced">
      <summary>Stan Zastąpione połączenie.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase">
      <summary>W tym miejscu nie będzie aktualizowana żadna zawartość. Nie należy tutaj dodawać materiału.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <param name="context">Kontekst hosta.</param>
      <param name="heartbeat">Puls transportu.</param>
      <param name="performanceCounterManager">Menedżer licznika wydajności.</param>
      <param name="traceManager">Menedżer śledzenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort">
      <summary>Przerywa proces bieżącego zadania dla elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <returns>Proces bieżącego zadania do przerwania dla elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort(System.Boolean)">
      <summary>Przerywa proces bieżącego zadania dla elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <returns>Proces bieżącego zadania do przerwania dla elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</returns>
      <param name="clean">Wskazuje, czy wyczyścić wszystkie zadania w przerwanym procesie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary>Stosuje stan połączenia transportu dla podstawy rozłączenia.</summary>
      <param name="states">Stan połączenia transportu.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CancellationToken">
      <summary>Pobiera token anulowania reprezentujący okres istnienia połączenia.</summary>
      <returns>Token anulowania reprezentujący okres istnienia połączenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Connection">
      <summary>Pobiera lub ustawia połączenie transportu dla podstawy rozłączenia transportu.</summary>
      <returns>Połączenie transportu dla podstawy rozłączenia transportu.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionEndToken">
      <summary>Pobiera połączenie, aby zakończyć operację dla tego tokena.</summary>
      <returns>Połączenie, aby zakończyć operację dla tego tokena.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionId">
      <summary>Pobiera lub ustawia identyfikator połączenia.</summary>
      <returns>Ciąg zawierający identyfikator połączenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectTask"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Context">
      <summary>Pobiera kontekst hosta skojarzony z podstawą rozłączenia transportu.</summary>
      <returns>Kontekst hosta skojarzony z podstawą rozłączenia transportu.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CreateResponseWriter">
      <summary>Reprezentuje edytor do tworzenia odpowiedzi dla podstawy rozłączenia transportu.</summary>
      <returns>Edytor do tworzenia odpowiedzi dla podstawy rozłączenia transportu.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnect">
      <summary>Powoduje rozłączenie połączenia.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnected">
      <summary>Pobiera lub ustawia rozłączoną właściwość dla transportu połączenia.</summary>
      <returns>Rozłączona właściwość dla transportu połączenia.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.DisconnectThreshold">
      <summary>Pobiera zakres czasu do czekania po ustaniu połączenia zanim zostanie zainicjowane rozłączanie połączenia.</summary>
      <returns>Zwraca wartość <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose">
      <summary>Zwalnia wszystkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose(System.Boolean)">
      <summary>Zwalnia zasoby niezarządzane używane przez klasę <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
      <param name="disposing">Wartość true, aby zwolnić zasoby zarządzane i niezarządzane, a wartość false, aby zwolnić tylko zasoby niezarządzane.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.End">
      <summary>Rozłącza połączenie.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
      <summary>Reprezentuje obiekt umożliwiający zakończenie operacji kolejki.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="writeAsync">Zapisuje asynchronicznie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Reprezentuje obiekt umożliwiający zakończenie operacji kolejki.</summary>
      <returns>Obiekt reprezentujący koniec operacji kolejki.</returns>
      <param name="writeAsync">Zapisuje asynchronicznie.</param>
      <param name="state">Stan.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Heartbeat">
      <summary>Pobiera puls transportu, aby zarządzać stanem śledzenia połączeń.</summary>
      <returns>Puls transportu, aby zarządzać stanem śledzenia połączeń.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.HostShutdownToken"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IncrementErrors">
      <summary>Zwiększa narastająco błędy do podstawy rozłączenia transportu.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.InitializePersistentState">
      <summary>Inicjuje trwały stan dla podstawy rozłączenia transportu.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAbortRequest">
      <summary>Pobiera wartość reprezentującą wykonanie przez połączenie żądania przerwania.</summary>
      <returns>Wartość true, jeśli połączenie wykona żądanie przerwania, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAlive">
      <summary>Pobiera wartość wskazującą, czy połączenie jest aktywne.</summary>
      <returns>Wartość true, jeśli połączenie jest aktywne, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsConnectRequest">
      <summary>Pobiera wartość reprezentującą, czy połączenia wykonują żądanie.</summary>
      <returns>Wartość true, jeśli połączenia wykonują żądanie, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsTimedOut">
      <summary>Pobiera wartość wskazującą, czy połączenie przekroczyło limit czasu.</summary>
      <returns>Wartość true, jeśli przekroczono limit czasu połączenia, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.KeepAlive">
      <summary>Wysyła sygnał ping podtrzymywania połączenia.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.OutputWriter">
      <summary>Pobiera edytora produktu wyjściowego, który może zapisać sekwencyjną serię znaków.</summary>
      <returns>Edytor produktu wyjściowego, który może zapisać sekwencyjną serię znaków.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.SupportsKeepAlive">
      <summary>Pobiera wartość wskazującą, czy transport obsługuje sygnał podtrzymywania połączenia.</summary>
      <returns>Wartość true, jeśli transport obsługuje podtrzymanie aktywności, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Timeout">
      <summary>Powoduje przekroczenie limitu czasu przez połączenie.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Trace">
      <summary>Pobiera źródło do śledzenia realizacji kodu i kojarzy komunikaty śledzenia z ich źródłem.</summary>
      <returns>Źródło do śledzenia realizacji kodu i kojarzy komunikaty śledzenia z ich źródłem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Url">
      <summary>Pobiera identyfikator URI połączenia.</summary>
      <returns>Identyfikator URI połączenia.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat">
      <summary>Reprezentuje domyślną implementację elementu <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />.</summary>
      <param name="resolver">Element <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Dodaje nowe połączenie do listy śledzonych połączeń.</summary>
      <param name="connection">Połączenie do dodania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose">
      <summary>Zwalnia wszystkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose(System.Boolean)">
      <summary>Zwalnia zasoby niezarządzane używane przez klasę <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
      <param name="disposing">Wartość true powoduje zwolnienie zasobów zarządzanych i niezarządzanych, a wartość false powoduje zwolnienie tylko zasobów niezarządzanych.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.GetConnections">
      <summary>Pobiera listę śledzonych połączeń.</summary>
      <returns>Lista połączeń.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Oznacza bieżące połączenie jako aktywne.</summary>
      <param name="connection">Oznaczenie połączenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Usuwa połączenie z listy śledzonych połączeń.</summary>
      <param name="connection">Połączenie do usunięcia.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportManager">
      <summary>Domyślna implementacja klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportManager" />.</summary>
      <param name="resolver">Domyślny element <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Pobiera określony transport dla określonego elementu <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</summary>
      <returns>Element <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" /> dla określonego elementu <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</returns>
      <param name="hostContext">Element <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> dla bieżącego żądania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Register(System.String,System.Func{Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransport})">
      <summary>Dodaje nowy transport do listy obsługiwanych transportów.</summary>
      <param name="transportName">Określony transport.</param>
      <param name="transportFactory">Metoda fabryki dla określonego transportu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Remove(System.String)">
      <summary>Usuwa transport z listy obsługiwanych transportów.</summary>
      <param name="transportName">Określony transport.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.SupportsTransport(System.String)">
      <summary>Określa, czy określony transport jest obsługiwany.</summary>
      <returns>Wartość True, jest transport jest obsługiwany, w przeciwnym razie wartość False.</returns>
      <param name="transportName">Nazwa transportu do przetestowania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport">
      <summary>W tym miejscu nie będzie aktualizowana żadna zawartość. Nie należy tutaj dodawać materiału.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport" />.</summary>
      <param name="context">Kontekst hosta.</param>
      <param name="resolver">Mechanizm rozpoznawania zależności.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CancellationToken">
      <summary>Odbiera token anulowania użyty w przypadku transportu.</summary>
      <returns>Token anulowania użyty w przypadku transportu.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CreateResponseWriter"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.IsAlive">
      <summary>Pobiera wartość wskazującą, czy transport jest aktywny.</summary>
      <returns>Wartość true, jeśli transport jest aktywny, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.KeepAlive">
      <summary>Podtrzymuje aktywność transportu.</summary>
      <returns>Zadanie podtrzymujące aktywność transportu.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Przetwarza żądanie połączenia.</summary>
      <returns>Zadanie reprezentujące operację żądania połączenia.</returns>
      <param name="connection">Połączenie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Wysyła odpowiedź gniazda sieci Web.</summary>
      <returns>Zadanie reprezentujące operację wysyłania odpowiedzi.</returns>
      <param name="response">Wiadomość do wysłania.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(System.Object)">
      <summary>Wysyła wartość transportu.</summary>
      <returns>Zadanie reprezentujące operację wysyłania wartości transportu.</returns>
      <param name="value">Wartość do wysłania.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler">
      <summary>Reprezentuje wystąpienie zarządzające gniazdami sieci Web SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.#ctor(System.Nullable{System.Int32})"></member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Close">
      <summary>Zamyka wystąpienie.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Error">
      <summary>Pobiera lub ustawia błąd podczas obsługi gniazda sieci Web.</summary>
      <returns>Błąd podczas obsługi gniazda sieci Web.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.MaxIncomingMessageSize">
      <summary>Pobiera maksymalny rozmiar wiadomości przychodzącej.</summary>
      <returns>Maksymalny rozmiar wiadomości przychodzącej.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnClose(System.Boolean)">
      <summary>Występuje, gdy ta instancja jest zamknięta.</summary>
      <param name="clean">Wartość true do usunięcia śladów.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnError">
      <summary>Zgłasza zdarzenie, gdy wystąpi błąd podczas działania programu obsługi.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.Byte[])">
      <summary>Zgłasza zdarzenie, gdy zostaje otrzymany komunikat.</summary>
      <param name="message">Komunikat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.String)">
      <summary>Zgłasza zdarzenie, gdy zostaje otrzymany komunikat.</summary>
      <param name="message">Komunikat.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnOpen">
      <summary>Zgłasza zdarzenie, gdy to zdarzenie jest otwarte.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.ProcessWebSocketRequestAsync(System.Net.WebSockets.WebSocket,System.Threading.CancellationToken)">
      <summary>Przetwarza asynchronicznie żądanie otrzymane przez program obsługi.</summary>
      <returns>Wyniki operacji.</returns>
      <param name="webSocket">Gniazdo sieci Web.</param>
      <param name="disconnectToken">Token rozłączenia.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Send(System.String)">
      <summary>Wysyła komunikat skojarzoną z programem obsługi.</summary>
      <returns>Wysłany komunikat.</returns>
      <param name="message">Wartość do wysłania.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.WebSocket">
      <summary>Pobiera lub ustawia gniazdo sieci Web.</summary>
      <returns>Gniazdo sieci Web.</returns>
    </member>
    <member name="T:Owin.ObsoleteOwinExtensions"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="T:Owin.OwinExtensions">
      <summary>Reprezentuje połączenie dla rozszerzeń Owin.</summary>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder)">
      <summary>Mapuje koncentratory SignalR do potoku konstruktora aplikacji w „/signalr”.</summary>
      <returns>Zwraca wartość <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Konstruktor aplikacji.</param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Mapuje koncentratory SignalR do potoku konstruktora aplikacji w „/signalr”.</summary>
      <returns>Zwraca wartość <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Konstruktor aplikacji.</param>
      <param name="configuration">Element <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /> do użycia. </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String)">
      <summary>Mapuje określony element <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> SignalR na potok konstruktora aplikacji w określonej ścieżce. </summary>
      <returns>Zwraca wartość <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Konstruktor aplikacji.</param>
      <param name="path">  Ścieżka mapowania elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
      <typeparam name="TConnection">Typ elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Mapuje określony element <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> SignalR na potok konstruktora aplikacji w określonej ścieżce. </summary>
      <returns>Zwraca wartość <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Konstruktor aplikacji.</param>
      <param name="path">Ścieżka do mapowania stałego połączenia.</param>
      <param name="configuration">Element <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> do użycia. </param>
      <typeparam name="TConnection">Typ elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Mapuje koncentratory SignalR do potoku konstruktora aplikacji w określonej ścieżce.</summary>
      <returns>Zwraca wartość <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Konstruktor aplikacji.</param>
      <param name="path">Ścieżka do mapowania koncentratorów signalr.</param>
      <param name="configuration">Element <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /> do użycia. </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Mapuje określony element <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> na potok konstruktora aplikacji w określonej ścieżce. </summary>
      <returns>Zwraca wartość <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Konstruktor aplikacji.</param>
      <param name="path">Ścieżka do mapowania stałego połączenia.</param>
      <param name="connectionType">Typ elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
      <param name="configuration">Element <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> do użycia. </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder)">
      <summary>Dodaje koncentratory SignalR do potoku konstruktora aplikacji.</summary>
      <param name="builder">Konstruktor aplikacji.</param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder)">
      <summary>Dodaje określony element <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> SignalR do konstruktora aplikacji. </summary>
      <param name="builder">Konstruktor aplikacji</param>
      <typeparam name="TConnection">Typ elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <param name="builder">Konstruktor aplikacji.</param>
      <param name="configuration">Element <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> do użycia.</param>
      <typeparam name="TConnection">  Dodaje określony element <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> SignalR do konstruktora aplikacji. </typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Dodaje koncentratory SignalR do potoku konstruktora aplikacji.</summary>
      <param name="builder">Konstruktor aplikacji.</param>
      <param name="configuration">Element <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /> do użycia. </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Dodaje określony element <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> SignalR do konstruktora aplikacji. </summary>
      <param name="builder">Konstruktor aplikacji.</param>
      <param name="connectionType">Typ elementu <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
      <param name="configuration">Element <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> do użycia. </param>
    </member>
    <member name="T:System.Diagnostics.TraceSourceExtensions">
      <summary>Provides extension methods for used by SignalR.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace error message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace warning message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
  </members>
</doc>